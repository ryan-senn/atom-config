{
  "_args": [
    [
      {
        "raw": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
        "spec": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/apm-install-dir-118226-16895-h4khmy.74m0p2pgb9"
    ]
  ],
  "_from": "../d-118226-16895-2qzx59.19igxecdi/package.tgz",
  "_id": "ide-purescript@0.22.0",
  "_inCache": true,
  "_location": "/ide-purescript",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
    "spec": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118226-16895-2qzx59.19igxecdi/package.tgz",
  "_shasum": "ed5b6a65a2787d2d7203ad502b95228063d8b1b4",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/d-118226-16895-2qzx59.19igxecdi/package.tgz",
  "_where": "/private/var/folders/c7/bwy7gs5d5rl3ly2c1zblbzy00000gn/T/apm-install-dir-118226-16895-h4khmy.74m0p2pgb9",
  "activationCommands": {
    "atom-workspace": [
      "ide-purescript:search",
      "ide-purescript:build",
      "ide-purescript:show-tooltip",
      "ide-purescript:pursuit-search",
      "ide-purescript:pursuit-search-modules",
      "ide-purescript:add-module-import",
      "ide-purescript:add-explicit-import",
      "ide-purescript:search",
      "ide-purescript:case-split",
      "ide-purescript:add-clause",
      "ide-purescript:fixTypo",
      "ide-purescript:psci-open",
      "ide-purescript:psci-send-line",
      "ide-purescript:psci-send-selection",
      "ide-purescript:restart-psc-ide",
      "ide-purescript:start-psc-ide",
      "ide-purescript:stop-psc-ide"
    ]
  },
  "activationHooks": [
    "language-purescript:grammar-used"
  ],
  "bugs": {
    "url": "https://github.com/nwolverson/atom-ide-purescript/issues"
  },
  "consumedServices": {
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    },
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    }
  },
  "dependencies": {
    "atom-languageclient": "0.8.3",
    "atom-package-deps": "^4.5.0",
    "atom-space-pen-views": "^2.1.0",
    "purescript-language-server": "^0.7.1"
  },
  "description": "PureScript support for completion, build and assistance with Atom IDE",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.23"
  },
  "homepage": "https://github.com/nwolverson/atom-ide-purescript#readme",
  "keywords": [
    "ide",
    "atom-ide",
    "purescript",
    "language-server-protocol"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "ide-purescript",
  "optionalDependencies": {},
  "package-deps": [
    "language-purescript",
    "atom-ide-ui"
  ],
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "code-format.range": {
      "versions": {
        "0.1.0": "provideCodeFormat"
      }
    },
    "code-highlight": {
      "versions": {
        "0.1.0": "provideCodeHighlight"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    },
    "code-actions": {
      "versions": {
        "0.1.0": "provideCodeActions"
      }
    }
  },
  "readme": "# ide-purescript package for Atom\n\n[![Build Status](https://travis-ci.org/nwolverson/atom-ide-purescript.svg?branch=master)](https://travis-ci.org/nwolverson/atom-ide-purescript)\n\nThis package provides editor support for PureScript projects in Atom, based on a [Language Server](https://github.com/nwolverson/purescript-language-server) which uses the `purs` compiler IDE server functionality,\nwith UI provided via the atom-ide framework.\n\nThis package provides:\n  * [Autocomplete](#autocomplete)\n  * [Tooltips](#tooltips)\n  * [Go-to-definition](#go-to-definition)\n  * [Pursuit lookup](#pursuit-lookup) and local search\n  * [PSCI](#psci)\n  * [Build](#build) and error reporting\n  * [Quick-Fix](#error-suggestions--quick-fix)\n  * [Case-Split](#case-split--add-clause)\n\nPackage should trigger on opening a `.purs` file or running any PureScript/PSCI command from the menu bar or command palette.\n\n## Installation and General Use\n\nFor best results (and default settings) install dependencies:\n\n  * `purs` (compiler) 0.8.5 or >= 0.9.1 (includes `psc-ide-server`/ `ide server` subcommand as standard)\n    * 0.9.2 required for go-to definition, 0.9.x for some compiler suggestions\n  * `pulp` >= 8.0.0 (appropriate for your `psc` version). *>=10.0.0 recommended* to use default build command\n\nRequired atom packages - these should be auto-installed by starting the package, eg by running any PureScript command.\n  * [language-purescript](https://atom.io/packages/language-purescript)\n  * [atom-ide-ui](https://github.com/facebook-atom/atom-ide-ui/)\n\nFor use with older versions of pulp, or for alternative build tools and configuration tips, [see below](#build). In brief\nthe build command is configurable, but should output JSON errors.\n\n## IDE server\n\nThis package runs a langauge server process, which itself starts a compiler server process, `purs ide server`\n(previously `psc-ide-server`), to provide type information, completions,etc. This package will automatically start\nthe IDE server in your project directory and kill it when closing, if for some reason\nyou want a longer running server process you should be able to start that before\nstarting atom.\n<!--\nMultiple PureScript projects are now supported, whether in one or multiple Atom windows, see [release notes](https://github.com/nwolverson/atom-ide-purescript/releases/tag/v0.14.0) for details. -->\n\n\nFor all functions provided by `purs ide server` you will need to build your project first! In particular a full build,\nnot a \"fast-build\" on save, is required first time or after upgrading `purs`, afterwards saving individual files\nwill update tooltips etc.\n\n## Autocomplete\n\nProvided from the IDE server. Make sure your project is built first. Only for top level definitions.\n\nCompletions will be sourced from all available modules by default; this is configurable to just those imported in the current file, in which case explicitly (re-)triggering the completion will expand to show all modules.\n\nImports will be inserted automatically for completions! Again this is configurable.\n\n## Tooltips\n\nHovering over an identifier will show a tooltip with its type (only for top level definitions):\n\n![Type tooltip](http://nwolverson.github.io/atom-ide-purescript/assets/type-tooltip.png)\n\nThis is really stupid, and only cares that you hover over a word regardless of context, you will get some false positives.\n\n## Go to definitions\n\nHyperclick goto-definition functionality is supported. This is available with `purs` version\n0.9.2 and above, and like tooltips/autocomplete works on identifiers bound at the top level.\nThis is available as command/ctrl+click or cmd+alt/opt+enter by default, see atom-ide-ui config.\n\nIn case source positions are not up to date, they may not be updated on rebuild, try rebuilding or restarting psc-ide server.\n\n## Pursuit lookup\n\n![Pursuit lookup](http://nwolverson.github.io/atom-ide-purescript/assets/pursuit.png)\n\nCommand available from the command palette:\n  * PureScript search - search for identifiers, by identifier or type\n  * PureScript search modules - find package by module\n  * PureScript search - a local search of identifiers from built modules\n\n## PSCI\n\n![PSCI window](http://nwolverson.github.io/atom-ide-purescript/assets/psci.png)\n\nBasic PSCI REPL integration (runs `pulp psci`). Comprises a read-only pane which displays\nPSCI output, and an input field to send expressions to the REPL (just hitting enter). Input\ncan be sent from the current buffer by line or selection.\n\nCommand from the command palette:\n  * PSCI: Open - open a PSCI buffer\n  * PSCI: Send Line\n  * PSCI: Send Selection\n\n## Build\n\nBuild support is provided via `pulp build` by default, configurable to any command which\nwill output psc errors. This can be configured to run on save, alternatively there\nis a 'PureScript Build' command.\n\nAs well as this there is \"fast rebuild\" via the IDE server on save (by default), this will\nbuild an individual file. The recommended approach is to run a full build initially and\nafter any dependency upgrades, compiler updates, etc. or when producing build artifacts, and\notherwise quick build for continuous error feedback.\n\n### Build configuration hints\n\nThe default build command is\n```\npulp build -- --json-errors\n```\n(on windows `pulp.cmd` is called instead). *Note* This default requires pulp 0.10 as command syntax changed to require `--` separator.\nThis is configurable: the command should be on your PATH (or could be an explicit absolute path) with arguments, such that it will\noutput JSON errors as per `psc`, on stderr. This is *not* interpreted via shell, simply\npulled apart as a list of string separated arguments.\n\nSome alternatives:\n  * Pulp with `psc-package`: `pulp --psc-package build -- --json-errors`\n  * Direct `psc` use: `psc bower_components/purescript-*/src/**/*.purs src/**/*.purs --json-errors`\n  * Run a `purescript-gulp` based build: `gulp` - again need to ensure this outputs JSON errors, you probably want a specific task for this.\n  * Pulp passing through `psa`: `pulp build -- --stash --json-errors`\n\n    This will pass through `psc` errors as JSON but also integrate to any external `psa` stash,\n    e.g. if you're running `psa` on a terminal somewhere. Right now the stashed warnings are not exposed in the JSON.\n  * Ensure tests are compiled in the build: `pulp build --include test -- --json-errors`\n  * Via npm run script: `npm run -s build`. Or if the run script does not output json errors you might be able to pass\n    an extra flag: `npm run -s build -- --json-errors` - more information [on this issue](https://github.com/nwolverson/atom-ide-purescript/issues/53#issuecomment-198621810).\n\nSince atom unfortunately does not support per-project configuration, the npm run script approach may be particularly\nuseful where you have different projects that build differently. Alternatively you can look into\nthe [project-manager](https://atom.io/packages/project-manager) package.\n\nYou may be able to get away without thinking about all this if your project specific setup is only required for a \"full\" build\n(e.g. browserify step) and not just for the basic compilation stage.\n\n## Error Suggestions / Quick-Fix\n\n![Error suggestions](https://cloud.githubusercontent.com/assets/2770891/12066635/d6b14964-afe2-11e5-8584-44d291044614.gif)\n\nError suggestions may be triggered from some underlined compiler warnings. There\nis no additional visual indication. A context menu can be triggered by 'alt-enter' (PureScript: Show Quick Fixes)\nwhen the cursor is on an eligible warning. Currently fixable warnings:\n\n  * Unused or duplicate import (`UnusedImport`, `DuplicateImport`)\n  * Extraneous identifiers in explicit import list (`UnusedExplicitImport`)\n  * Implicit imports that should be made explicit - this will apply to all but remember that 1 open import is allowed without warning (`ImplicitImport`, `ImplicitQualifiedImport`, `HidingImport`)\n  * Missing top level type declaration - add type signature. Note you will need to quantify any type variables that appear,\n  and maybe re-qualify identifiers (`MissingTypeDeclaration`)\n  * Inferred type for wildcard `_` - fill in type signature. Notes as above. (`WildcardInferredType`)\n\n## Case split / add clause\n\n![Case split/add clause](https://cloud.githubusercontent.com/assets/2770891/17080720/2c5391d8-5132-11e6-8bf3-0a7e0714da24.gif)\n\n  * **Add clause** (default binding: `^O c`) - use psc-ide to add a clause to the current top-level function (from cursor on its type definition).\n  * **Case split** (default binding: `^O s`) - with cursor on an function argument identifier, add clauses to the definition to case-split on that argument.\n\nCurrently the type of the arguments must be provided by the user.\n\n## Hacking on atom-ide-purescript\n\nAfter cloning, install dependencies\n  • `psc-package update`\n  • `npm install`\n\nBundle for Atom: `npm run -s bundle`\n\nYou can use the regular `pulp build` as part of your tooling or to see compile errors, but bundling is required for the plugin to be usable by Atom and will build the project as part of the task.\n\nTo use your local development version, you will first need to uninstall any current version you have installed. Then from within the atom-ide-purescript directory run `apm link`. This will create a symlink from the Atom plugins directory to your development directory.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nwolverson/atom-ide-purescript.git"
  },
  "scripts": {
    "bundle": "pulp --psc-package build --main IdePurescript.Atom.Main --to lib/main.js --skip-entry-point && echo 'module.exports = PS[\"IdePurescript.Atom.Main\"].main()' >> lib/main.js",
    "prepublish": "psc-package update && npm run bundle"
  },
  "version": "0.22.0"
}
