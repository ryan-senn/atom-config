// Generated by psc-bundle 0.11.6
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var applyFlipped = function (x) {
      return function (f) {
          return f(x);
      };
  };
  exports["applyFlipped"] = applyFlipped;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["on"] = on;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show line 12, column 1 - line 12, column 37: " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidLeft"] = voidLeft;
  exports["voidRight"] = voidRight;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var result = [];
      var n = 0;
      for (var i = 0, l = fs.length; i < l; i++) {
        for (var j = 0, k = xs.length; j < k; j++) {
          result[n++] = fs[i](xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };
  var applyFn = new Apply(function () {
      return Data_Functor.functorFn;
  }, function (f) {
      return function (g) {
          return function (x) {
              return f(x)(g(x));
          };
      };
  });
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["applyFn"] = applyFn;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  var applicativeFn = new Applicative(function () {
      return Control_Apply.applyFn;
  }, function (x) {
      return function (v) {
          return x;
      };
  });
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["when"] = when;
  exports["applicativeFn"] = applicativeFn;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["Discard"] = Discard;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["foreachE"] = $foreign.foreachE;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (Monad0, liftEff) {
      this.Monad0 = Monad0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return Data_Function.on(compare(dictOrd))(f);
      };
  };
  var greaterThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["comparing"] = comparing;
  exports["greaterThanOrEq"] = greaterThanOrEq;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];        
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar34) {
                  return $dollar34;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Just) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Maybe line 270, column 1 - line 270, column 46: " + [ v.constructor.name ]);
          })());
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 68, column 1 - line 68, column 35: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 127, column 1 - line 127, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromJust"] = fromJust;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var un = function (dictNewtype) {
      return function (v) {
          return unwrap(dictNewtype);
      };
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($62) {
                      return wrap(dictNewtype1)(f(unwrap(dictNewtype)($62)));
                  };
              };
          };
      };
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["un"] = un;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeConj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Conj);
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["newtypeConj"] = newtypeConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($181) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($181));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (dictFoldable) {
      return function (p) {
          var go = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing && p(v1)) {
                      return new Data_Maybe.Just(v1);
                  };
                  return v;
              };
          };
          return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($184) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($184));
          };
      };
  };
  var notElem = function (dictFoldable) {
      return function (dictEq) {
          return function (x) {
              return function ($185) {
                  return !elem(dictFoldable)(dictEq)(x)($185);
              };
          };
      };
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["find"] = find;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["intercalate"] = intercalate;
  exports["notElem"] = notElem;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];        
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (dictApplicative) {
      return function (dictTraversable) {
          return function (x) {
              return function (f) {
                  return traverse(dictTraversable)(dictApplicative)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              if (v instanceof Left) {
                  return "(Left " + (Data_Show.show(dictShow)(v.value0) + ")");
              };
              if (v instanceof Right) {
                  return "(Right " + (Data_Show.show(dictShow1)(v.value0) + ")");
              };
              throw new Error("Failed pattern match at Data.Either line 160, column 1 - line 160, column 61: " + [ v.constructor.name ]);
          });
      };
  };
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 43, column 1 - line 43, column 45: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["showEither"] = showEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  exports["MonadThrow"] = MonadThrow;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Type_Equality = PS["Type.Equality"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var hush = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
  exports["hush"] = hush;
})(PS["Control.Error.Util"] = PS["Control.Error.Util"] || {});
(function(exports) {
  /* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
  "use strict";

  exports._cancelWith = function (nonCanceler, aff, canceler1) {
    return function (success, error) {
      var canceler2 = aff(success, error);

      return function (e) {
        return function (success, error) {
          var cancellations = 0;
          var result = false;
          var errored = false;

          var s = function (bool) {
            cancellations = cancellations + 1;
            result = result || bool;

            if (cancellations === 2 && !errored) {
              success(result);
            }
          };

          var f = function (err) {
            if (!errored) {
              errored = true;
              error(err);
            }
          };

          canceler2(e)(s, f);
          canceler1(e)(s, f);

          return nonCanceler;
        };
      };
    };
  };

  exports._delay = function (nonCanceler, millis) {
    var set = setTimeout;
    var clear = clearTimeout;
    if (millis <= 0 && typeof setImmediate === "function") {
      set = setImmediate;
      clear = clearImmediate;
    }
    return function (success) {
      var timedOut = false;
      var timer = set(function () {
        timedOut = true;
        success();
      }, millis);

      return function () {
        return function (s) {
          if (timedOut) {
            s(false);
          } else {
            clear(timer);
            s(true);
          }
          return nonCanceler;
        };
      };
    };
  };

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  };

  exports._forkAff = function (nonCanceler, aff) {
    var voidF = function () {};

    return function (success) {
      var canceler = aff(voidF, voidF);
      success(canceler);
      return nonCanceler;
    };
  };

  exports._makeAff = function (cb) {
    return function (success, error) {
      try {
        return cb(function (e) {
          return function () {
            error(e);
          };
        })(function (v) {
          return function () {
            success(v);
          };
        })();
      } catch (err) {
        error(err);
      }
    };
  };

  exports._pure = function (nonCanceler, v) {
    return function (success) {
      success(v);
      return nonCanceler;
    };
  };

  exports._throwError = function (nonCanceler, e) {
    return function (success, error) {
      error(e);
      return nonCanceler;
    };
  };

  exports._fmap = function (f, aff) {
    return function (success, error) {
      return aff(function (v) {
        success(f(v));
      }, error);
    };
  };

  exports._bind = function (alwaysCanceler, aff, f) {
    return function (success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function () {};

      canceler1 = aff(function (v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function (e) {
        return function (s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function (bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function (canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  };

  exports._attempt = function (Left, Right, aff) {
    return function (success) {
      return aff(function (v) {
        success(Right(v));
      }, function (e) {
        success(Left(e));
      });
    };
  };

  exports._runAff = function (errorT, successT, aff) {
    // If errorT or successT throw, and an Aff is comprised only of synchronous
    // effects, then it's possible for makeAff/liftEff to accidentally catch
    // it, which may end up rerunning the Aff depending on error recovery
    // behavior. To mitigate this, we observe synchronicity using mutation. If
    // an Aff is observed to be synchronous, we let the stack reset and run the
    // handlers outside of the normal callback flow.
    return function () {
      var status = 0;
      var result, success;

      var canceler = aff(function (v) {
        if (status === 2) {
          successT(v)();
        } else {
          status = 1;
          result = v;
          success = true;
        }
      }, function (e) {
        if (status === 2) {
          errorT(e)();
        } else {
          status = 1;
          result = e;
          success = false;
        }
      });

      if (status === 1) {
        if (success) {
          successT(result)();
        } else {
          errorT(result)();
        }
      } else {
        status = 2;
      }

      return canceler;
    };
  };

  exports._liftEff = function (nonCanceler, e) {
    return function (success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  exports._makeVar = function (nonCanceler) {
    return function (success) {
      success({
        consumers: [],
        producers: [],
        error: undefined
      });
      return nonCanceler;
    };
  };

  exports._takeVar = function (nonCanceler, avar) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        avar.producers.shift()(success, error);
      } else {
        avar.consumers.push({ peek: false, success: success, error: error });
      }

      return nonCanceler;
    };
  };

  exports._putVar = function (nonCanceler, avar, a) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        var shouldQueue = true;
        var consumers = [];
        var consumer;

        while (true) {
          consumer = avar.consumers.shift();
          if (consumer) {
            consumers.push(consumer);
            if (consumer.peek) {
              continue;
            } else {
              shouldQueue = false;
            }
          }
          break;
        }

        if (shouldQueue) {
          avar.producers.push(function (success) {
            success(a);
            return nonCanceler;
          });
        }

        for (var i = 0; i < consumers.length; i++) {
          consumers[i].success(a);
        }

        success({});
      }

      return nonCanceler;
    };
  };

  exports._killVar = function (nonCanceler, avar, e) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        avar.error = e;
        while (avar.consumers.length) {
          avar.consumers.shift().error(e);
        }
        success({});
      }

      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
    "use strict";

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var $$try = function (action) {
      return $foreign.catchException(function ($0) {
          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Either.Left.create($0));
      })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Either.Right.create)(action));
  };
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };                                                                               
  var showError = new Data_Show.Show($foreign.showErrorImpl);
  exports["throw"] = $$throw;
  exports["try"] = $$try;
  exports["showError"] = showError;
  exports["catchException"] = $foreign.catchException;
  exports["error"] = $foreign.error;
  exports["message"] = $foreign.message;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  exports["_killVar"] = $foreign._killVar;
  exports["_makeVar"] = $foreign._makeVar;
  exports["_putVar"] = $foreign._putVar;
  exports["_takeVar"] = $foreign._takeVar;
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeCoerceEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };                                                           
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["Parallel"] = Parallel;
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var ParAff = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var newtypeParAff = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParAff);
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var functorParAff = functorAff;
  var fromAVBox = Unsafe_Coerce.unsafeCoerce;
  var cancel = function (v) {
      return v;
  };   
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var cancelWith = function (aff) {
      return function (c) {
          return $foreign._cancelWith(nonCanceler, aff, c);
      };
  };
  var delay = function (v) {
      return $foreign._delay(nonCanceler, v);
  };
  var forkAff = function (aff) {
      return $foreign._forkAff(nonCanceler, aff);
  };
  var killVar = function (q) {
      return function (e) {
          return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
      };
  };
  var liftEff$prime = function (eff) {
      return attempt($foreign._unsafeInterleaveAff($foreign._liftEff(nonCanceler, eff)));
  };
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
          };
      });
  };
  var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
  var putVar = function (q) {
      return function (a) {
          return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
      };
  };
  var takeVar = function (q) {
      return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
  };
  var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (e) {
              return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
          };
      };
  });                                                                        
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, function (v) {
      return function (v1) {
          var putOrKill = function (v2) {
              return Data_Either.either(killVar(v2))(putVar(v2));
          };
          return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
              return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                  return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                      return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                          return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                      });
                  });
              });
          });
      };
  });
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($56) {
      return ParAff(Control_Applicative.pure(applicativeAff)($56));
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, function (e) {
      return $foreign._throwError(nonCanceler, e);
  });
  var parallelParAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, ParAff, function (v) {
      return v;
  });
  var altParAff = new Control_Alt.Alt(function () {
      return functorParAff;
  }, function (v) {
      return function (v1) {
          var maybeKill = function (va) {
              return function (ve) {
                  return function (err) {
                      return Control_Bind.bind(bindAff)(takeVar(ve))(function (v2) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(Control_Applicative.when(applicativeAff)(v2 === 1)(killVar(va)(err)))(function () {
                              return putVar(ve)(v2 + 1 | 0);
                          });
                      });
                  };
              };
          };
          var done = function (cs) {
              return function (get) {
                  return function (va) {
                      return function (x) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(va)(x))(function () {
                              return Control_Bind.bind(bindAff)(Data_Functor.map(functorAff)(get)(takeVar(cs)))(function (v2) {
                                  return Data_Functor["void"](functorAff)(cancel(v2)(Control_Monad_Eff_Exception.error("Alt early exit")));
                              });
                          });
                      };
                  };
              };
          };
          return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
              return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                  return Control_Bind.bind(bindAff)(makeVar)(function (v4) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v3)(0))(function () {
                          return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.snd)(v2)))(attempt(v))))(function (v5) {
                              return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(Data_Either.either(maybeKill(v2)(v3))(done(v4)(Data_Tuple.fst)(v2)))(attempt(v1))))(function (v6) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(bindAff)(putVar(v4)(new Data_Tuple.Tuple(v5, v6)))(function () {
                                      return cancelWith(takeVar(v2))(Data_Semigroup.append(semigroupCanceler)(v5)(v6));
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  });
  var altAff = new Control_Alt.Alt(function () {
      return functorAff;
  }, function (a1) {
      return function (a2) {
          return Control_Bind.bind(bindAff)(attempt(a1))(Data_Either.either(Data_Function["const"](a2))(Control_Applicative.pure(applicativeAff)));
      };
  });
  exports["ParAff"] = ParAff;
  exports["attempt"] = attempt;
  exports["cancel"] = cancel;
  exports["cancelWith"] = cancelWith;
  exports["delay"] = delay;
  exports["forkAff"] = forkAff;
  exports["liftEff'"] = liftEff$prime;
  exports["makeAff"] = makeAff;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["altAff"] = altAff;
  exports["semigroupCanceler"] = semigroupCanceler;
  exports["newtypeParAff"] = newtypeParAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["altParAff"] = altParAff;
  exports["parallelParAff"] = parallelParAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var unsafeThrowException = function ($0) {
      return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
  };
  var unsafeThrow = function ($1) {
      return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
  };
  exports["unsafeThrow"] = unsafeThrow;
  exports["unsafeThrowException"] = unsafeThrowException;
})(PS["Control.Monad.Eff.Exception.Unsafe"] = PS["Control.Monad.Eff.Exception.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.random = Math.random;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;

  exports.readInt = function (radix) {
    return function (n) {
      return parseInt(n, radix);
    };
  };
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
  exports["readInt"] = $foreign.readInt;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];      
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
  };
  var floor = function ($14) {
      return unsafeClamp($$Math.floor($14));
  };
  exports["floor"] = floor;
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Prelude = PS["Prelude"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var v = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runEffFn1"] = $foreign.runEffFn1;
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];                                                           
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT(function ($1) {
          return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
      });
  };
  exports["mapExcept"] = mapExcept;
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
    "use strict";

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.modifySTRef = function (ref) {
    return function (f) {
      return function () {
        return ref.value = f(ref.value); // eslint-disable-line no-return-assign
      };
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        return ref.value = a; // eslint-disable-line no-return-assign
      };
    };
  };

  exports.runST = function (f) {
    return f;
  };
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var pureST = function (st) {
      return Control_Monad_Eff.runPure($foreign.runST(st));
  };
  exports["pureST"] = pureST;
  exports["modifySTRef"] = $foreign.modifySTRef;
  exports["newSTRef"] = $foreign.newSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["writeSTRef"] = $foreign.writeSTRef;
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {// module Control.Promise

  exports.promise = function (f) {
    return function () {
      return new Promise(function (success, error) {
        var succF = function (s) { return function() { return success(s); } };
        var failF = function (s) { return function() { return error(s); } };

        // This indicates the aff was wrong?
        try { f(succF)(failF)(); }
        catch (e) {
          error(e);
        }
      });
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function(exports) {
    "use strict";

  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Unfoldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable($foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($143) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($143));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 78, column 12 - line 80, column 30: " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = function ($copy_acc) {
              return function ($copy_v) {
                  var $tco_var_acc = $copy_acc;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(acc, v) {
                      if (v instanceof Nil) {
                          $tco_done = true;
                          return acc;
                      };
                      if (v instanceof Cons) {
                          $tco_var_acc = new Cons(v.value0, acc);
                          $copy_v = v.value1;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types line 73, column 15 - line 75, column 33: " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_acc, $copy_v);
                  };
                  return $tco_result;
              };
          };
          return function ($144) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)($144));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  }; 
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 94, column 1 - line 94, column 33: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, function ($149) {
      return NonEmptyList(Data_NonEmpty.singleton(plusList)($149));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  exports["singleton"] = singleton;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semigroup_Foldable = PS["Data.Semigroup.Foldable"];
  var Data_Semigroup_Traversable = PS["Data.Semigroup.Traversable"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var singleton = function ($160) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($160));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.trim = function (s) {
    return s.trim();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  var $$null = function (s) {
      return s === "";
  };                                                                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var contains = function (pat) {
      return function ($48) {
          return Data_Maybe.isJust(indexOf(pat)($48));
      };
  };                                                                                      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["charAt"] = charAt;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["null"] = $$null;
  exports["drop"] = $foreign.drop;
  exports["joinWith"] = $foreign.joinWith;
  exports["length"] = $foreign.length;
  exports["split"] = $foreign.split;
  exports["take"] = $foreign.take;
  exports["toLower"] = $foreign.toLower;
  exports["trim"] = $foreign.trim;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof JSONError) {
          return "(JSONError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Data.Foreign line 64, column 1 - line 64, column 47: " + [ v.constructor.name ]);
  });
  var fail = function ($121) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($121));
  };
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      };
      if (Data_Boolean.otherwise) {
          return fail(new TypeMismatch("array", $foreign.tagOf(value)));
      };
      throw new Error("Failed pattern match at Data.Foreign line 145, column 1 - line 145, column 42: " + [ value.constructor.name ]);
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 104, column 1 - line 104, column 55: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch("Int", $foreign.tagOf(value))));
      var fromNumber = function ($122) {
          return Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither))(Data_Int.fromNumber($122));
      };
      return Control_Monad_Except.mapExcept(Data_Either.either(Data_Function["const"](error))(fromNumber))(readNumber(value));
  };
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["fail"] = fail;
  exports["readArray"] = readArray;
  exports["readBoolean"] = readBoolean;
  exports["readInt"] = readInt;
  exports["readNumber"] = readNumber;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["toForeign"] = $foreign.toForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Promise"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Prelude = PS["Prelude"];        
  var fromAff = function (aff) {
      return $foreign.promise(function (succ) {
          return function (err) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(err)(succ)(aff));
          };
      });
  };
  exports["fromAff"] = fromAff;
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function(exports) {
    "use strict";

  function id(x) {
    return x;
  } 

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  var objToString = Object.prototype.toString;

  function isArray(a) {
    return objToString.call(a) === "[object Array]";
  }

  exports._foldJson = function (isNull, isBool, isNum, isStr, isArr, isObj, j) {
    if (j == null) return isNull(null);
    else if (typeof j === "boolean") return isBool(j);
    else if (typeof j === "number") return isNum(j);
    else if (typeof j === "string") return isStr(j);
    else if (objToString.call(j) === "[object Array]")
      return isArr(j);
    else return isObj(j);
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
    "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (hasOwnProperty.call(m0, k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  exports._lookupST = function (no, yes, k, m) {
    return function () {
      return k in m ? yes(m[k]) : no;
    };
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;

  exports.keys = Object.keys || toArrayWithKey(function (k) {
    return function () { return k; };
  });
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
    "use strict";       

  exports.fromFoldableImpl = (function () {
    // jshint maxparams: 2
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  //------------------------------------------------------------------------------
  // Transformations -------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.reverse = function (l) {
    return l.slice().reverse();
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      // jshint maxparams: 2
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var unsafeFreeze = function ($7) {
      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Unsafe_Coerce.unsafeCoerce($7));
  };
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["emptySTArray"] = $foreign.emptySTArray;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semiring = PS["Data.Semiring"];
  var Prelude = PS["Prelude"];        
  var Iterator = (function () {
      function Iterator(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Iterator.create = function (value0) {
          return function (value1) {
              return new Iterator(value0, value1);
          };
      };
      return Iterator;
  })();
  var peek = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST.readSTRef(v.value1)();
          return v.value0(v1);
      };
  };
  var next = function (v) {
      return function __do() {
          var v1 = Control_Monad_ST.readSTRef(v.value1)();
          var v2 = Control_Monad_ST.modifySTRef(v.value1)(function (v2) {
              return v2 + 1 | 0;
          })();
          return v.value0(v1);
      };
  };
  var pushWhile = function (p) {
      return function (iter) {
          return function (array) {
              return function __do() {
                  var v = Control_Monad_ST.newSTRef(false)();
                  while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                      (function __do() {
                          var v1 = peek(iter)();
                          if (v1 instanceof Data_Maybe.Just && p(v1.value0)) {
                              var v2 = Data_Array_ST.pushSTArray(array)(v1.value0)();
                              return Data_Functor["void"](Control_Monad_Eff.functorEff)(next(iter))();
                          };
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                      })();
                  };
                  return {};
              };
          };
      };
  };                                                    
  var iterator = function (f) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Iterator.create(f))(Control_Monad_ST.newSTRef(0));
  };
  var iterate = function (iter) {
      return function (f) {
          return function __do() {
              var v = Control_Monad_ST.newSTRef(false)();
              while (Data_Functor.map(Control_Monad_Eff.functorEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean))(Control_Monad_ST.readSTRef(v))()) {
                  (function __do() {
                      var v1 = next(iter)();
                      if (v1 instanceof Data_Maybe.Just) {
                          return f(v1.value0)();
                      };
                      if (v1 instanceof Data_Maybe.Nothing) {
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_ST.writeSTRef(v)(true))();
                      };
                      throw new Error("Failed pattern match at Data.Array.ST.Iterator line 39, column 5 - line 41, column 46: " + [ v1.constructor.name ]);
                  })();
              };
              return {};
          };
      };
  };
  exports["iterate"] = iterate;
  exports["iterator"] = iterator;
  exports["next"] = next;
  exports["peek"] = peek;
  exports["pushWhile"] = pushWhile;
})(PS["Data.Array.ST.Iterator"] = PS["Data.Array.ST.Iterator"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);                                
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  };
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array line 137, column 3 - line 139, column 26: " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  }; 
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array line 475, column 15 - line 480, column 1: " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var last = function (xs) {
      return index(xs)($foreign.length(xs) - 1 | 0);
  };
  var head = function (xs) {
      return index(xs)(0);
  };
  var groupBy = function (op) {
      return function (xs) {
          return Control_Monad_ST.pureST(function __do() {
              var v = Data_Array_ST.emptySTArray();
              var v1 = Data_Array_ST_Iterator.iterator(function (v1) {
                  return index(xs)(v1);
              })();
              Data_Array_ST_Iterator.iterate(v1)(function (x) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                      var v2 = Data_Array_ST.emptySTArray();
                      Data_Array_ST_Iterator.pushWhile(op(x))(v1)(v2)();
                      var v3 = Data_Array_ST.unsafeFreeze(v2)();
                      return Data_Array_ST.pushSTArray(v)(new Data_NonEmpty.NonEmpty(x, v3))();
                  });
              })();
              return Data_Array_ST.unsafeFreeze(v)();
          });
      };
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var intersectBy = function (eq) {
      return function (xs) {
          return function (ys) {
              return $foreign.filter(function (x) {
                  return Data_Maybe.isJust(findIndex(eq(x))(ys));
              })(xs);
          };
      };
  };
  var intersect = function (dictEq) {
      return intersectBy(Data_Eq.eq(dictEq));
  };
  var deleteAt = $foreign._deleteAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($94) {
          return Data_Maybe.maybe([  ])(singleton)(f($94));
      });
  };
  var catMaybes = mapMaybe(Control_Category.id(Control_Category.categoryFn));
  exports["catMaybes"] = catMaybes;
  exports["concatMap"] = concatMap;
  exports["deleteAt"] = deleteAt;
  exports["deleteBy"] = deleteBy;
  exports["difference"] = difference;
  exports["findIndex"] = findIndex;
  exports["fromFoldable"] = fromFoldable;
  exports["groupBy"] = groupBy;
  exports["head"] = head;
  exports["index"] = index;
  exports["intersect"] = intersect;
  exports["intersectBy"] = intersectBy;
  exports["last"] = last;
  exports["mapMaybe"] = mapMaybe;
  exports["null"] = $$null;
  exports["singleton"] = singleton;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["toUnfoldable"] = toUnfoldable;
  exports["uncons"] = uncons;
  exports["unsafeIndex"] = unsafeIndex;
  exports["zip"] = zip;
  exports["concat"] = $foreign.concat;
  exports["cons"] = $foreign.cons;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["reverse"] = $foreign.reverse;
  exports["slice"] = $foreign.slice;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];        
  var values = $foreign.toArrayWithKey(function (v) {
      return function (v1) {
          return v1;
      };
  });
  var toUnfoldable = function (dictUnfoldable) {
      return function ($44) {
          return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($44));
      };
  };                                                             
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              return Data_StrMap_ST.poke(v1)(k)(v)();
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var functorStrMap = new Data_Functor.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var fromFoldableWith = function (dictFoldable) {
      return function (f) {
          return function (l) {
              return pureST(function __do() {
                  var v = Data_StrMap_ST["new"]();
                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(dictFoldable)(l)(function (v1) {
                      return Control_Bind.bind(Control_Monad_Eff.bindEff)($foreign._lookupST(v1.value1, f(v1.value1), v1.value0, v))(Data_StrMap_ST.poke(v)(v1.value0));
                  })();
                  return v;
              });
          };
      };
  };
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return pureST(function __do() {
              var v = Data_StrMap_ST["new"]();
              Control_Monad_Eff.foreachE(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(v)(v1.value0)(v1.value1));
              })();
              return v;
          });
      };
  };
  var fold = $foreign._foldM(Data_Function.applyFlipped);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Data_Function["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return fold(function (acc) {
                  return function (k) {
                      return function (v) {
                          return Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(insert(k))(f(v)))(acc);
                      };
                  };
              })(Control_Applicative.pure(dictApplicative)($foreign.empty))(ms);
          };
      };
  });
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["fromFoldable"] = fromFoldable;
  exports["fromFoldableWith"] = fromFoldableWith;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["pureST"] = pureST;
  exports["singleton"] = singleton;
  exports["thawST"] = thawST;
  exports["toUnfoldable"] = toUnfoldable;
  exports["values"] = values;
  exports["functorStrMap"] = functorStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["empty"] = $foreign.empty;
  exports["keys"] = $foreign.keys;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var showJson = new Data_Show.Show($foreign.stringify);
  var jsonSingletonObject = function (key) {
      return function (val) {
          return $foreign.fromObject(Data_StrMap.singleton(key)(val));
      };
  };                                            
  var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
  var isJsonType = verbJsonType(false)(Data_Function["const"](true));
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var toString = toJsonType(foldJsonString);
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };                                        
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(foldJsonNull);      
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), Data_Function["const"](d), f, Data_Function["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonNull"] = foldJsonNull;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonString"] = foldJsonString;
  exports["isNull"] = isNull;
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["jsonSingletonObject"] = jsonSingletonObject;
  exports["toArray"] = toArray;
  exports["toObject"] = toObject;
  exports["toString"] = toString;
  exports["showJson"] = showJson;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromBoolean"] = $foreign.fromBoolean;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromObject"] = $foreign.fromObject;
  exports["fromString"] = $foreign.fromString;
  exports["jsonNull"] = $foreign.jsonNull;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  }; 
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Value is not a String"))(Data_Either.Right.create));
  var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Value is not a Number"))(Data_Either.Right.create));                               
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);                                                                                       
  var decodeJson = function (dict) {
      return dict.decodeJson;
  }; 
  var decodeJsonInt = new DecodeJson(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($32) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an integer"))(Data_Either.Right.create)(Data_Int.fromNumber($32));
  })(decodeJson(decodeJsonNumber)));
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Data_Boolean.otherwise) {
              return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode.Class line 23, column 1 - line 23, column 65: " + [ j.constructor.name ]);
      });
  };
  var decodeJObject = function ($33) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Object"))(Data_Either.Right.create)(Data_Argonaut_Core.toObject($33));
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function ($34) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode StrMap: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJObject)($34));
      });
  };
  var decodeJArray = function ($35) {
      return Data_Maybe.maybe(new Data_Either.Left("Value is not an Array"))(Data_Either.Right.create)(Data_Argonaut_Core.toArray($35));
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function ($38) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (v) {
              return "Couldn't decode Array: " + v;
          })(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(decodeJson(dictDecodeJson)))(decodeJArray)($38));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonNumber"] = decodeJsonNumber;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
})(PS["Data.Argonaut.Decode.Class"] = PS["Data.Argonaut.Decode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var getField = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Data_Show.show(Data_Show.showString)(s)))(Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports["getField"] = getField;
})(PS["Data.Argonaut.Decode.Combinators"] = PS["Data.Argonaut.Decode.Combinators"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Void = PS["Data.Void"];
  var Prelude = PS["Prelude"];        
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };                                                                                       
  var encodeJsonJson = new EncodeJson(Control_Category.id(Control_Category.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
  var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
  var encodeJsonInt = new EncodeJson(function ($19) {
      return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($19));
  });
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (dictEncodeJson) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Data_Functor.map(Data_Functor.functorArray)(encodeJson(dictEncodeJson))(json));
      });
  };
  var encodeJsonMaybe = function (dictEncodeJson) {
      return new EncodeJson(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Data_Maybe.Just) {
              return encodeJson(dictEncodeJson)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Argonaut.Encode.Class line 18, column 1 - line 18, column 65: " + [ v.constructor.name ]);
      });
  };
  exports["EncodeJson"] = EncodeJson;
  exports["encodeJson"] = encodeJson;
  exports["encodeJsonMaybe"] = encodeJsonMaybe;
  exports["encodeJsonJBoolean"] = encodeJsonJBoolean;
  exports["encodeJsonInt"] = encodeJsonInt;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;
})(PS["Data.Argonaut.Encode.Class"] = PS["Data.Argonaut.Encode.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var extend = function (dictEncodeJson) {
      return function (v) {
          return function ($6) {
              return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($7) {
                  return Data_Argonaut_Core.fromObject(Data_StrMap.insert(v.value0)(v.value1)($7));
              })(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($6));
          };
      };
  };
  var assoc = function (dictEncodeJson) {
      return function (k) {
          return function ($8) {
              return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)($8));
          };
      };
  };
  exports["assoc"] = assoc;
  exports["extend"] = extend;
})(PS["Data.Argonaut.Encode.Combinators"] = PS["Data.Argonaut.Encode.Combinators"] || {});
(function(exports) {
    "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];        
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
    "use strict";

  exports.toUpper = function (c) {
    return c.toUpperCase();
  };
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Char"];
  exports["toUpper"] = $foreign.toUpper;
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
    "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Prelude = PS["Prelude"];        
  var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.index = index;
  };
  var Indexable = function (ix) {
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp; 
  var ix = function (dict) {
      return dict.ix;
  };
  var index = function (dict) {
      return dict.index;
  }; 
  var indexableForeign = new Indexable(function (dictIndex) {
      return index(dictIndex);
  });
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                             
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["Indexable"] = Indexable;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["index"] = index;
  exports["ix"] = ix;
  exports["readProp"] = readProp;
  exports["indexString"] = indexString;
  exports["indexableForeign"] = indexableForeign;
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
    "use strict";

  exports.parseJSONImpl = function (str) {
    return JSON.parse(str);
  };
})(PS["Data.Foreign.JSON"] = PS["Data.Foreign.JSON"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foreign.JSON"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Prelude = PS["Prelude"];        
  var parseJSON = function ($0) {
      return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function ($1) {
          return Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.JSONError.create(Control_Monad_Eff_Exception.message($1)));
      })(Control_Monad_Eff.runPure(Control_Monad_Eff_Exception["try"](Control_Monad_Eff_Uncurried.runEffFn1($foreign.parseJSONImpl)($0))))));
  };
  exports["parseJSON"] = parseJSON;
})(PS["Data.Foreign.JSON"] = PS["Data.Foreign.JSON"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var SIGABRT = (function () {
      function SIGABRT() {

      };
      SIGABRT.value = new SIGABRT();
      return SIGABRT;
  })();
  var SIGALRM = (function () {
      function SIGALRM() {

      };
      SIGALRM.value = new SIGALRM();
      return SIGALRM;
  })();
  var SIGBUS = (function () {
      function SIGBUS() {

      };
      SIGBUS.value = new SIGBUS();
      return SIGBUS;
  })();
  var SIGCHLD = (function () {
      function SIGCHLD() {

      };
      SIGCHLD.value = new SIGCHLD();
      return SIGCHLD;
  })();
  var SIGCLD = (function () {
      function SIGCLD() {

      };
      SIGCLD.value = new SIGCLD();
      return SIGCLD;
  })();
  var SIGCONT = (function () {
      function SIGCONT() {

      };
      SIGCONT.value = new SIGCONT();
      return SIGCONT;
  })();
  var SIGEMT = (function () {
      function SIGEMT() {

      };
      SIGEMT.value = new SIGEMT();
      return SIGEMT;
  })();
  var SIGFPE = (function () {
      function SIGFPE() {

      };
      SIGFPE.value = new SIGFPE();
      return SIGFPE;
  })();
  var SIGHUP = (function () {
      function SIGHUP() {

      };
      SIGHUP.value = new SIGHUP();
      return SIGHUP;
  })();
  var SIGILL = (function () {
      function SIGILL() {

      };
      SIGILL.value = new SIGILL();
      return SIGILL;
  })();
  var SIGINFO = (function () {
      function SIGINFO() {

      };
      SIGINFO.value = new SIGINFO();
      return SIGINFO;
  })();
  var SIGINT = (function () {
      function SIGINT() {

      };
      SIGINT.value = new SIGINT();
      return SIGINT;
  })();
  var SIGIO = (function () {
      function SIGIO() {

      };
      SIGIO.value = new SIGIO();
      return SIGIO;
  })();
  var SIGIOT = (function () {
      function SIGIOT() {

      };
      SIGIOT.value = new SIGIOT();
      return SIGIOT;
  })();
  var SIGKILL = (function () {
      function SIGKILL() {

      };
      SIGKILL.value = new SIGKILL();
      return SIGKILL;
  })();
  var SIGLOST = (function () {
      function SIGLOST() {

      };
      SIGLOST.value = new SIGLOST();
      return SIGLOST;
  })();
  var SIGPIPE = (function () {
      function SIGPIPE() {

      };
      SIGPIPE.value = new SIGPIPE();
      return SIGPIPE;
  })();
  var SIGPOLL = (function () {
      function SIGPOLL() {

      };
      SIGPOLL.value = new SIGPOLL();
      return SIGPOLL;
  })();
  var SIGPROF = (function () {
      function SIGPROF() {

      };
      SIGPROF.value = new SIGPROF();
      return SIGPROF;
  })();
  var SIGPWR = (function () {
      function SIGPWR() {

      };
      SIGPWR.value = new SIGPWR();
      return SIGPWR;
  })();
  var SIGQUIT = (function () {
      function SIGQUIT() {

      };
      SIGQUIT.value = new SIGQUIT();
      return SIGQUIT;
  })();
  var SIGSEGV = (function () {
      function SIGSEGV() {

      };
      SIGSEGV.value = new SIGSEGV();
      return SIGSEGV;
  })();
  var SIGSTKFLT = (function () {
      function SIGSTKFLT() {

      };
      SIGSTKFLT.value = new SIGSTKFLT();
      return SIGSTKFLT;
  })();
  var SIGSTOP = (function () {
      function SIGSTOP() {

      };
      SIGSTOP.value = new SIGSTOP();
      return SIGSTOP;
  })();
  var SIGSYS = (function () {
      function SIGSYS() {

      };
      SIGSYS.value = new SIGSYS();
      return SIGSYS;
  })();
  var SIGTERM = (function () {
      function SIGTERM() {

      };
      SIGTERM.value = new SIGTERM();
      return SIGTERM;
  })();
  var SIGTRAP = (function () {
      function SIGTRAP() {

      };
      SIGTRAP.value = new SIGTRAP();
      return SIGTRAP;
  })();
  var SIGTSTP = (function () {
      function SIGTSTP() {

      };
      SIGTSTP.value = new SIGTSTP();
      return SIGTSTP;
  })();
  var SIGTTIN = (function () {
      function SIGTTIN() {

      };
      SIGTTIN.value = new SIGTTIN();
      return SIGTTIN;
  })();
  var SIGTTOU = (function () {
      function SIGTTOU() {

      };
      SIGTTOU.value = new SIGTTOU();
      return SIGTTOU;
  })();
  var SIGUNUSED = (function () {
      function SIGUNUSED() {

      };
      SIGUNUSED.value = new SIGUNUSED();
      return SIGUNUSED;
  })();
  var SIGURG = (function () {
      function SIGURG() {

      };
      SIGURG.value = new SIGURG();
      return SIGURG;
  })();
  var SIGUSR1 = (function () {
      function SIGUSR1() {

      };
      SIGUSR1.value = new SIGUSR1();
      return SIGUSR1;
  })();
  var SIGUSR2 = (function () {
      function SIGUSR2() {

      };
      SIGUSR2.value = new SIGUSR2();
      return SIGUSR2;
  })();
  var SIGVTALRM = (function () {
      function SIGVTALRM() {

      };
      SIGVTALRM.value = new SIGVTALRM();
      return SIGVTALRM;
  })();
  var SIGWINCH = (function () {
      function SIGWINCH() {

      };
      SIGWINCH.value = new SIGWINCH();
      return SIGWINCH;
  })();
  var SIGXCPU = (function () {
      function SIGXCPU() {

      };
      SIGXCPU.value = new SIGXCPU();
      return SIGXCPU;
  })();
  var SIGXFSZ = (function () {
      function SIGXFSZ() {

      };
      SIGXFSZ.value = new SIGXFSZ();
      return SIGXFSZ;
  })();                                         
  var fromString = function (s) {
      if (s === "SIGABRT") {
          return new Data_Maybe.Just(SIGABRT.value);
      };
      if (s === "SIGALRM") {
          return new Data_Maybe.Just(SIGALRM.value);
      };
      if (s === "SIGBUS") {
          return new Data_Maybe.Just(SIGBUS.value);
      };
      if (s === "SIGCHLD") {
          return new Data_Maybe.Just(SIGCHLD.value);
      };
      if (s === "SIGCLD") {
          return new Data_Maybe.Just(SIGCLD.value);
      };
      if (s === "SIGCONT") {
          return new Data_Maybe.Just(SIGCONT.value);
      };
      if (s === "SIGEMT") {
          return new Data_Maybe.Just(SIGEMT.value);
      };
      if (s === "SIGFPE") {
          return new Data_Maybe.Just(SIGFPE.value);
      };
      if (s === "SIGHUP") {
          return new Data_Maybe.Just(SIGHUP.value);
      };
      if (s === "SIGILL") {
          return new Data_Maybe.Just(SIGILL.value);
      };
      if (s === "SIGINFO") {
          return new Data_Maybe.Just(SIGINFO.value);
      };
      if (s === "SIGINT") {
          return new Data_Maybe.Just(SIGINT.value);
      };
      if (s === "SIGIO") {
          return new Data_Maybe.Just(SIGIO.value);
      };
      if (s === "SIGIOT") {
          return new Data_Maybe.Just(SIGIOT.value);
      };
      if (s === "SIGKILL") {
          return new Data_Maybe.Just(SIGKILL.value);
      };
      if (s === "SIGLOST") {
          return new Data_Maybe.Just(SIGLOST.value);
      };
      if (s === "SIGPIPE") {
          return new Data_Maybe.Just(SIGPIPE.value);
      };
      if (s === "SIGPOLL") {
          return new Data_Maybe.Just(SIGPOLL.value);
      };
      if (s === "SIGPROF") {
          return new Data_Maybe.Just(SIGPROF.value);
      };
      if (s === "SIGPWR") {
          return new Data_Maybe.Just(SIGPWR.value);
      };
      if (s === "SIGQUIT") {
          return new Data_Maybe.Just(SIGQUIT.value);
      };
      if (s === "SIGSEGV") {
          return new Data_Maybe.Just(SIGSEGV.value);
      };
      if (s === "SIGSTKFLT") {
          return new Data_Maybe.Just(SIGSTKFLT.value);
      };
      if (s === "SIGSTOP") {
          return new Data_Maybe.Just(SIGSTOP.value);
      };
      if (s === "SIGSYS") {
          return new Data_Maybe.Just(SIGSYS.value);
      };
      if (s === "SIGTERM") {
          return new Data_Maybe.Just(SIGTERM.value);
      };
      if (s === "SIGTRAP") {
          return new Data_Maybe.Just(SIGTRAP.value);
      };
      if (s === "SIGTSTP") {
          return new Data_Maybe.Just(SIGTSTP.value);
      };
      if (s === "SIGTTIN") {
          return new Data_Maybe.Just(SIGTTIN.value);
      };
      if (s === "SIGTTOU") {
          return new Data_Maybe.Just(SIGTTOU.value);
      };
      if (s === "SIGUNUSED") {
          return new Data_Maybe.Just(SIGUNUSED.value);
      };
      if (s === "SIGURG") {
          return new Data_Maybe.Just(SIGURG.value);
      };
      if (s === "SIGUSR1") {
          return new Data_Maybe.Just(SIGUSR1.value);
      };
      if (s === "SIGUSR2") {
          return new Data_Maybe.Just(SIGUSR2.value);
      };
      if (s === "SIGVTALRM") {
          return new Data_Maybe.Just(SIGVTALRM.value);
      };
      if (s === "SIGWINCH") {
          return new Data_Maybe.Just(SIGWINCH.value);
      };
      if (s === "SIGXCPU") {
          return new Data_Maybe.Just(SIGXCPU.value);
      };
      if (s === "SIGXFSZ") {
          return new Data_Maybe.Just(SIGXFSZ.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["SIGABRT"] = SIGABRT;
  exports["SIGALRM"] = SIGALRM;
  exports["SIGBUS"] = SIGBUS;
  exports["SIGCHLD"] = SIGCHLD;
  exports["SIGCLD"] = SIGCLD;
  exports["SIGCONT"] = SIGCONT;
  exports["SIGEMT"] = SIGEMT;
  exports["SIGFPE"] = SIGFPE;
  exports["SIGHUP"] = SIGHUP;
  exports["SIGILL"] = SIGILL;
  exports["SIGINFO"] = SIGINFO;
  exports["SIGINT"] = SIGINT;
  exports["SIGIO"] = SIGIO;
  exports["SIGIOT"] = SIGIOT;
  exports["SIGKILL"] = SIGKILL;
  exports["SIGLOST"] = SIGLOST;
  exports["SIGPIPE"] = SIGPIPE;
  exports["SIGPOLL"] = SIGPOLL;
  exports["SIGPROF"] = SIGPROF;
  exports["SIGPWR"] = SIGPWR;
  exports["SIGQUIT"] = SIGQUIT;
  exports["SIGSEGV"] = SIGSEGV;
  exports["SIGSTKFLT"] = SIGSTKFLT;
  exports["SIGSTOP"] = SIGSTOP;
  exports["SIGSYS"] = SIGSYS;
  exports["SIGTERM"] = SIGTERM;
  exports["SIGTRAP"] = SIGTRAP;
  exports["SIGTSTP"] = SIGTSTP;
  exports["SIGTTIN"] = SIGTTIN;
  exports["SIGTTOU"] = SIGTTOU;
  exports["SIGUNUSED"] = SIGUNUSED;
  exports["SIGURG"] = SIGURG;
  exports["SIGUSR1"] = SIGUSR1;
  exports["SIGUSR2"] = SIGUSR2;
  exports["SIGVTALRM"] = SIGVTALRM;
  exports["SIGWINCH"] = SIGWINCH;
  exports["SIGXCPU"] = SIGXCPU;
  exports["SIGXFSZ"] = SIGXFSZ;
  exports["fromString"] = fromString;
})(PS["Data.Posix.Signal"] = PS["Data.Posix.Signal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (v) {
          return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
      };
  }, Data_Functor.map(Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["first"] = first;
  exports["second"] = second;
  exports["strongFn"] = strongFn;
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.test = function (r) {
    return function (s) {
      var lastIndex = r.lastIndex;
      var result = r.test(s);
      r.lastIndex = lastIndex;
      return result;
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null) {
            return nothing;
          } else {
            var list = [];
            for (var i = 0; i < m.length; i++) {
              list.push(m[i] == null ? nothing : just(m[i]));
            }
            return just(list);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var noFlags = new RegexFlags({
      global: false, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  });
  var multiline = new RegexFlags({
      global: false, 
      ignoreCase: false, 
      multiline: true, 
      sticky: false, 
      unicode: false
  });
  var global = new RegexFlags({
      global: true, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["global"] = global;
  exports["multiline"] = multiline;
  exports["noFlags"] = noFlags;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["match"] = match;
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["replace"] = $foreign.replace;
  exports["split"] = $foreign.split;
  exports["test"] = $foreign.test;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
    "use strict";

  function _codePointAt (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          var codePointArray = Array.from(s);
          var isWithinRange  = i >= 0 && i < codePointArray.length;

          return isWithinRange ? just(codePointArray[i].codePointAt(0)) : nothing;
        };
      };
    };
  }

  function _codePointAtP (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.codePointAt(i)) : nothing;
        };
      };
    };
  }

  function endsWith (searchString) {
    return function (s) {
      return s.endsWith(searchString);
    };
  }

  function endsWithP (searchString) {
    return function (position) {
      return function (s) {
        return s.endsWith(searchString, position);
      };
    };
  }

  function escapeRegex (str) {
    return str.replace(/[.*+?^${}()|[\]\-\\]/g, "\\$&");
  }

  function fromCharArray (array) {
    return array.join("");
  }

  function includes (searchString) {
    return function (str) {
      return str.includes(searchString);
    };
  }

  function includesP (needle) {
    return function (position) {
      return function (haystack) {
        // For negative `position` values, we search from the beginning of the
        // string. This is in accordance with the native
        // `String.prototype.include` function.
        var pos = Math.max(0, position);

        // Converting to arrays takes care of any surrogate code points
        var needleA    = Array.from(needle);
        var haystackA  = Array.from(haystack).slice(pos);
        var needleALen = needleA.length;

        var maxIndex = haystackA.length + 1 - needleALen;
        var found    = false;
        var i;

        // Naive implementation, at some point we should check whether Boyer-Moore
        // or Knuth-Morris-Pratt are worthwhile
        for (i = 0; i < maxIndex; i++) {
          if (needleA.every(function (e, j) { return e === haystackA[i+j]; })) {
            found = true;
            break;
          }
        }

        return found;
      };
    };
  }

  function length (str) {
    return Array.from(str).length;
  }

  function lines (str) {
    // See http://www.unicode.org/reports/tr18/#RL1.6
    return str.split(/\r\n|[\n\v\f\r\u0085\u2028\u2029]/);
  }

  function normalize (str) {
    return str.normalize();
  }

  function _normalizeP (normalizationForm) {
    return function (str) {
      return str.normalize(normalizationForm);
    };
  }

  function _repeat (just) {
    return function (nothing) {
      return function (n) {
        return function (str) {
          var result;

          try {
            result = just(str.repeat(n));
          }
          catch (error) {
            result = nothing;
          }

          return result;
        };
      };
    };
  }

  function startsWith (searchString) {
    return function (s) {
      return s.startsWith(searchString);
    };
  }

  function startsWithP (searchString) {
    return function (position) {
      return function (s) {
        return s.startsWith(searchString, position);
      };
    };
  }

  function stripChars (chars) {
    return function (s) {
      return s.replace(RegExp("[" + escapeRegex(chars) + "]", "g"), "");
    };
  }

  function stripDiacritics (str) {
    return str.normalize("NFD").replace(/[\u0300-\u036f]/g, "");
  }

  function toCharArray (str) {
    return Array.from(str);
  }

  function unsafeCodePointAt (i) {
    return function (s) {
      var codePointArray = Array.from(s);
      var isWithinRange = i >= 0 && i < codePointArray.length;

      if (isWithinRange) {
        return codePointArray[i].codePointAt(0);
      }
      else {
        throw new Error("Data.String.Utils.unsafeCodePointAt: Invalid index");
      }
    };
  }

  function unsafeCodePointAtP (i) {
    return function (s) {
      if (i >= 0 && i < s.length) {
        return s.codePointAt(i);
      }
      else {
        throw new Error("Data.String.Utils.unsafeCodePointAt': Invalid index");
      }
    };
  }

  function unsafeRepeat (n) {
    return function (str) {
      try {
        return str.repeat(n);
      }
      catch (error) {
        throw new Error("Data.String.Utils.unsafeRepeat: Invalid count");
      }
    };
  }

  function words (s) {
    return s.split(/\s+/);
  }                                   
  exports.lines              = lines;  
  exports.startsWith         = startsWith;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.String.Utils"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];
  exports["lines"] = $foreign.lines;
  exports["startsWith"] = $foreign.startsWith;
})(PS["Data.String.Utils"] = PS["Data.String.Utils"] || {});
(function(exports) {
  /* global exports */
  /* global Buffer */
  /* global require */
  "use strict";

  exports.readStringImpl = function (enc) {
    return function (start) {
      return function (end) {
        return function (buff) {
          return function() {
            return buff.toString(enc, start, end);
          };
        };
      };
    };
  };

  exports.toStringImpl = function (enc) {
    return function (buff) {
      return function() {
        return buff.toString(enc);
      };
    };
  };
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Encoding"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Latin1 = (function () {
      function Latin1() {

      };
      Latin1.value = new Latin1();
      return Latin1;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = new Data_Show.Show(function (v) {
      if (v instanceof ASCII) {
          return "ASCII";
      };
      if (v instanceof UTF8) {
          return "UTF8";
      };
      if (v instanceof UTF16LE) {
          return "UTF16LE";
      };
      if (v instanceof UCS2) {
          return "UCS2";
      };
      if (v instanceof Base64) {
          return "Base64";
      };
      if (v instanceof Latin1) {
          return "Latin1";
      };
      if (v instanceof Binary) {
          return "Binary";
      };
      if (v instanceof Hex) {
          return "Hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 19, column 1 - line 19, column 39: " + [ v.constructor.name ]);
  });
  var encodingToNode = function (v) {
      if (v instanceof ASCII) {
          return "ascii";
      };
      if (v instanceof UTF8) {
          return "utf8";
      };
      if (v instanceof UTF16LE) {
          return "utf16le";
      };
      if (v instanceof UCS2) {
          return "ucs2";
      };
      if (v instanceof Base64) {
          return "base64";
      };
      if (v instanceof Latin1) {
          return "latin1";
      };
      if (v instanceof Binary) {
          return "binary";
      };
      if (v instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 31, column 1 - line 31, column 37: " + [ v.constructor.name ]);
  };
  exports["ASCII"] = ASCII;
  exports["UTF8"] = UTF8;
  exports["UTF16LE"] = UTF16LE;
  exports["UCS2"] = UCS2;
  exports["Base64"] = Base64;
  exports["Latin1"] = Latin1;
  exports["Binary"] = Binary;
  exports["Hex"] = Hex;
  exports["encodingToNode"] = encodingToNode;
  exports["showEncoding"] = showEncoding;
})(PS["Node.Encoding"] = PS["Node.Encoding"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Buffer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];
  var toString = function ($3) {
      return $foreign.toStringImpl(Node_Encoding.encodingToNode($3));
  };                                                     
  var readString = function ($5) {
      return $foreign.readStringImpl(Node_Encoding.encodingToNode($5));
  };
  exports["readString"] = readString;
  exports["toString"] = toString;
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
    'use strict';

  /* eslint-env node*/

  exports.unsafeFromNullable = function unsafeFromNullable (msg) {
      return function (x) {
          if (x === null) throw new Error(msg);
          return x;
      };
  };

  exports.spawnImpl = function spawnImpl (command) {
      return function (args) {
          return function (opts) {
              return function () {
                  return require('child_process').spawn(command, args, opts);
              };
          };
      };
  };

  exports.execFileImpl = function execImpl (command) {
      return function (args) {
          return function (opts) {
              return function (callback) {
                  return function () {
                      return require('child_process').execFile(command, args, opts, function (err, stdout, stderr) {
                          callback(err)(stdout)(stderr)();
                      });
                  };
              };
          };
      };
  };

  exports.mkOnClose = function mkOnClose (mkChildExit) {
      return function onClose (cp) {
          return function (cb) {
              return function () {
                  cp.on('exit', function (code, signal) {
                      cb(mkChildExit(code)(signal))();
                  });
              };
          };
      };
  };

  exports.onError = function onError (cp) {
      return function (cb) {
          return function () {
              cp.on('error', function (err) {
                  cb(err)();
              });
          };
      };
  };

  exports.undefined = undefined;
})(PS["Node.ChildProcess"] = PS["Node.ChildProcess"] || {});
(function(exports) {
    "use strict";

  exports.readChunkImpl = function (Left) {
    return function (Right) {
      return function (chunk) {
        if (chunk instanceof Buffer) {
          return Right(chunk);
        } else if (typeof chunk === "string") {
          return Left(chunk);
        } else {
          throw new Error(
            "Node.Stream.readChunkImpl: Unrecognised " +
            "chunk type; expected String or Buffer, got: " +
            chunk);
        }
      };
    };
  };

  exports.onDataEitherImpl = function (readChunk) {
    return function (r) {
      return function (f) {
        return function () {
          r.on("data", function (data) {
            f(readChunk(data))();
          });
        };
      };
    };
  };
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Stream"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];
  var readChunk = $foreign.readChunkImpl(Data_Either.Left.create)(Data_Either.Right.create);
  var onDataEither = function (r) {
      return function (cb) {
          return $foreign.onDataEitherImpl(readChunk)(r)(cb);
      };
  };
  var onData = function (r) {
      return function (cb) {
          var fromEither = function (x) {
              if (x instanceof Data_Either.Left) {
                  return Control_Monad_Eff_Exception["throw"]("Stream encoding should not be set");
              };
              if (x instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(x.value0);
              };
              throw new Error("Failed pattern match at Node.Stream line 92, column 5 - line 96, column 17: " + [ x.constructor.name ]);
          };
          return onDataEither(r)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(cb)(fromEither));
      };
  };
  var onDataString = function (r) {
      return function (enc) {
          return function (cb) {
              return onData(r)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(cb)(function ($17) {
                  return Control_Monad_Eff_Unsafe.unsafeCoerceEff(Node_Buffer.toString(enc)($17));
              }));
          };
      };
  };
  exports["onData"] = onData;
  exports["onDataEither"] = onDataEither;
  exports["onDataString"] = onDataString;
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.ChildProcess"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal = PS["Data.Posix.Signal"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_FS = PS["Node.FS"];
  var Node_Stream = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var Pipe = (function () {
      function Pipe() {

      };
      Pipe.value = new Pipe();
      return Pipe;
  })();
  var Ignore = (function () {
      function Ignore() {

      };
      Ignore.value = new Ignore();
      return Ignore;
  })();
  var ShareStream = (function () {
      function ShareStream(value0) {
          this.value0 = value0;
      };
      ShareStream.create = function (value0) {
          return new ShareStream(value0);
      };
      return ShareStream;
  })();
  var ShareFD = (function () {
      function ShareFD(value0) {
          this.value0 = value0;
      };
      ShareFD.create = function (value0) {
          return new ShareFD(value0);
      };
      return ShareFD;
  })();
  var Normally = (function () {
      function Normally(value0) {
          this.value0 = value0;
      };
      Normally.create = function (value0) {
          return new Normally(value0);
      };
      return Normally;
  })();
  var BySignal = (function () {
      function BySignal(value0) {
          this.value0 = value0;
      };
      BySignal.create = function (value0) {
          return new BySignal(value0);
      };
      return BySignal;
  })();
  var toStandardError = Unsafe_Coerce.unsafeCoerce;
  var toActualStdIOBehaviour = function (b) {
      if (b instanceof Pipe) {
          return Unsafe_Coerce.unsafeCoerce("pipe");
      };
      if (b instanceof Ignore) {
          return Unsafe_Coerce.unsafeCoerce("ignore");
      };
      if (b instanceof ShareFD) {
          return Unsafe_Coerce.unsafeCoerce(b.value0);
      };
      if (b instanceof ShareStream) {
          return Unsafe_Coerce.unsafeCoerce(b.value0);
      };
      throw new Error("Failed pattern match at Node.ChildProcess line 382, column 28 - line 386, column 33: " + [ b.constructor.name ]);
  };
  var toActualStdIOOptions = Data_Functor.map(Data_Functor.functorArray)(function ($29) {
      return Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(toActualStdIOBehaviour)($29));
  });
  var spawn = function (cmd) {
      return function (args) {
          var convertOpts = function (opts) {
              return {
                  cwd: Data_Maybe.fromMaybe($foreign["undefined"])(opts.cwd), 
                  stdio: toActualStdIOOptions(opts.stdio), 
                  env: Data_Nullable.toNullable(opts.env), 
                  detached: opts.detached, 
                  uid: Data_Maybe.fromMaybe($foreign["undefined"])(opts.uid), 
                  gid: Data_Maybe.fromMaybe($foreign["undefined"])(opts.gid)
              };
          };
          return function ($30) {
              return $foreign.spawnImpl(cmd)(args)(convertOpts($30));
          };
      };
  }; 
  var runChildProcess = function (v) {
      return v;
  };
  var pipe = Data_Functor.map(Data_Functor.functorArray)(Data_Maybe.Just.create)([ Pipe.value, Pipe.value, Pipe.value ]);
  var mkExit = function (code) {
      return function (signal) {
          var fromSignal = Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Data_Nullable.toMaybe)(function ($32) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(BySignal.create)(Data_Posix_Signal.fromString($32));
          });
          var fromCode = function ($33) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Normally.create)(Data_Nullable.toMaybe($33));
          };
          var v = Control_Alt.alt(Data_Maybe.altMaybe)(fromCode(code))(fromSignal(signal));
          if (v instanceof Data_Maybe.Just) {
              return v.value0;
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Node.ChildProcess.mkExit: Invalid arguments");
          };
          throw new Error("Failed pattern match at Node.ChildProcess line 152, column 3 - line 155, column 3: " + [ v.constructor.name ]);
      };
  };
  var onClose = $foreign.mkOnClose(mkExit);
  var missingStream = function (str) {
      return "Node.ChildProcess: stream not available: " + (str + ("\x0aThis is probably " + ("because you passed something other than Pipe to the stdio option when " + "you spawned it.")));
  };
  var stderr = function ($34) {
      return $foreign.unsafeFromNullable(missingStream("stderr"))((function (v) {
          return v.stderr;
      })(runChildProcess($34)));
  };
  var stdout = function ($36) {
      return $foreign.unsafeFromNullable(missingStream("stdout"))((function (v) {
          return v.stdout;
      })(runChildProcess($36)));
  };
  var defaultSpawnOptions = {
      cwd: Data_Maybe.Nothing.value, 
      stdio: pipe, 
      env: Data_Maybe.Nothing.value, 
      detached: false, 
      uid: Data_Maybe.Nothing.value, 
      gid: Data_Maybe.Nothing.value
  };
  var defaultExecOptions = {
      cwd: Data_Maybe.Nothing.value, 
      env: Data_Maybe.Nothing.value, 
      timeout: Data_Maybe.Nothing.value, 
      maxBuffer: Data_Maybe.Nothing.value, 
      killSignal: Data_Maybe.Nothing.value, 
      uid: Data_Maybe.Nothing.value, 
      gid: Data_Maybe.Nothing.value
  };
  var convertExecOptions = function (opts) {
      return Unsafe_Coerce.unsafeCoerce({
          cwd: Data_Maybe.fromMaybe($foreign["undefined"])(opts.cwd), 
          env: Data_Maybe.fromMaybe($foreign["undefined"])(opts.env), 
          timeout: Data_Maybe.fromMaybe($foreign["undefined"])(opts.timeout), 
          maxBuffer: Data_Maybe.fromMaybe($foreign["undefined"])(opts.maxBuffer), 
          killSignal: Data_Maybe.fromMaybe($foreign["undefined"])(opts.killSignal), 
          uid: Data_Maybe.fromMaybe($foreign["undefined"])(opts.uid), 
          gid: Data_Maybe.fromMaybe($foreign["undefined"])(opts.gid)
      });
  };
  var execFile = function (cmd) {
      return function (args) {
          return function (opts) {
              return function (callback) {
                  return $foreign.execFileImpl(cmd)(args)(convertExecOptions(opts))(function (err) {
                      return function (stdout$prime) {
                          return function (stderr$prime) {
                              return callback({
                                  error: Data_Nullable.toMaybe(err), 
                                  stdout: stdout$prime, 
                                  stderr: stderr$prime
                              });
                          };
                      };
                  });
              };
          };
      };
  };
  exports["Normally"] = Normally;
  exports["BySignal"] = BySignal;
  exports["Pipe"] = Pipe;
  exports["Ignore"] = Ignore;
  exports["ShareStream"] = ShareStream;
  exports["ShareFD"] = ShareFD;
  exports["defaultExecOptions"] = defaultExecOptions;
  exports["defaultSpawnOptions"] = defaultSpawnOptions;
  exports["execFile"] = execFile;
  exports["onClose"] = onClose;
  exports["pipe"] = pipe;
  exports["spawn"] = spawn;
  exports["stderr"] = stderr;
  exports["stdout"] = stdout;
  exports["toStandardError"] = toStandardError;
  exports["onError"] = $foreign.onError;
})(PS["Node.ChildProcess"] = PS["Node.ChildProcess"] || {});
(function(exports) {
    "use strict";
  var path =require("path"); 

  exports.normalize = path.normalize;

  exports.concat = function (segments) {
    return path.join.apply(this, segments);
  };

  exports.resolve = function (from) {
    return function (to) {
      return path.resolve.apply(this, from.concat([to]));
    };
  };                             

  exports.sep = path.sep;

  exports.delimiter = path.delimiter;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Path"];
  exports["concat"] = $foreign.concat;
  exports["delimiter"] = $foreign.delimiter;
  exports["normalize"] = $foreign.normalize;
  exports["resolve"] = $foreign.resolve;
  exports["sep"] = $foreign.sep;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
    "use strict";

  exports.process = process;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var AIX = (function () {
      function AIX() {

      };
      AIX.value = new AIX();
      return AIX;
  })();
  var Darwin = (function () {
      function Darwin() {

      };
      Darwin.value = new Darwin();
      return Darwin;
  })();
  var FreeBSD = (function () {
      function FreeBSD() {

      };
      FreeBSD.value = new FreeBSD();
      return FreeBSD;
  })();
  var Linux = (function () {
      function Linux() {

      };
      Linux.value = new Linux();
      return Linux;
  })();
  var OpenBSD = (function () {
      function OpenBSD() {

      };
      OpenBSD.value = new OpenBSD();
      return OpenBSD;
  })();
  var SunOS = (function () {
      function SunOS() {

      };
      SunOS.value = new SunOS();
      return SunOS;
  })();
  var Win32 = (function () {
      function Win32() {

      };
      Win32.value = new Win32();
      return Win32;
  })();
  var Android = (function () {
      function Android() {

      };
      Android.value = new Android();
      return Android;
  })();
  var fromString = function (v) {
      if (v === "aix") {
          return new Data_Maybe.Just(AIX.value);
      };
      if (v === "darwin") {
          return new Data_Maybe.Just(Darwin.value);
      };
      if (v === "freebsd") {
          return new Data_Maybe.Just(FreeBSD.value);
      };
      if (v === "linux") {
          return new Data_Maybe.Just(Linux.value);
      };
      if (v === "openbsd") {
          return new Data_Maybe.Just(OpenBSD.value);
      };
      if (v === "sunos") {
          return new Data_Maybe.Just(SunOS.value);
      };
      if (v === "win32") {
          return new Data_Maybe.Just(Win32.value);
      };
      if (v === "android") {
          return new Data_Maybe.Just(Android.value);
      };
      return Data_Maybe.Nothing.value;
  };
  var eqPlatform = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof AIX && y instanceof AIX) {
              return true;
          };
          if (x instanceof Darwin && y instanceof Darwin) {
              return true;
          };
          if (x instanceof FreeBSD && y instanceof FreeBSD) {
              return true;
          };
          if (x instanceof Linux && y instanceof Linux) {
              return true;
          };
          if (x instanceof OpenBSD && y instanceof OpenBSD) {
              return true;
          };
          if (x instanceof SunOS && y instanceof SunOS) {
              return true;
          };
          if (x instanceof Win32 && y instanceof Win32) {
              return true;
          };
          if (x instanceof Android && y instanceof Android) {
              return true;
          };
          return false;
      };
  });
  exports["AIX"] = AIX;
  exports["Darwin"] = Darwin;
  exports["FreeBSD"] = FreeBSD;
  exports["Linux"] = Linux;
  exports["OpenBSD"] = OpenBSD;
  exports["SunOS"] = SunOS;
  exports["Win32"] = Win32;
  exports["Android"] = Android;
  exports["fromString"] = fromString;
  exports["eqPlatform"] = eqPlatform;
})(PS["Node.Platform"] = PS["Node.Platform"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Process"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal = PS["Data.Posix.Signal"];
  var Data_StrMap = PS["Data.StrMap"];
  var Node_Platform = PS["Node.Platform"];
  var Node_Stream = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var platformStr = $foreign.process.platform;
  var platform = Node_Platform.fromString(platformStr);
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  var getEnv = mkEff(function (v) {
      return $foreign.process.env;
  });
  var lookupEnv = function (k) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_StrMap.lookup(k))(getEnv);
  }; 
  var cwd = $foreign.process.cwd;
  var argv = mkEff(function (v) {
      return $foreign.process.argv;
  });
  exports["argv"] = argv;
  exports["cwd"] = cwd;
  exports["getEnv"] = getEnv;
  exports["lookupEnv"] = lookupEnv;
  exports["platform"] = platform;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
    "use strict";

  exports.unsafeRequireFS = require("fs");
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.FS.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  exports["mkEff"] = mkEff;
  exports["unsafeRequireFS"] = $foreign.unsafeRequireFS;
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Internal = PS["Node.FS.Internal"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];        
  var fs = Node_FS_Internal.unsafeRequireFS;
  var readTextFile = function (encoding) {
      return function (file) {
          return Node_FS_Internal.mkEff(function (v) {
              return fs.readFileSync(file, {
                  encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
              });
          });
      };
  };
  var unlink = function (file) {
      return Node_FS_Internal.mkEff(function (v) {
          return fs.unlinkSync(file);
      });
  };
  var writeTextFile = function (encoding) {
      return function (file) {
          return function (text) {
              return Node_FS_Internal.mkEff(function (v) {
                  return fs.writeFileSync(file, text, {
                      encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
                  });
              });
          };
      };
  };
  exports["readTextFile"] = readTextFile;
  exports["unlink"] = unlink;
  exports["writeTextFile"] = writeTextFile;
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  var which =require("which"); 

  exports.whichImpl = function (options) {
    return function (path) {
      return function (errcb) {
        return function (cb) {
          return function() {
            which(path, { all: true, path: options.path, pathExt: options.pathExt }, function(err, resolved) {
              if (err) {
                errcb(err)();
              }
              else {
                cb(resolved)();
              }
            });
          };
        };
      };
    };
  };
})(PS["Node.Which"] = PS["Node.Which"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.Which"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Node_FS = PS["Node.FS"];
  var Prelude = PS["Prelude"];        
  var which$prime = function (v) {
      return function ($4) {
          return Control_Monad_Aff.makeAff($foreign.whichImpl({
              path: Data_Nullable.toNullable(v.path), 
              pathExt: Data_Nullable.toNullable(v.pathExt)
          })($4));
      };
  };
  exports["which'"] = which$prime;
})(PS["Node.Which"] = PS["Node.Which"] || {});
(function(exports) {
  var net =require("net"); 

  exports.send = function(cmd){
    return function(port){
      return function(cb){
        return function(err){
          return function(){
            var sock = net.createConnection({port: port})
              , result = ""
            sock.on('data', function (data) {
              result += data
            })
            .on('end', function () {
              cb(result)()
            })
            .on('connect', function () {
              sock.setEncoding('utf8');
              sock.write(cmd + "\n")
            })
            .on('error', function (e) {
              err(e)()
            })
          }
        }
      }
    }
  }
})(PS["PscIde"] = PS["PscIde"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Argonaut_Encode_Combinators = PS["Data.Argonaut.Encode.Combinators"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var Package = (function () {
      function Package() {

      };
      Package.value = new Package();
      return Package;
  })();
  var Ident = (function () {
      function Ident() {

      };
      Ident.value = new Ident();
      return Ident;
  })();
  var ModuleList = function (x) {
      return x;
  };
  var Message = function (x) {
      return x;
  };
  var Flex = (function () {
      function Flex(value0) {
          this.value0 = value0;
      };
      Flex.create = function (value0) {
          return new Flex(value0);
      };
      return Flex;
  })();
  var Distance = (function () {
      function Distance(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Distance.create = function (value0) {
          return function (value1) {
              return new Distance(value0, value1);
          };
      };
      return Distance;
  })();
  var LoadedModules = (function () {
      function LoadedModules() {

      };
      LoadedModules.value = new LoadedModules();
      return LoadedModules;
  })();
  var Imports = (function () {
      function Imports(value0) {
          this.value0 = value0;
      };
      Imports.create = function (value0) {
          return new Imports(value0);
      };
      return Imports;
  })();
  var AvailableModules = (function () {
      function AvailableModules() {

      };
      AvailableModules.value = new AvailableModules();
      return AvailableModules;
  })();
  var Implicit = (function () {
      function Implicit() {

      };
      Implicit.value = new Implicit();
      return Implicit;
  })();
  var Explicit = (function () {
      function Explicit(value0) {
          this.value0 = value0;
      };
      Explicit.create = function (value0) {
          return new Explicit(value0);
      };
      return Explicit;
  })();
  var Hiding = (function () {
      function Hiding(value0) {
          this.value0 = value0;
      };
      Hiding.create = function (value0) {
          return new Hiding(value0);
      };
      return Hiding;
  })();
  var AddImplicitImport = (function () {
      function AddImplicitImport(value0) {
          this.value0 = value0;
      };
      AddImplicitImport.create = function (value0) {
          return new AddImplicitImport(value0);
      };
      return AddImplicitImport;
  })();
  var AddQualifiedImport = (function () {
      function AddQualifiedImport(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AddQualifiedImport.create = function (value0) {
          return function (value1) {
              return new AddQualifiedImport(value0, value1);
          };
      };
      return AddQualifiedImport;
  })();
  var AddImport = (function () {
      function AddImport(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AddImport.create = function (value0) {
          return function (value1) {
              return new AddImport(value0, value1);
          };
      };
      return AddImport;
  })();
  var SuccessFile = (function () {
      function SuccessFile(value0) {
          this.value0 = value0;
      };
      SuccessFile.create = function (value0) {
          return new SuccessFile(value0);
      };
      return SuccessFile;
  })();
  var SuccessText = (function () {
      function SuccessText(value0) {
          this.value0 = value0;
      };
      SuccessText.create = function (value0) {
          return new SuccessText(value0);
      };
      return SuccessText;
  })();
  var MultipleResults = (function () {
      function MultipleResults(value0) {
          this.value0 = value0;
      };
      MultipleResults.create = function (value0) {
          return new MultipleResults(value0);
      };
      return MultipleResults;
  })();
  var ExactFilter = (function () {
      function ExactFilter(value0) {
          this.value0 = value0;
      };
      ExactFilter.create = function (value0) {
          return new ExactFilter(value0);
      };
      return ExactFilter;
  })();
  var PrefixFilter = (function () {
      function PrefixFilter(value0) {
          this.value0 = value0;
      };
      PrefixFilter.create = function (value0) {
          return new PrefixFilter(value0);
      };
      return PrefixFilter;
  })();
  var ModuleFilter = (function () {
      function ModuleFilter(value0) {
          this.value0 = value0;
      };
      ModuleFilter.create = function (value0) {
          return new ModuleFilter(value0);
      };
      return ModuleFilter;
  })();
  var DependencyFilter = (function () {
      function DependencyFilter(value0) {
          this.value0 = value0;
      };
      DependencyFilter.create = function (value0) {
          return new DependencyFilter(value0);
      };
      return DependencyFilter;
  })();
  var Cwd = (function () {
      function Cwd() {

      };
      Cwd.value = new Cwd();
      return Cwd;
  })();
  var Ls = (function () {
      function Ls(value0) {
          this.value0 = value0;
      };
      Ls.create = function (value0) {
          return new Ls(value0);
      };
      return Ls;
  })();
  var Quit = (function () {
      function Quit() {

      };
      Quit.value = new Quit();
      return Quit;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var Load = (function () {
      function Load(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Load.create = function (value0) {
          return function (value1) {
              return new Load(value0, value1);
          };
      };
      return Load;
  })();
  var Complete = (function () {
      function Complete(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Complete.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Complete(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Complete;
  })();
  var Pursuit = (function () {
      function Pursuit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Pursuit.create = function (value0) {
          return function (value1) {
              return new Pursuit(value0, value1);
          };
      };
      return Pursuit;
  })();
  var Type = (function () {
      function Type(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Type.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Type(value0, value1, value2);
              };
          };
      };
      return Type;
  })();
  var AddClause = (function () {
      function AddClause(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AddClause.create = function (value0) {
          return function (value1) {
              return new AddClause(value0, value1);
          };
      };
      return AddClause;
  })();
  var CaseSplit = (function () {
      function CaseSplit(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      CaseSplit.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new CaseSplit(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return CaseSplit;
  })();
  var ImportCmd = (function () {
      function ImportCmd(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      ImportCmd.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new ImportCmd(value0, value1, value2, value3);
                  };
              };
          };
      };
      return ImportCmd;
  })();
  var RebuildCmd = (function () {
      function RebuildCmd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RebuildCmd.create = function (value0) {
          return function (value1) {
              return new RebuildCmd(value0, value1);
          };
      };
      return RebuildCmd;
  })();
  var unwrapResponse = function (dictDecodeJson) {
      return function (dictDecodeJson1) {
          return function (s) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(s))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(v))(function (v1) {
                      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v1)("resultType"))(function (v2) {
                          if (v2 === "success") {
                              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson1)(v1)("result"))(function (v3) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Either.Right(v3));
                              });
                          };
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(v1)("result"))(function (v3) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Either.Left(v3));
                          });
                      });
                  });
              });
          };
      };
  };
  var showPursuitType = new Data_Show.Show(function (v) {
      if (v instanceof Package) {
          return "package";
      };
      if (v instanceof Ident) {
          return "completion";
      };
      throw new Error("Failed pattern match at PscIde.Command line 17, column 1 - line 17, column 45: " + [ v.constructor.name ]);
  });
  var jsonSingletonObject$prime = function (dictEncodeJson) {
      return function (s) {
          return function (o) {
              return Data_Argonaut_Core.jsonSingletonObject(s)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(o));
          };
      };
  };
  var filterWrapper = function (dictEncodeJson) {
      return function (f) {
          return function (q) {
              return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("filter")(f))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("params")(q))(Data_Argonaut_Core.jsonEmptyObject));
          };
      };
  };
  var encodePursuitType = new Data_Argonaut_Encode_Class.EncodeJson(function ($153) {
      return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Show.show(showPursuitType)($153));
  });
  var encodeMaybeNull = function (dictEncodeJson) {
      return Data_Maybe.maybe(Data_Argonaut_Core.jsonNull)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson));
  };
  var encodeMatcher = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      if (v instanceof Flex) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("matcher")("flex"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("params")(jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("search")(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Distance) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("matcher")("distance"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("params")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("search")(v.value0))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonInt)("maximumDistance")(v.value1))(Data_Argonaut_Core.jsonEmptyObject))))(Data_Argonaut_Core.jsonEmptyObject));
      };
      throw new Error("Failed pattern match at PscIde.Command line 28, column 1 - line 28, column 45: " + [ v.constructor.name ]);
  });
  var encodeImportCommand = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      if (v instanceof AddImplicitImport) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("importCommand")("addImplicitImport"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("module")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof AddQualifiedImport) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("importCommand")("addQualifiedImport"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("module")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("qualifier")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof AddImport) {
          return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("importCommand")("addImport"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("identifier")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("qualifier")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonMaybe(Data_Argonaut_Encode_Class.encodeJsonJString))(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      throw new Error("Failed pattern match at PscIde.Command line 173, column 1 - line 173, column 57: " + [ v.constructor.name ]);
  });
  var encodeFilter = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      if (v instanceof ExactFilter) {
          return filterWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("exact")(jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("search")(v.value0));
      };
      if (v instanceof PrefixFilter) {
          return filterWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("prefix")(jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("search")(v.value0));
      };
      if (v instanceof ModuleFilter) {
          return filterWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("modules")(jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))("modules")(v.value0));
      };
      if (v instanceof DependencyFilter) {
          return filterWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("dependencies")(jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))("modules")(v.value0));
      };
      throw new Error("Failed pattern match at PscIde.Command line 57, column 1 - line 57, column 43: " + [ v.constructor.name ]);
  });
  var encodeCompletionOptions = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("maxResults")(encodeMaybeNull(Data_Argonaut_Encode_Class.encodeJsonInt)(v.maxResults)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("groupReexports")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(v.groupReexports)))(Data_Argonaut_Core.jsonEmptyObject));
  });
  var decodeTypePosition = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("name"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("start"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonInt))(v)("end"))(function (v3) {
                      if (v2.length === 2 && v3.length === 2) {
                          return new Data_Either.Right({
                              name: v1, 
                              start: {
                                  line: v2[0], 
                                  column: v2[1]
                              }, 
                              end: {
                                  line: v3[0], 
                                  column: v3[1]
                              }
                          });
                      };
                      return new Data_Either.Left("Start/end should be arrays");
                  });
              });
          });
      });
  });
  var decodeTypeInfo = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var getFieldMaybe = function (dictDecodeJson) {
          return function (o) {
              return function (f) {
                  return Data_Either.Right.create(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Data_Argonaut_Decode_Combinators.getField(dictDecodeJson)(o)(f)));
              };
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("identifier"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("type"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("module"))(function (v3) {
                      return Control_Bind.bind(Data_Either.bindEither)(getFieldMaybe(decodeTypePosition)(v)("definedAt"))(function (v4) {
                          return Control_Bind.bind(Data_Either.bindEither)(getFieldMaybe(Data_Argonaut_Decode_Class.decodeJsonString)(v)("expandedType"))(function (v5) {
                              return Control_Bind.bind(Data_Either.bindEither)(getFieldMaybe(Data_Argonaut_Decode_Class.decodeJsonString)(v)("documentation"))(function (v6) {
                                  return Control_Bind.bind(Data_Either.bindEither)(Data_Either.Right.create(Data_Either.either(Data_Function["const"]([  ]))(Control_Category.id(Control_Category.categoryFn))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(v)("exportedFrom"))))(function (v7) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                          identifier: v1, 
                                          "type'": v2, 
                                          "module'": v3, 
                                          definedAt: v4, 
                                          expandedType: v5, 
                                          documentation: v6, 
                                          exportedFrom: v7
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      });
  });
  var decodeModuleList = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Data_Functor.map(Data_Either.functorEither)(ModuleList)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(json));
  });
  var decodeMessage = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Data_Maybe.maybe(new Data_Either.Left("Message not string"))(function ($154) {
          return Data_Either.Right.create(Message($154));
      })(Data_Argonaut_Core.toString(json));
  });
  var decodeImportResult = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(SuccessText.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(json)))(Data_Functor.map(Data_Either.functorEither)(SuccessFile.create)(Data_Argonaut_Decode_Class.decodeJson(decodeMessage)(json))))(Data_Functor.map(Data_Either.functorEither)(MultipleResults.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(decodeTypeInfo))(json))))(new Data_Either.Left("Couldn't parse as ImportResult"));
  });
  var decodeImport = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("module"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("importType"))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(v)("qualifier")))(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value)))(function (v3) {
                      if (v2 === "implicit") {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              moduleName: v1, 
                              importType: Implicit.value, 
                              qualifier: v3
                          });
                      };
                      if (v2 === "explicit") {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(v)("identifiers"))(function (v4) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  moduleName: v1, 
                                  importType: new Explicit(v4), 
                                  qualifier: v3
                              });
                          });
                      };
                      if (v2 === "hiding") {
                          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(v)("identifiers"))(function (v4) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  moduleName: v1, 
                                  importType: new Hiding(v4), 
                                  qualifier: v3
                              });
                          });
                      };
                      return new Data_Either.Left("unknown importType");
                  });
              });
          });
      });
  });
  var decodeImportList = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      var decodeModuleNameBug = function (moduleName) {
          return Data_Functor.map(Data_Either.functorEither)(Data_String.joinWith("."))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(moduleName));
      };
      var decodeObject = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonJson)(v)("moduleName"))(function (v1) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Alt.alt(Data_Either.altEither)(decodeModuleNameBug(v1))(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(v1)))(function (v2) {
                  return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(decodeImport))(v)("imports"))(function (v3) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          moduleName: new Data_Maybe.Just(v2), 
                          imports: v3
                      });
                  });
              });
          });
      });
      var decodeArray = Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(decodeImport))(json))(function (v) {
          return Control_Applicative.pure(Data_Either.applicativeEither)({
              moduleName: Data_Maybe.Nothing.value, 
              imports: v
          });
      });
      return Control_Alt.alt(Data_Either.altEither)(decodeObject)(decodeArray);
  });
  var commandWrapper = function (dictEncodeJson) {
      return function (s) {
          return function (o) {
              return Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("command")(s))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(dictEncodeJson)("params")(o))(Data_Argonaut_Core.jsonEmptyObject));
          };
      };
  };
  var encodeCommand = new Data_Argonaut_Encode_Class.EncodeJson(function (v) {
      if (v instanceof Cwd) {
          return jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("command")("cwd");
      };
      if (v instanceof Ls && v.value0 instanceof LoadedModules) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("list")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("loadedModules"))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Ls && v.value0 instanceof AvailableModules) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("list")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("availableModules"))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Ls && v.value0 instanceof Imports) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("list")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("type")("import"))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("file")(v.value0.value0))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Quit) {
          return jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("command")("quit");
      };
      if (v instanceof Reset) {
          return jsonSingletonObject$prime(Data_Argonaut_Encode_Class.encodeJsonJString)("command")("reset");
      };
      if (v instanceof Load) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("load")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("modules")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("dependencies")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Complete) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("complete")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("filters")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(encodeFilter))(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("matcher")(encodeMaybeNull(encodeMatcher)(v.value1)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("currentModule")(encodeMaybeNull(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value2)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("options")(Data_Argonaut_Encode_Class.encodeJson(encodeCompletionOptions)(v.value3)))(Data_Argonaut_Core.jsonEmptyObject)))));
      };
      if (v instanceof Pursuit) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("pursuit")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("type")(Data_Argonaut_Encode_Class.encodeJson(encodePursuitType)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJString)("query")(v.value1))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Type) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("type")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("search")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("filters")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(encodeFilter))(v.value1)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("currentModule")(encodeMaybeNull(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value2)))(Data_Argonaut_Core.jsonEmptyObject))));
      };
      if (v instanceof AddClause) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("addClause")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("line")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("annotations")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof CaseSplit) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("caseSplit")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("line")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("begin")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(v.value1)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("end")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonInt)(v.value2)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("annotations")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJBoolean)(v.value3)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("type")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value4)))(Data_Argonaut_Core.jsonEmptyObject))))));
      };
      if (v instanceof ImportCmd) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("import")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("file")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("outfile")(encodeMaybeNull(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value1)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("filters")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(encodeFilter))(v.value2)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("importCommand")(Data_Argonaut_Encode_Class.encodeJson(encodeImportCommand)(v.value3)))(Data_Argonaut_Core.jsonEmptyObject)))));
      };
      if (v instanceof RebuildCmd) {
          return commandWrapper(Data_Argonaut_Encode_Class.encodeJsonJson)("rebuild")(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("file")(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value0)))(Data_Argonaut_Encode_Combinators.extend(Data_Argonaut_Encode_Class.encodeJsonJson)(Data_Argonaut_Encode_Combinators.assoc(Data_Argonaut_Encode_Class.encodeJsonJson)("actualFile")(encodeMaybeNull(Data_Argonaut_Encode_Class.encodeJsonJString)(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      throw new Error("Failed pattern match at PscIde.Command line 103, column 1 - line 103, column 45: " + [ v.constructor.name ]);
  });
  exports["Cwd"] = Cwd;
  exports["Ls"] = Ls;
  exports["Quit"] = Quit;
  exports["Reset"] = Reset;
  exports["Load"] = Load;
  exports["Complete"] = Complete;
  exports["Pursuit"] = Pursuit;
  exports["Type"] = Type;
  exports["AddClause"] = AddClause;
  exports["CaseSplit"] = CaseSplit;
  exports["ImportCmd"] = ImportCmd;
  exports["RebuildCmd"] = RebuildCmd;
  exports["ExactFilter"] = ExactFilter;
  exports["PrefixFilter"] = PrefixFilter;
  exports["ModuleFilter"] = ModuleFilter;
  exports["DependencyFilter"] = DependencyFilter;
  exports["AddImplicitImport"] = AddImplicitImport;
  exports["AddQualifiedImport"] = AddQualifiedImport;
  exports["AddImport"] = AddImport;
  exports["SuccessFile"] = SuccessFile;
  exports["SuccessText"] = SuccessText;
  exports["MultipleResults"] = MultipleResults;
  exports["Implicit"] = Implicit;
  exports["Explicit"] = Explicit;
  exports["Hiding"] = Hiding;
  exports["LoadedModules"] = LoadedModules;
  exports["Imports"] = Imports;
  exports["AvailableModules"] = AvailableModules;
  exports["Flex"] = Flex;
  exports["Distance"] = Distance;
  exports["Message"] = Message;
  exports["ModuleList"] = ModuleList;
  exports["Package"] = Package;
  exports["Ident"] = Ident;
  exports["commandWrapper"] = commandWrapper;
  exports["encodeMaybeNull"] = encodeMaybeNull;
  exports["filterWrapper"] = filterWrapper;
  exports["unwrapResponse"] = unwrapResponse;
  exports["showPursuitType"] = showPursuitType;
  exports["encodePursuitType"] = encodePursuitType;
  exports["encodeMatcher"] = encodeMatcher;
  exports["encodeFilter"] = encodeFilter;
  exports["encodeCompletionOptions"] = encodeCompletionOptions;
  exports["encodeCommand"] = encodeCommand;
  exports["encodeImportCommand"] = encodeImportCommand;
  exports["decodeMessage"] = decodeMessage;
  exports["decodeModuleList"] = decodeModuleList;
  exports["decodeTypeInfo"] = decodeTypeInfo;
  exports["decodeTypePosition"] = decodeTypePosition;
  exports["decodeImportList"] = decodeImportList;
  exports["decodeImport"] = decodeImport;
  exports["decodeImportResult"] = decodeImportResult;
})(PS["PscIde.Command"] = PS["PscIde.Command"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["PscIde"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Encode_Class = PS["Data.Argonaut.Encode.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];
  var PscIde_Command = PS["PscIde.Command"];        
  var sendCommandR = function (dictEncodeJson) {
      return function (dictDecodeJson) {
          return function (dictDecodeJson1) {
              return function (port) {
                  return function (command) {
                      return Control_Monad_Aff.makeAff(function (err) {
                          return function (succ) {
                              return $foreign.send(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(command)))(port)(function ($6) {
                                  return succ(PscIde_Command.unwrapResponse(dictDecodeJson)(dictDecodeJson1)($6));
                              })(err);
                          };
                      });
                  };
              };
          };
      };
  };
  var sendCommand = function (dictEncodeJson) {
      return function (dictDecodeJson) {
          return function (port) {
              return function (command) {
                  return Control_Monad_Aff.makeAff(function (err) {
                      return function (succ) {
                          return $foreign.send(Data_Show.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode_Class.encodeJson(dictEncodeJson)(command)))(port)(function ($7) {
                              return succ(Control_Bind.join(Data_Either.bindEither)(PscIde_Command.unwrapResponse(Data_Argonaut_Decode_Class.decodeJsonString)(dictDecodeJson)($7)));
                          })(err);
                      };
                  });
              };
          };
      };
  };
  var type$prime = function (port) {
      return function (s) {
          return function (fs) {
              return function (mod) {
                  return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode_Class.decodeArray(PscIde_Command.decodeTypeInfo))(port)(new PscIde_Command.Type(s, fs, mod));
              };
          };
      };
  };
  var quit = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(PscIde_Command.Quit.value);
  };
  var qualifiedImport = function (port) {
      return function (infile) {
          return function (outfile) {
              return function (mod) {
                  return function (qualifier) {
                      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportResult)(port)(new PscIde_Command.ImportCmd(infile, outfile, [  ], new PscIde_Command.AddQualifiedImport(mod, qualifier)));
                  };
              };
          };
      };
  };
  var load = function (port) {
      return function (ms) {
          return function (ds) {
              return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(new PscIde_Command.Load(ms, ds));
          };
      };
  };
  var listLoadedModules = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeModuleList)(port)(new PscIde_Command.Ls(PscIde_Command.LoadedModules.value));
  };
  var listImports = function (port) {
      return function (fp) {
          return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportList)(port)(new PscIde_Command.Ls(new PscIde_Command.Imports(fp)));
      };
  };
  var listAvailableModules = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeModuleList)(port)(new PscIde_Command.Ls(PscIde_Command.AvailableModules.value));
  };
  var implicitImport = function (port) {
      return function (infile) {
          return function (outfile) {
              return function (filters) {
                  return function (mod) {
                      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportResult)(port)(new PscIde_Command.ImportCmd(infile, outfile, filters, new PscIde_Command.AddImplicitImport(mod)));
                  };
              };
          };
      };
  };
  var explicitImport = function (port) {
      return function (infile) {
          return function (outfile) {
              return function (filters) {
                  return function (ident) {
                      return function (qualifier) {
                          return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportResult)(port)(new PscIde_Command.ImportCmd(infile, outfile, filters, new PscIde_Command.AddImport(ident, qualifier)));
                      };
                  };
              };
          };
      };
  };
  var defaultCompletionOptions = {
      maxResults: Data_Maybe.Nothing.value, 
      groupReexports: false
  };
  var cwd = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(PscIde_Command.Cwd.value);
  };
  var complete = function (port) {
      return function (fs) {
          return function (m) {
              return function (mod) {
                  return function (opts) {
                      return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode_Class.decodeArray(PscIde_Command.decodeTypeInfo))(port)(new PscIde_Command.Complete(fs, m, mod, opts));
                  };
              };
          };
      };
  };
  var suggestTypos = function (port) {
      return function (q) {
          return function (m) {
              return function (mod) {
                  return function (opts) {
                      return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
                          return Control_Alt.alt(Data_Either.altEither)(v)(Control_Applicative.pure(Data_Either.applicativeEither)([  ]));
                      })(complete(port)([  ])(new Data_Maybe.Just(new PscIde_Command.Distance(q, m)))(mod)(opts));
                  };
              };
          };
      };
  };
  var caseSplit = function (port) {
      return function (line) {
          return function (begin) {
              return function (end) {
                  return function (annotations) {
                      return function (typ) {
                          return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(port)(new PscIde_Command.CaseSplit(line, begin, end, annotations, typ));
                      };
                  };
              };
          };
      };
  };
  var addClause = function (port) {
      return function (line) {
          return function (annotations) {
              return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString))(port)(new PscIde_Command.AddClause(line, annotations));
          };
      };
  };
  exports["addClause"] = addClause;
  exports["caseSplit"] = caseSplit;
  exports["complete"] = complete;
  exports["cwd"] = cwd;
  exports["defaultCompletionOptions"] = defaultCompletionOptions;
  exports["explicitImport"] = explicitImport;
  exports["implicitImport"] = implicitImport;
  exports["listAvailableModules"] = listAvailableModules;
  exports["listImports"] = listImports;
  exports["listLoadedModules"] = listLoadedModules;
  exports["load"] = load;
  exports["qualifiedImport"] = qualifiedImport;
  exports["quit"] = quit;
  exports["sendCommand"] = sendCommand;
  exports["sendCommandR"] = sendCommandR;
  exports["suggestTypos"] = suggestTypos;
  exports["type'"] = type$prime;
})(PS["PscIde"] = PS["PscIde"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Data_Traversable = PS["Data.Traversable"];
  var Global = PS["Global"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var Node_Path = PS["Node.Path"];
  var Node_Which = PS["Node.Which"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];        
  var Started = (function () {
      function Started(value0) {
          this.value0 = value0;
      };
      Started.create = function (value0) {
          return new Started(value0);
      };
      return Started;
  })();
  var Closed = (function () {
      function Closed() {

      };
      Closed.value = new Closed();
      return Closed;
  })();
  var StartError = (function () {
      function StartError(value0) {
          this.value0 = value0;
      };
      StartError.create = function (value0) {
          return new StartError(value0);
      };
      return StartError;
  })();
  var All = (function () {
      function All() {

      };
      All.value = new All();
      return All;
  })();
  var None = (function () {
      function None() {

      };
      None.value = new None();
      return None;
  })();
  var Debug = (function () {
      function Debug() {

      };
      Debug.value = new Debug();
      return Debug;
  })();
  var Perf = (function () {
      function Perf() {

      };
      Perf.value = new Perf();
      return Perf;
  })();
  var Executable = (function () {
      function Executable(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Executable.create = function (value0) {
          return function (value1) {
              return new Executable(value0, value1);
          };
      };
      return Executable;
  })();
  var stopServer = function (port) {
      return Data_Functor["void"](Control_Monad_Aff.functorAff)(PscIde.quit(port));
  };
  var portFilePath = function (cwd) {
      return Node_Path.concat([ cwd, ".psc-ide-port" ]);
  };
  var savePort = function (port) {
      return function (cwd) {
          return Node_FS_Sync.writeTextFile(Node_Encoding.UTF8.value)(portFilePath(cwd))(Data_Show.show(Data_Show.showInt)(port));
      };
  };
  var pickFreshPort = Control_Monad_Eff_Random.randomInt(15000)(16000);
  var logParam = function (v) {
      if (v instanceof All) {
          return "all";
      };
      if (v instanceof None) {
          return "none";
      };
      if (v instanceof Debug) {
          return "debug";
      };
      if (v instanceof Perf) {
          return "perf";
      };
      throw new Error("Failed pattern match at PscIde.Server line 53, column 12 - line 59, column 1: " + [ v.constructor.name ]);
  };
  var startServer = function (v) {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Node_ChildProcess.spawn(v.exe)(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (v.combinedExe) {
              return [ "ide", "server" ];
          };
          return [  ];
      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.maybe([  ])(function (p) {
          return [ "-p", Data_Show.show(Data_Show.showInt)(p) ];
      })(v.port))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.maybe([  ])(function (d) {
          return [ "-d", d ];
      })(v.directory))(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.maybe([  ])(function (od) {
          return [ "--output-directory", od ];
      })(v.outputDirectory))(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (v.watch) {
              return [  ];
          };
          return [ "--no-watch" ];
      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (v.debug) {
              return [ "--debug" ];
          };
          return [  ];
      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (v.polling) {
              return [ "--polling" ];
          };
          return [  ];
      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)((function () {
          if (v.editorMode) {
              return [ "--editor-mode" ];
          };
          return [  ];
      })())(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.maybe([  ])(function (l) {
          return [ "--log-level", logParam(l) ];
      })(v.logLevel))(v.source))))))))))((function () {
          var $19 = {};
          for (var $20 in Node_ChildProcess.defaultSpawnOptions) {
              if ({}.hasOwnProperty.call(Node_ChildProcess.defaultSpawnOptions, $20)) {
                  $19[$20] = Node_ChildProcess["defaultSpawnOptions"][$20];
              };
          };
          $19.cwd = v.cwd;
          $19.stdio = v.stdio;
          return $19;
      })())))(function (v1) {
          var handleErr = Control_Monad_Aff.makeAff(function (v2) {
              return function (succ) {
                  return function __do() {
                      Node_ChildProcess.onError(v1)(function (v3) {
                          return succ(new StartError("psc-ide-server error"));
                      })();
                      return Node_ChildProcess.onClose(v1)(function (exit) {
                          if (exit instanceof Node_ChildProcess.Normally && exit.value0 === 0) {
                              return succ(Closed.value);
                          };
                          if (exit instanceof Node_ChildProcess.Normally) {
                              return succ(StartError.create("Error code returned: " + Data_Show.show(Data_Show.showInt)(exit.value0)));
                          };
                          return succ(new StartError("Other close error"));
                      })();
                  };
              };
          });
          return Data_Newtype.unwrap(Control_Monad_Aff.newtypeParAff)(Control_Alt.alt(Control_Monad_Aff.altParAff)(Control_Parallel_Class.parallel(Control_Monad_Aff.parallelParAff)(handleErr))(Control_Parallel_Class.parallel(Control_Monad_Aff.parallelParAff)(Data_Functor.voidLeft(Control_Monad_Aff.functorAff)(Control_Monad_Aff.delay(100.0))(new Started(v1)))));
      });
  };
  var getSavedPort = function (cwd) {
      return function __do() {
          var v = Control_Monad_Eff_Exception.catchException(function (v) {
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
          })(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(Node_FS_Sync.readTextFile(Node_Encoding.UTF8.value)(portFilePath(cwd))))();
          return Data_Maybe.maybe(Data_Maybe.Nothing.value)(function ($52) {
              return Data_Int.fromNumber(Global.readInt(10)($52));
          })(v);
      };
  };
  var findBins$prime = function (v) {
      return function (executable) {
          var getVersion = function (bin) {
              return Control_Monad_Aff.makeAff(function (err) {
                  return function (succ) {
                      return Node_ChildProcess.execFile(bin)([ "--version" ])((function () {
                          var $42 = {};
                          for (var $43 in Node_ChildProcess.defaultExecOptions) {
                              if ({}.hasOwnProperty.call(Node_ChildProcess.defaultExecOptions, $43)) {
                                  $42[$43] = Node_ChildProcess["defaultExecOptions"][$43];
                              };
                          };
                          $42.env = v.env;
                          return $42;
                      })())(function (v1) {
                          return Data_Maybe.maybe(Control_Bind.bind(Control_Monad_Eff.bindEff)(Node_Buffer.readString(Node_Encoding.UTF8.value)(0)(100)(v1.stdout))(succ))(err)(v1.error);
                      });
                  };
              });
          };
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Alt.alt(Control_Monad_Aff.altAff)(Node_Which["which'"]({
              path: v.path, 
              pathExt: v.pathExt
          })(executable))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ])))(function (v1) {
              return Data_Traversable["for"](Control_Monad_Aff.applicativeAff)(Data_Traversable.traversableArray)(v1)(function (bin) {
                  return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Functor.map(Data_Functor.functorFn)(Executable.create(bin))(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)))(Control_Monad_Aff.attempt(getVersion(bin)));
              });
          });
      };
  }; 
  var deleteSavedPort = function (cwd) {
      return Node_FS_Sync.unlink(portFilePath(cwd));
  };
  var defaultServerArgs = {
      exe: "purs", 
      combinedExe: true, 
      cwd: Data_Maybe.Nothing.value, 
      stdio: Node_ChildProcess.pipe, 
      source: [  ], 
      port: Data_Maybe.Nothing.value, 
      directory: Data_Maybe.Nothing.value, 
      outputDirectory: Data_Maybe.Nothing.value, 
      watch: true, 
      debug: false, 
      polling: false, 
      editorMode: false, 
      logLevel: Data_Maybe.Nothing.value
  };
  exports["Executable"] = Executable;
  exports["All"] = All;
  exports["None"] = None;
  exports["Debug"] = Debug;
  exports["Perf"] = Perf;
  exports["Started"] = Started;
  exports["Closed"] = Closed;
  exports["StartError"] = StartError;
  exports["defaultServerArgs"] = defaultServerArgs;
  exports["deleteSavedPort"] = deleteSavedPort;
  exports["findBins'"] = findBins$prime;
  exports["getSavedPort"] = getSavedPort;
  exports["logParam"] = logParam;
  exports["pickFreshPort"] = pickFreshPort;
  exports["portFilePath"] = portFilePath;
  exports["savePort"] = savePort;
  exports["startServer"] = startServer;
  exports["stopServer"] = stopServer;
})(PS["PscIde.Server"] = PS["PscIde.Server"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_FS = PS["Node.FS"];
  var Node_Path = PS["Node.Path"];
  var Node_Process = PS["Node.Process"];
  var Prelude = PS["Prelude"];
  var PscIde_Server = PS["PscIde.Server"];        
  var findBins = function (pathVar) {
      return function (server) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Node_Process.getEnv))(function (v) {
              return PscIde_Server["findBins'"]({
                  pathExt: Data_Maybe.Nothing.value, 
                  path: Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(pathVar), 
                  env: Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function ($6) {
                      return Data_Maybe.Just.create(Data_Function.flip(Data_StrMap.insert("PATH"))(v)($6));
                  })(pathVar)
              })(server);
          });
      };
  };
  var addNpmBinPath = function (rootDir) {
      return function (path) {
          return Node_Path.concat([ rootDir, "node_modules", ".bin" ]) + Data_Maybe.maybe("")(function (v) {
              return Node_Path.delimiter + v;
          })(path);
      };
  };
  var getPathVar = function (addNpmBin) {
      return function (rootDir) {
          return function __do() {
              var v = Node_Process.lookupEnv("PATH")();
              if (addNpmBin) {
                  return Data_Either.Right.create(addNpmBinPath(rootDir)(v));
              };
              return Data_Either.Left.create(Data_Maybe.fromMaybe("")(v));
          };
      };
  };
  exports["addNpmBinPath"] = addNpmBinPath;
  exports["findBins"] = findBins;
  exports["getPathVar"] = getPathVar;
})(PS["IdePurescript.Exec"] = PS["IdePurescript.Exec"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var PscError = function (x) {
      return x;
  };
  var RebuildResult = (function () {
      function RebuildResult(value0) {
          this.value0 = value0;
      };
      RebuildResult.create = function (value0) {
          return new RebuildResult(value0);
      };
      return RebuildResult;
  })();
  var RebuildError = (function () {
      function RebuildError(value0) {
          this.value0 = value0;
      };
      RebuildError.create = function (value0) {
          return new RebuildError(value0);
      };
      return RebuildError;
  })();        
  var parsePosition = Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(function (obj) {
      return Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return {
                          startLine: v, 
                          startColumn: v1, 
                          endLine: v2, 
                          endColumn: v3
                      };
                  };
              };
          };
      })(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(obj)("startLine")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(obj)("startColumn")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(obj)("endLine")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonInt)(obj)("endColumn")));
  });
  var parseSuggestion = Data_Maybe.maybe(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(function (obj) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("replacement"))(function (v) {
          return Control_Bind.bind(Data_Either.bindEither)(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Control_Category.id(Control_Category.categoryFn))(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(obj)("replaceRange"))(parsePosition))))(function (v1) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Maybe.Just({
                  replacement: v, 
                  replaceRange: v1
              }));
          });
      });
  });
  var parsePscError = function (obj) {
      return Data_Functor.map(Data_Either.functorEither)(PscError)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return function (v6) {
                                  return {
                                      moduleName: v, 
                                      errorCode: v1, 
                                      message: v2, 
                                      filename: v3, 
                                      position: v4, 
                                      errorLink: v5, 
                                      suggestion: v6
                                  };
                              };
                          };
                      };
                  };
              };
          };
      })(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(obj)("moduleName")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("errorCode")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("message")))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeJsonString))(obj)("filename")))(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(obj)("position"))(parsePosition)))(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonString)(obj)("errorLink")))(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeJsonMaybe(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(obj)("suggestion"))(parseSuggestion)));
  };
  var parsePscResult = function (obj) {
      return Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(function (v) {
          return function (v1) {
              return {
                  warnings: v, 
                  errors: v1
              };
          };
      })(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(obj)("warnings"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(parsePscError))))(Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Combinators.getField(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson)))(obj)("errors"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(parsePscError)));
  };
  var parsePscOutput = Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($20) {
      return Data_Maybe.maybe(new Data_Either.Left("not object"))(parsePscResult)(Data_Argonaut_Core.toObject($20));
  })(Data_Argonaut_Parser.jsonParser);
  var decodeJsonPscError = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeStrMap(Data_Argonaut_Decode_Class.decodeJsonJson))(json))(parsePscError);
  });
  var decodeRebuildResult = new Data_Argonaut_Decode_Class.DecodeJson(function (json) {
      return Control_Alt.alt(Data_Either.altEither)(Data_Functor.map(Data_Either.functorEither)(RebuildResult.create)(Control_Alt.alt(Data_Either.altEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeArray(decodeJsonPscError))(json))(Data_Functor.map(Data_Either.functorEither)(Data_Array.singleton)(Data_Argonaut_Decode_Class.decodeJson(decodeJsonPscError)(json)))))(Data_Functor.map(Data_Either.functorEither)(RebuildError.create)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeJsonString)(json)));
  });
  exports["PscError"] = PscError;
  exports["RebuildResult"] = RebuildResult;
  exports["RebuildError"] = RebuildError;
  exports["parsePosition"] = parsePosition;
  exports["parsePscError"] = parsePscError;
  exports["parsePscOutput"] = parsePscOutput;
  exports["parsePscResult"] = parsePscResult;
  exports["parseSuggestion"] = parseSuggestion;
  exports["decodeRebuildResult"] = decodeRebuildResult;
  exports["decodeJsonPscError"] = decodeJsonPscError;
})(PS["IdePurescript.PscErrors"] = PS["IdePurescript.PscErrors"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];        
  var test$prime = function (v) {
      if (v instanceof Data_Either.Left) {
          return Data_Function["const"](false);
      };
      if (v instanceof Data_Either.Right) {
          return Data_String_Regex.test(v.value0);
      };
      throw new Error("Failed pattern match at IdePurescript.Regex line 17, column 1 - line 17, column 57: " + [ v.constructor.name ]);
  };
  var replace$prime = function (v) {
      return function (v1) {
          return function (s) {
              if (v instanceof Data_Either.Left) {
                  return s;
              };
              if (v instanceof Data_Either.Right) {
                  return Data_String_Regex.replace(v.value0)(v1)(s);
              };
              throw new Error("Failed pattern match at IdePurescript.Regex line 9, column 1 - line 9, column 69: " + [ v.constructor.name, v1.constructor.name, s.constructor.name ]);
          };
      };
  };
  var match$prime = function (v) {
      if (v instanceof Data_Either.Left) {
          return Data_Function["const"](Data_Maybe.Nothing.value);
      };
      if (v instanceof Data_Either.Right) {
          return Data_String_Regex.match(v.value0);
      };
      throw new Error("Failed pattern match at IdePurescript.Regex line 13, column 1 - line 13, column 79: " + [ v.constructor.name ]);
  };
  exports["match'"] = match$prime;
  exports["replace'"] = replace$prime;
  exports["test'"] = test$prime;
})(PS["IdePurescript.Regex"] = PS["IdePurescript.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Decode_Class = PS["Data.Argonaut.Decode.Class"];
  var Data_Argonaut_Decode_Combinators = PS["Data.Argonaut.Decode.Combinators"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var IdePurescript_Regex = PS["IdePurescript.Regex"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var runMsg = function (v) {
      return v;
  };
  var eitherToErr = function (c) {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(c)(function (v) {
          if (v instanceof Data_Either.Left) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(v.value0));
          };
          if (v instanceof Data_Either.Right) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0);
          };
          throw new Error("Failed pattern match at IdePurescript.PscIde line 25, column 3 - line 27, column 26: " + [ v.constructor.name ]);
      });
  };
  var getCompletion$prime = function (matcher) {
      return function (mainFilter) {
          return function (port) {
              return function (currentModule) {
                  return function (modulePrefix) {
                      return function (unqualModules) {
                          return function (getQualifiedModule) {
                              return function (opts) {
                                  var modules = Data_Maybe.maybe(unqualModules)(getQualifiedModule)(modulePrefix);
                                  var moduleFilters = [ PscIde_Command.ModuleFilter.create((function () {
                                      var $18 = Data_Array["null"](modules);
                                      if ($18) {
                                          return unqualModules;
                                      };
                                      return modules;
                                  })()) ];
                                  return eitherToErr(PscIde.complete(port)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(mainFilter)(moduleFilters))(matcher)(currentModule)(opts));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var getCompletion = function (port) {
      return function (prefix) {
          return getCompletion$prime(Data_Maybe.Nothing.value)([ new PscIde_Command.PrefixFilter(prefix) ])(port);
      };
  };
  var result = function (f) {
      return function (a) {
          return eitherToErr(Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
              return Data_Functor.map(Data_Either.functorEither)(f)(v);
          })(a));
      };
  };
  var getAvailableModules = (function () {
      var conv = function (v) {
          return v;
      };
      return function ($42) {
          return result(conv)(PscIde.listAvailableModules($42));
      };
  })();
  var getLoadedModules = (function () {
      var conv = function (v) {
          return v;
      };
      return function ($43) {
          return result(conv)(PscIde.listLoadedModules($43));
      };
  })();
  var getTypeInfo = function (port) {
      return function (text) {
          return function (currentModule) {
              return function (modulePrefix) {
                  return function (unqualModules) {
                      return function (getQualifiedModule) {
                          var moduleFilters = [ PscIde_Command.ModuleFilter.create(Data_Maybe.maybe(unqualModules)(getQualifiedModule)(modulePrefix)) ];
                          return result(Data_Array.head)(PscIde["type'"](port)(text)(moduleFilters)(currentModule));
                      };
                  };
              };
          };
      };
  };
  var cwd = function ($44) {
      return result(runMsg)(PscIde.cwd($44));
  };
  exports["cwd"] = cwd;
  exports["eitherToErr"] = eitherToErr;
  exports["getAvailableModules"] = getAvailableModules;
  exports["getCompletion"] = getCompletion;
  exports["getCompletion'"] = getCompletion$prime;
  exports["getLoadedModules"] = getLoadedModules;
  exports["getTypeInfo"] = getTypeInfo;
})(PS["IdePurescript.PscIde"] = PS["IdePurescript.PscIde"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Global = PS["Global"];
  var IdePurescript_Exec = PS["IdePurescript.Exec"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_Path = PS["Node.Path"];
  var Node_Platform = PS["Node.Platform"];
  var Node_Process = PS["Node.Process"];
  var Node_Stream = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Server = PS["PscIde.Server"];
  var CorrectPath = (function () {
      function CorrectPath(value0) {
          this.value0 = value0;
      };
      CorrectPath.create = function (value0) {
          return new CorrectPath(value0);
      };
      return CorrectPath;
  })();
  var WrongPath = (function () {
      function WrongPath(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      WrongPath.create = function (value0) {
          return function (value1) {
              return new WrongPath(value0, value1);
          };
      };
      return WrongPath;
  })();
  var Started = (function () {
      function Started(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Started.create = function (value0) {
          return function (value1) {
              return new Started(value0, value1);
          };
      };
      return Started;
  })();
  var Closed = (function () {
      function Closed() {

      };
      Closed.value = new Closed();
      return Closed;
  })();
  var StartError = (function () {
      function StartError(value0) {
          this.value0 = value0;
      };
      StartError.create = function (value0) {
          return new StartError(value0);
      };
      return StartError;
  })();
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var Info = (function () {
      function Info() {

      };
      Info.value = new Info();
      return Info;
  })();
  var Warning = (function () {
      function Warning() {

      };
      Warning.value = new Warning();
      return Warning;
  })();
  var $$Error = (function () {
      function $$Error() {

      };
      $$Error.value = new $$Error();
      return $$Error;
  })();
  var stopServer = function (port) {
      return function (rootPath) {
          return function (cp) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(PscIde_Server.getSavedPort(rootPath)))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff["liftEff'"](Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(v)(new Data_Maybe.Just(port)))(PscIde_Server.deleteSavedPort(rootPath))))(function (v1) {
                      return PscIde_Server.stopServer(port);
                  });
              });
          };
      };
  };
  var startServer = function (logCb) {
      return function (v) {
          return function (rootPath) {
              var normalizePath = function ($100) {
                  return (function () {
                      var $27 = Data_Eq.eq(Data_Maybe.eqMaybe(Node_Platform.eqPlatform))(Node_Process.platform)(new Data_Maybe.Just(Node_Platform.Win32.value));
                      if ($27) {
                          return Data_String.toLower;
                      };
                      return Control_Category.id(Control_Category.categoryFn);
                  })()(Node_Path.normalize($100));
              };
              var launchServer = (function () {
                  var r = function (v1) {
                      return function (v2) {
                          if (v2 instanceof PscIde_Server.Started) {
                              return new Started(v1, v2.value0);
                          };
                          if (v2 instanceof PscIde_Server.Closed) {
                              return Closed.value;
                          };
                          if (v2 instanceof PscIde_Server.StartError) {
                              return new StartError(v2.value0);
                          };
                          throw new Error("Failed pattern match at IdePurescript.PscIdeServer line 159, column 7 - line 159, column 52: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                  };
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(PscIde_Server.pickFreshPort))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                          logCb(Info.value)("Starting IDE server on port " + (Data_Show.show(Data_Show.showInt)(v1) + (" with cwd " + rootPath)))();
                          return PscIde_Server.savePort(v1)(rootPath)();
                      }))(function () {
                          return Data_Functor.map(Control_Monad_Aff.functorAff)(r(v1))(PscIde_Server.startServer((function () {
                              var $33 = {};
                              for (var $34 in PscIde_Server.defaultServerArgs) {
                                  if ({}.hasOwnProperty.call(PscIde_Server.defaultServerArgs, $34)) {
                                      $33[$34] = PscIde_Server["defaultServerArgs"][$34];
                                  };
                              };
                              $33.exe = v.exe;
                              $33.combinedExe = v.combinedExe;
                              $33.cwd = new Data_Maybe.Just(rootPath);
                              $33.port = new Data_Maybe.Just(v1);
                              $33.source = v.glob;
                              $33.logLevel = v.logLevel;
                              $33.editorMode = v.editorMode;
                              $33.polling = v.polling;
                              $33.outputDirectory = v.outputDirectory;
                              return $33;
                          })()));
                      });
                  });
              })();
              var gotPath = function (port) {
                  return function (workingDir) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                          var $36 = normalizePath(workingDir) === normalizePath(rootPath);
                          if ($36) {
                              return function __do() {
                                  logCb(Info.value)("Found IDE server on port " + (Data_Show.show(Data_Show.showInt)(port) + (" with correct path: " + workingDir)))();
                                  return new CorrectPath(port);
                              };
                          };
                          return function __do() {
                              logCb(Info.value)("Found IDE server on port " + (Data_Show.show(Data_Show.showInt)(port) + (" with wrong path: " + (normalizePath(workingDir) + (" instead of " + normalizePath(rootPath))))))();
                              return new WrongPath(port, workingDir);
                          };
                      })());
                  };
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(PscIde_Server.getSavedPort(rootPath)))(function (v1) {
                  if (v1 instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(IdePurescript_PscIde.cwd(v1.value0)))(function (v2) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logCb(Info.value)("Found existing port from file: " + (Data_Show.show(Data_Show.showInt)(v1.value0) + Data_Either.either(Data_Function["const"](""))(function (v3) {
                              return ", cwd: " + v3;
                          })(v2)))))(function () {
                              return Data_Either.either(Data_Function["const"](launchServer))(gotPath(v1.value0))(v2);
                          });
                      });
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return launchServer;
                  };
                  throw new Error("Failed pattern match at IdePurescript.PscIdeServer line 134, column 3 - line 139, column 28: " + [ v1.constructor.name ]);
              });
          };
      };
  };
  var startServer$prime = function (v) {
      return function (path) {
          return function (addNpmBin) {
              return function (cb) {
                  return function (logCb) {
                      var wireOutput = function (cp) {
                          return function (log) {
                              return function __do() {
                                  Node_Stream.onDataString(Node_ChildProcess.stderr(cp))(Node_Encoding.UTF8.value)(log(Warning.value))();
                                  return Node_Stream.onDataString(Node_ChildProcess.stdout(cp))(Node_Encoding.UTF8.value)(log(Info.value))();
                              };
                          };
                      };
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(IdePurescript_Exec.getPathVar(addNpmBin)(path)))(function (v1) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Exec.findBins(v1)(v.exe))(function (v2) {
                              var v3 = Data_Array.head(v2);
                              if (v3 instanceof Data_Maybe.Nothing) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(cb(Info.value)("Couldn't find IDE server, check PATH. Looked for: " + (v.exe + (" in PATH: " + Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(v1))))))(function () {
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                                          quit: Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit), 
                                          port: Data_Maybe.Nothing.value
                                      });
                                  });
                              };
                              if (v3 instanceof Data_Maybe.Just) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logCb(Info.value)("Resolved IDE server paths (npm-bin: " + (Data_Show.show(Data_Show.showBoolean)(addNpmBin) + (") from PATH of " + (Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(v1) + " (1st is used):"))))))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Foldable.traverse_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableArray)(function (v4) {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logCb(Info.value)(v4.value0 + (": " + Data_Maybe.fromMaybe("ERROR")(v4.value1))));
                                      })(v2))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_Array.length(v2) > 1)(cb(Warning.value)("Found multiple IDE server executables; using " + v3.value0.value0))))(function () {
                                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(startServer(logCb)((function () {
                                                  var $59 = {};
                                                  for (var $60 in v) {
                                                      if ({}.hasOwnProperty.call(v, $60)) {
                                                          $59[$60] = v[$60];
                                                      };
                                                  };
                                                  $59.exe = v3.value0.value0;
                                                  return $59;
                                              })())(path))(function (v4) {
                                                  var noRes = {
                                                      quit: Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit), 
                                                      port: Data_Maybe.Nothing.value
                                                  };
                                                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                                                      if (v4 instanceof CorrectPath) {
                                                          return Data_Functor.voidRight(Control_Monad_Eff.functorEff)({
                                                              quit: Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit), 
                                                              port: new Data_Maybe.Just(v4.value0)
                                                          })(cb(Info.value)("Found existing IDE server with correct path on port " + Data_Show.show(Data_Show.showInt)(v4.value0)));
                                                      };
                                                      if (v4 instanceof WrongPath) {
                                                          return function __do() {
                                                              cb($$Error.value)("Found existing IDE server on port '" + (Data_Show.show(Data_Show.showInt)(v4.value0) + ("' with wrong path: '" + (v4.value1 + "'. Correct, kill or configure a different port, and restart."))))();
                                                              return noRes;
                                                          };
                                                      };
                                                      if (v4 instanceof Started) {
                                                          return function __do() {
                                                              cb(Success.value)("Started IDE server (port " + (Data_Show.show(Data_Show.showInt)(v4.value0) + ")"))();
                                                              wireOutput(v4.value1)(logCb)();
                                                              return {
                                                                  quit: stopServer(v4.value0)(path)(v4.value1), 
                                                                  port: new Data_Maybe.Just(v4.value0)
                                                              };
                                                          };
                                                      };
                                                      if (v4 instanceof Closed) {
                                                          return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(noRes)(cb(Info.value)("IDE server exited with success code"));
                                                      };
                                                      if (v4 instanceof StartError) {
                                                          return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(noRes)(cb($$Error.value)("Could not start IDE server process. Check the configured port number is valid.\x0a" + v4.value0));
                                                      };
                                                      throw new Error("Failed pattern match at IdePurescript.PscIdeServer line 109, column 17 - line 123, column 138: " + [ v4.constructor.name ]);
                                                  })());
                                              });
                                          });
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at IdePurescript.PscIdeServer line 97, column 3 - line 123, column 138: " + [ v3.constructor.name ]);
                          });
                      });
                  };
              };
          };
      };
  };
  exports["Success"] = Success;
  exports["Info"] = Info;
  exports["Warning"] = Warning;
  exports["Error"] = $$Error;
  exports["CorrectPath"] = CorrectPath;
  exports["WrongPath"] = WrongPath;
  exports["Started"] = Started;
  exports["Closed"] = Closed;
  exports["StartError"] = StartError;
  exports["startServer"] = startServer;
  exports["startServer'"] = startServer$prime;
  exports["stopServer"] = stopServer;
})(PS["IdePurescript.PscIdeServer"] = PS["IdePurescript.PscIdeServer"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var IdePurescript_Exec = PS["IdePurescript.Exec"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_Process = PS["Node.Process"];
  var Node_Stream = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var PscIde_Server = PS["PscIde.Server"];        
  var Command = (function () {
      function Command(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Command.create = function (value0) {
          return function (value1) {
              return new Command(value0, value1);
          };
      };
      return Command;
  })();
  var spawn = function (v) {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(IdePurescript_Exec.getPathVar(v.useNpmDir)(v.directory)))(function (v1) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Exec.findBins(v1)(v.command.value0))(function (v2) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                  var v3 = Data_Array.uncons(v2);
                  if (v3 instanceof Data_Maybe.Just) {
                      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(Node_ChildProcess.spawn(v3.value0.head.value0)(v.command.value1)((function () {
                          var $19 = {};
                          for (var $20 in Node_ChildProcess.defaultSpawnOptions) {
                              if ({}.hasOwnProperty.call(Node_ChildProcess.defaultSpawnOptions, $20)) {
                                  $19[$20] = Node_ChildProcess["defaultSpawnOptions"][$20];
                              };
                          };
                          $19.cwd = new Data_Maybe.Just(v.directory);
                          $19.env = new Data_Maybe.Just(Data_StrMap.fromFoldable(Data_List_Types.foldableList)(Data_List.singleton(Data_Tuple.Tuple.create("PATH")(Data_Either.either(Control_Category.id(Control_Category.categoryFn))(Control_Category.id(Control_Category.categoryFn))(v1)))));
                          return $19;
                      })()));
                  };
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
              })()))(function (v3) {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                      cmdBins: v2, 
                      cp: v3
                  });
              });
          });
      });
  };
  var rebuild = function (port) {
      return function (file) {
          var wrapError = function (v) {
              if (v instanceof IdePurescript_PscErrors.RebuildError) {
                  return Data_Array.singleton({
                      moduleName: Data_Maybe.Nothing.value, 
                      errorCode: "RebuildStringError", 
                      message: v.value0, 
                      filename: new Data_Maybe.Just(file), 
                      position: Data_Maybe.Nothing.value, 
                      errorLink: "", 
                      suggestion: Data_Maybe.Nothing.value
                  });
              };
              if (v instanceof IdePurescript_PscErrors.RebuildResult) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at IdePurescript.Build line 104, column 3 - line 104, column 47: " + [ v.constructor.name ]);
          };
          var rebuild$prime = PscIde.sendCommandR(PscIde_Command.encodeCommand)(IdePurescript_PscErrors.decodeRebuildResult)(IdePurescript_PscErrors.decodeRebuildResult)(port)(new PscIde_Command.RebuildCmd(file, new Data_Maybe.Just(file)));
          var onResult = function ($60) {
              return Data_Either.either(function (errors) {
                  return {
                      errors: {
                          errors: errors, 
                          warnings: [  ]
                      }, 
                      success: true
                  };
              })(function (warnings) {
                  return {
                      errors: {
                          errors: [  ], 
                          warnings: warnings
                      }, 
                      success: true
                  };
              })(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(wrapError)(wrapError)($60));
          };
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(rebuild$prime)(function (v) {
              return Data_Either.either(function ($61) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error($61));
              })(function ($62) {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(onResult($62));
              })(v);
          });
      };
  };
  var build = function (logCb) {
      return function (v) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(spawn(v))(function (v1) {
              return Control_Monad_Aff.makeAff(function (err) {
                  return function (succ) {
                      return function __do() {
                          logCb(IdePurescript_PscIdeServer.Info.value)("Resolved build command (1st is used): ")();
                          Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(function (v2) {
                              return logCb(IdePurescript_PscIdeServer.Info.value)(v2.value0 + Data_Maybe.maybe("")(function (v3) {
                                  return ": " + v3;
                              })(v2.value1));
                          })(v1.cmdBins)();
                          if (v1.cp instanceof Data_Maybe.Nothing) {
                              return err(Control_Monad_Eff_Exception.error("Didn't find command in PATH: " + v.command.value0))();
                          };
                          if (v1.cp instanceof Data_Maybe.Just) {
                              Node_ChildProcess.onError(v1.cp.value0)(function ($63) {
                                  return err(Node_ChildProcess.toStandardError($63));
                              })();
                              var stderr = Node_ChildProcess.stderr(v1.cp.value0);
                              var v2 = Control_Monad_Eff_Ref.newRef("")();
                              var res = function (s) {
                                  return Control_Monad_Eff_Ref.modifyRef(v2)(function (acc) {
                                      return acc + s;
                                  });
                              };
                              Control_Monad_Eff_Exception.catchException(err)(Node_Stream.onDataString(stderr)(Node_Encoding.UTF8.value)(res))();
                              return Node_ChildProcess.onClose(v1.cp.value0)(function (exit) {
                                  if (exit instanceof Node_ChildProcess.Normally && (exit.value0 === 0 || exit.value0 === 1)) {
                                      return function __do() {
                                          var v3 = Control_Monad_Eff_Ref.readRef(v2)();
                                          var lines = Data_String.split("\x0a")(v3);
                                          var json = Data_Foldable.find(Data_Foldable.foldableArray)(function (s) {
                                              return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String.indexOf("{\"")(s))(new Data_Maybe.Just(0));
                                          })(lines);
                                          var v4 = Data_Functor.map(Data_Maybe.functorMaybe)(IdePurescript_PscErrors.parsePscOutput)(json);
                                          if (v4 instanceof Data_Maybe.Just && v4.value0 instanceof Data_Either.Left) {
                                              return err(Control_Monad_Eff_Exception.error(v4.value0.value0))();
                                          };
                                          if (v4 instanceof Data_Maybe.Just && v4.value0 instanceof Data_Either.Right) {
                                              return succ({
                                                  errors: v4.value0.value0, 
                                                  success: exit.value0 === 0
                                              })();
                                          };
                                          if (v4 instanceof Data_Maybe.Nothing) {
                                              return err(Control_Monad_Eff_Exception.error("Didn't find JSON output"))();
                                          };
                                          throw new Error("Failed pattern match at IdePurescript.Build line 90, column 13 - line 94, column 11: " + [ v4.constructor.name ]);
                                      };
                                  };
                                  return err(Control_Monad_Eff_Exception.error("Process exited abnormally"));
                              })();
                          };
                          throw new Error("Failed pattern match at IdePurescript.Build line 74, column 5 - line 94, column 56: " + [ v1.cp.constructor.name ]);
                      };
                  };
              });
          });
      };
  };
  exports["Command"] = Command;
  exports["build"] = build;
  exports["rebuild"] = rebuild;
  exports["spawn"] = spawn;
})(PS["IdePurescript.Build"] = PS["IdePurescript.Build"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];        
  var modulePart = "((?:[A-Z][A-Za-z0-9]*\\.)*(?:[A-Z][A-Za-z0-9]*))";
  var modulePrefix = "(?:^|[^A-Za-z_.])(?:" + (modulePart + "\\.)");
  var identifierAtPoint = function (line) {
      return function (column) {
          var wordRange = function (left) {
              return function (right) {
                  return {
                      left: column - left | 0, 
                      right: column + right | 0
                  };
              };
          };
          var textBefore = Data_String.take(column)(line);
          var textAfter = Data_String.drop(column)(line);
          var moduleEndRegex = Data_String_Regex.regex(modulePrefix + "$")(Data_String_Regex_Flags.noFlags);
          var match$prime = function (r) {
              return function (t) {
                  return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function (r$prime) {
                      return Data_String_Regex.match(r$prime)(t);
                  })(r);
              };
          };
          var beforeRegex = Data_String_Regex.regex("[a-zA-Z_0-9':!#$%&*+/<=>?@^|~-]*$")(Data_String_Regex_Flags.noFlags);
          var afterRegex = Data_String_Regex.regex("^[a-zA-Z_0-9':!#$%&*+/<=>?@^|~-]*")(Data_String_Regex_Flags.noFlags);
          var v = match$prime(afterRegex)(textAfter);
          var v1 = match$prime(beforeRegex)(textBefore);
          if (v1 instanceof Data_Maybe.Just && (v1.value0.length === 1 && (v1["value0"][0] instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && (v.value0.length === 1 && v["value0"][0] instanceof Data_Maybe.Just))))) {
              var qualifier = (function () {
                  var v2 = match$prime(moduleEndRegex)(Data_String.take(Data_String.length(textBefore) - Data_String.length(v1["value0"][0].value0) | 0)(textBefore));
                  if (v2 instanceof Data_Maybe.Just && v2.value0.length === 2) {
                      return v2["value0"][1];
                  };
                  return Data_Maybe.Nothing.value;
              })();
              return new Data_Maybe.Just({
                  word: v1["value0"][0].value0 + v["value0"][0].value0, 
                  range: wordRange(Data_String.length(v1["value0"][0].value0))(Data_String.length(v["value0"][0].value0)), 
                  qualifier: qualifier
              });
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var identPart = "((?:[a-zA-Z_][a-zA-Z0-9_']*)|[:!#$%&*+\\./<=>?@\\^|~-]+)";
  var moduleRegex = Data_String_Regex.regex(modulePrefix + ("?" + (identPart + "?$")))(Data_String_Regex_Flags.noFlags);
  exports["identPart"] = identPart;
  exports["identifierAtPoint"] = identifierAtPoint;
  exports["modulePart"] = modulePart;
  exports["modulePrefix"] = modulePrefix;
  exports["moduleRegex"] = moduleRegex;
})(PS["IdePurescript.Tokens"] = PS["IdePurescript.Tokens"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_String_Utils = PS["Data.String.Utils"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var IdePurescript_Regex = PS["IdePurescript.Regex"];
  var IdePurescript_Tokens = PS["IdePurescript.Tokens"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];        
  var Module = (function () {
      function Module() {

      };
      Module.value = new Module();
      return Module;
  })();
  var Type = (function () {
      function Type() {

      };
      Type.value = new Type();
      return Type;
  })();
  var $$Function = (function () {
      function $$Function() {

      };
      $$Function.value = new $$Function();
      return $$Function;
  })();
  var Value = (function () {
      function Value() {

      };
      Value.value = new Value();
      return Value;
  })();
  var ModuleSuggestion = (function () {
      function ModuleSuggestion(value0) {
          this.value0 = value0;
      };
      ModuleSuggestion.create = function (value0) {
          return new ModuleSuggestion(value0);
      };
      return ModuleSuggestion;
  })();
  var IdentSuggestion = (function () {
      function IdentSuggestion(value0) {
          this.value0 = value0;
      };
      IdentSuggestion.create = function (value0) {
          return new IdentSuggestion(value0);
      };
      return IdentSuggestion;
  })();
  var getModuleSuggestions = function (port) {
      return function (prefix) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.eitherToErr(PscIde.listAvailableModules(port)))(function (v) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Array.filter(function (m) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String.indexOf(prefix)(m))(new Data_Maybe.Just(0));
              })(v));
          });
      };
  };
  var explicitImportRegex = Data_String_Regex.regex("^import\\s+" + (IdePurescript_Tokens.modulePart + ("\\s+\\([^)]*?" + (IdePurescript_Tokens.identPart + "$"))))(Data_String_Regex_Flags.noFlags);
  var getSuggestions = function (port) {
      return function (v) {
          var result = function (qualifier) {
              return function (prefix) {
                  return function (v1) {
                      var suggestType = (function () {
                          var $16 = Data_String.contains("->")(v1["type'"]);
                          if ($16) {
                              return $$Function.value;
                          };
                          var $17 = IdePurescript_Regex["test'"](Data_String_Regex.regex("^[A-Z]")(Data_String_Regex_Flags.noFlags))(v1.identifier);
                          if ($17) {
                              return Type.value;
                          };
                          return Value.value;
                      })();
                      var prefixModule = Data_Array.head(Data_Array.sortBy(function (a) {
                          return function (b) {
                              return Data_Ord.compare(Data_Ord.ordInt)(Data_String.length(a))(Data_String.length(b));
                          };
                      })(Data_Array.filter(function (m) {
                          return Data_String_Utils.startsWith(m + ".")(v1["module'"]);
                      })(v1.exportedFrom)));
                      var preferredModule = Data_Array.head(Data_Array.intersect(Data_Eq.eqString)(v.preferredModules)(v1.exportedFrom));
                      var existingModule = Data_Array.head(Data_Array.intersect(Data_Eq.eqString)(v.moduleInfo.importedModules)(v1.exportedFrom));
                      var exportMod = Data_Maybe.fromMaybe(v1["module'"])(Control_Alt.alt(Data_Maybe.altMaybe)(Control_Alt.alt(Data_Maybe.altMaybe)(existingModule)(preferredModule))(prefixModule));
                      return new IdentSuggestion({
                          origMod: v1["module'"], 
                          exportMod: exportMod, 
                          identifier: v1.identifier, 
                          qualifier: qualifier, 
                          suggestType: suggestType, 
                          prefix: prefix, 
                          valueType: v1["type'"], 
                          exportedFrom: v1.exportedFrom, 
                          documentation: v1.documentation
                      });
                  };
              };
          };
          var parsed = (function () {
              var v1 = IdePurescript_Regex["match'"](IdePurescript_Tokens.moduleRegex)(v.line);
              if (v1 instanceof Data_Maybe.Just && (v1.value0.length === 3 && (v1["value0"][0] instanceof Data_Maybe.Just && (Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v1["value0"][1])(Data_Maybe.Nothing.value) || Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v1["value0"][2])(Data_Maybe.Nothing.value))))) {
                  return new Data_Maybe.Just({
                      mod: v1["value0"][1], 
                      token: Data_Maybe.fromMaybe("")(v1["value0"][2])
                  });
              };
              return Data_Maybe.Nothing.value;
          })();
          var opts = {
              maxResults: v.maxResults, 
              groupReexports: v.groupCompletions
          };
          var modResult = function (prefix) {
              return function (moduleName) {
                  return new ModuleSuggestion({
                      text: moduleName, 
                      suggestType: Module.value, 
                      prefix: prefix
                  });
              };
          };
          var isImport = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String.indexOf("import")(v.line))(new Data_Maybe.Just(0));
          var hasBracket = Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(Data_String.indexOf("(")(v.line))(Data_Maybe.Nothing.value);
          var moduleCompletion = isImport && !hasBracket;
          var moduleExplicit = isImport && hasBracket;
          var getModuleName = function (v1) {
              return function (token) {
                  if (v1 === "") {
                      return token;
                  };
                  return v1 + ("." + token);
              };
          };
          if (moduleExplicit) {
              var v1 = IdePurescript_Regex["match'"](explicitImportRegex)(v.line);
              if (v1 instanceof Data_Maybe.Just && (v1.value0.length === 3 && (v1["value0"][0] instanceof Data_Maybe.Just && (v1["value0"][1] instanceof Data_Maybe.Just && v1["value0"][2] instanceof Data_Maybe.Just)))) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getCompletion(port)(v1["value0"][2].value0)(v.moduleInfo.mainModule)(Data_Maybe.Nothing.value)([ v1["value0"][1].value0 ])(v.moduleInfo.getQualifiedModule)(opts))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Functor.map(Data_Functor.functorArray)(result(new Data_Maybe.Just(v1["value0"][1].value0))(v1["value0"][2].value0))(v2));
                  });
              };
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
          };
          if (parsed instanceof Data_Maybe.Just) {
              if (moduleCompletion) {
                  var prefix = getModuleName(Data_Maybe.fromMaybe("")(parsed.value0.mod))(parsed.value0.token);
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(getModuleSuggestions(port)(prefix))(function (v1) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Functor.map(Data_Functor.functorArray)(modResult(prefix))(v1));
                  });
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getCompletion(port)(parsed.value0.token)(v.moduleInfo.mainModule)(parsed.value0.mod)(Data_Array.cons("Prim")(v.moduleInfo.modules))(v.moduleInfo.getQualifiedModule)(opts))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Functor.map(Data_Functor.functorArray)(result(parsed.value0.mod)(parsed.value0.token))(v1));
              });
          };
          if (parsed instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
          };
          throw new Error("Failed pattern match at IdePurescript.Completion line 63, column 5 - line 72, column 25: " + [ parsed.constructor.name ]);
      };
  };
  exports["ModuleSuggestion"] = ModuleSuggestion;
  exports["IdentSuggestion"] = IdentSuggestion;
  exports["Module"] = Module;
  exports["Type"] = Type;
  exports["Function"] = $$Function;
  exports["Value"] = Value;
  exports["explicitImportRegex"] = explicitImportRegex;
  exports["getModuleSuggestions"] = getModuleSuggestions;
  exports["getSuggestions"] = getSuggestions;
})(PS["IdePurescript.Completion"] = PS["IdePurescript.Completion"] || {});
(function(exports) {// module IdePurescript.Modules

  exports.tmpDir = function() {
    return require('os').tmpdir();
  };
})(PS["IdePurescript.Modules"] = PS["IdePurescript.Modules"] || {});
(function(exports) {
    "use strict";

  exports.handleCallbackImpl = function (left, right, f) {
    return function (err, value) {
      if (err) {
        f(left(err))();
      } else {
        f(right(value))();
      }
    };
  };
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Node.FS.Async"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_DateTime_Instant = PS["Data.DateTime.Instant"];
  var Data_Either = PS["Data.Either"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Internal = PS["Node.FS.Internal"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];        
  var handleCallback = function (cb) {
      return $foreign.handleCallbackImpl(Data_Either.Left.create, Data_Either.Right.create, cb);
  };
  var fs = Node_FS_Internal.unsafeRequireFS;                                                                                  
  var readFile = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEff(function (v) {
              return fs.readFile(file, {}, handleCallback(cb));
          });
      };
  };
  var readTextFile = function (encoding) {
      return function (file) {
          return function (cb) {
              return Node_FS_Internal.mkEff(function (v) {
                  return fs.readFile(file, {
                      encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
                  }, handleCallback(cb));
              });
          };
      };
  };
  var unlink = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEff(function (v) {
              return fs.unlink(file, handleCallback(cb));
          });
      };
  };
  var writeFile = function (file) {
      return function (buff) {
          return function (cb) {
              return Node_FS_Internal.mkEff(function (v) {
                  return fs.writeFile(file, buff, {}, handleCallback(cb));
              });
          };
      };
  };
  var writeTextFile = function (encoding) {
      return function (file) {
          return function (buff) {
              return function (cb) {
                  return Node_FS_Internal.mkEff(function (v) {
                      return fs.writeFile(file, buff, {
                          encoding: Data_Show.show(Node_Encoding.showEncoding)(encoding)
                      }, handleCallback(cb));
                  });
              };
          };
      };
  };
  exports["readFile"] = readFile;
  exports["readTextFile"] = readTextFile;
  exports["unlink"] = unlink;
  exports["writeFile"] = writeFile;
  exports["writeTextFile"] = writeTextFile;
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_DateTime = PS["Data.DateTime"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Async = PS["Node.FS.Async"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];        
  var toAff = function (p) {
      return Control_Monad_Aff.makeAff(function (e) {
          return function (a) {
              return p(Data_Either.either(e)(a));
          };
      });
  };
  var toAff1 = function (f) {
      return function (a) {
          return toAff(f(a));
      };
  };
  var unlink = toAff1(Node_FS_Async.unlink);
  var toAff2 = function (f) {
      return function (a) {
          return function (b) {
              return toAff(f(a)(b));
          };
      };
  };                                              
  var toAff3 = function (f) {
      return function (a) {
          return function (b) {
              return function (c) {
                  return toAff(f(a)(b)(c));
              };
          };
      };
  };                                        
  var writeTextFile = toAff3(Node_FS_Async.writeTextFile);
  var readTextFile = toAff2(Node_FS_Async.readTextFile);
  exports["readTextFile"] = readTextFile;
  exports["unlink"] = unlink;
  exports["writeTextFile"] = writeTextFile;
})(PS["Node.FS.Aff"] = PS["Node.FS.Aff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["IdePurescript.Modules"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var IdePurescript_Regex = PS["IdePurescript.Regex"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];        
  var Module = function (x) {
      return x;
  };
  var UpdatedImports = (function () {
      function UpdatedImports(value0) {
          this.value0 = value0;
      };
      UpdatedImports.create = function (value0) {
          return new UpdatedImports(value0);
      };
      return UpdatedImports;
  })();
  var AmbiguousImport = (function () {
      function AmbiguousImport(value0) {
          this.value0 = value0;
      };
      AmbiguousImport.create = function (value0) {
          return new AmbiguousImport(value0);
      };
      return AmbiguousImport;
  })();
  var FailedImport = (function () {
      function FailedImport() {

      };
      FailedImport.value = new FailedImport();
      return FailedImport;
  })();
  var moduleNewtype = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Module);
  var mkImplicit = function (m) {
      return {
          qualifier: Data_Maybe.Nothing.value, 
          importType: PscIde_Command.Implicit.value, 
          moduleName: m
      };
  };
  var makeTempFile = function (fileName) {
      return function (text) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)($foreign.tmpDir))(function (v) {
              var name = IdePurescript_Regex["replace'"](Data_String_Regex.regex("[\\/\\\\:]")(Data_String_Regex_Flags.global))("-")(fileName);
              var tmpFile = v + (Node_Path.sep + ("ide-purescript-" + name));
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(tmpFile)(text))(function () {
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(tmpFile);
              });
          });
      };
  };
  var withTempFile = function (fileName) {
      return function (text) {
          return function (action) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeTempFile(fileName)(text))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(action(v))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)((function () {
                          if (v1 instanceof Data_Either.Right && v1.value0 instanceof PscIde_Command.SuccessFile) {
                              return Data_Functor.map(Control_Monad_Aff.functorAff)(UpdatedImports.create)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(v));
                          };
                          if (v1 instanceof Data_Either.Right && v1.value0 instanceof PscIde_Command.MultipleResults) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(new AmbiguousImport(v1.value0.value0));
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(FailedImport.value);
                      })())(function (v2) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(Node_FS_Aff.unlink(v)))(function (v3) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2);
                          });
                      });
                  });
              });
          };
      };
  };
  var initialModulesState = {
      main: Data_Maybe.Nothing.value, 
      modules: [  ], 
      identifiers: [  ]
  };
  var getModuleName = function (v) {
      return v.moduleName;
  };
  var getModules = function (include) {
      return function (v) {
          return (function (v1) {
              return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ "Prim" ])(v1);
          })(Data_Functor.map(Data_Functor.functorArray)(getModuleName)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Maybe.maybe([  ])(function ($115) {
              return Data_Array.singleton(mkImplicit($115));
          })(v.main))(Data_Array.filter(include)(v.modules))));
      };
  };
  var getUnqualActiveModules = function (v) {
      return function (ident) {
          var include = function (v1) {
              if (v1.qualifier instanceof Data_Maybe.Just) {
                  return false;
              };
              if (v1.importType instanceof PscIde_Command.Explicit) {
                  return Data_Maybe.maybe(false)(function (x) {
                      return Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(x)(v1.importType.value0) || Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)("(" + (x + ")"))(v1.importType.value0);
                  })(ident);
              };
              if (v1.importType instanceof PscIde_Command.Implicit) {
                  return true;
              };
              if (v1.importType instanceof PscIde_Command.Hiding) {
                  return Data_Maybe.maybe(true)(function (v2) {
                      return Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqString)(v2)(v1.importType.value0);
                  })(ident);
              };
              throw new Error("Failed pattern match at IdePurescript.Modules line 104, column 3 - line 104, column 49: " + [ v1.constructor.name ]);
          };
          return getModules(include)(v);
      };
  };
  var getQualModule = function (qualifier) {
      return function (v) {
          var qual = function (v1) {
              return function (v2) {
                  if (v2.qualifier instanceof Data_Maybe.Just) {
                      return v1 === v2.qualifier.value0;
                  };
                  return false;
              };
          };
          return Data_Functor.map(Data_Functor.functorArray)(getModuleName)(Data_Array.filter(qual(qualifier))(v.modules));
      };
  };
  var getMainModule = function (text) {
      var regex = Data_String_Regex.regex("module\\s+([\\w.]+)")(Data_String_Regex_Flags.multiline);
      var v = IdePurescript_Regex["match'"](regex)(text);
      if (v instanceof Data_Maybe.Just && (v.value0.length === 2 && v["value0"][1] instanceof Data_Maybe.Just)) {
          return new Data_Maybe.Just(v["value0"][1].value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var getModulesForFile = function (port) {
      return function (file) {
          return function (fullText) {
              var mod = function (v) {
                  return v;
              };
              var idents = function (v) {
                  if (v.importType instanceof PscIde_Command.Explicit) {
                      return v.importType.value0;
                  };
                  return [  ];
              };
              var $$default = {
                  moduleName: Data_Maybe.Nothing.value, 
                  imports: [  ]
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.either(Data_Function["const"]($$default))(Control_Category.id(Control_Category.categoryFn)))(PscIde.listImports(port)(file)))(function (v) {
                  var modules = Data_Functor.map(Data_Functor.functorArray)(mod)(v.imports);
                  var main = Data_Maybe.maybe(getMainModule(fullText))(Data_Maybe.Just.create)(v.moduleName);
                  var identifiers = Data_Array.concatMap(idents)(modules);
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                      main: main, 
                      modules: modules, 
                      identifiers: identifiers
                  });
              });
          };
      };
  };
  var getModulesForFileTemp = function (port) {
      return function (file) {
          return function (fullText) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(makeTempFile(file)(fullText))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(getModulesForFile(port)(v)(fullText))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(Node_FS_Aff.unlink(v)))(function (v2) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1);
                      });
                  });
              });
          };
      };
  };
  var getAllActiveModules = getModules(Data_Function["const"](true));
  var eqImportType = function (v) {
      return function (v1) {
          if (v instanceof PscIde_Command.Implicit && v1 instanceof PscIde_Command.Implicit) {
              return true;
          };
          if (v instanceof PscIde_Command.Explicit && v1 instanceof PscIde_Command.Explicit) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(v.value0)(v1.value0);
          };
          if (v instanceof PscIde_Command.Hiding && v1 instanceof PscIde_Command.Hiding) {
              return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(v.value0)(v1.value0);
          };
          return false;
      };
  };
  var moduleEq = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.moduleName === v1.moduleName && (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.qualifier)(v1.qualifier) && eqImportType(v.importType)(v1.importType));
      };
  });
  var addQualifiedImport = function (state) {
      return function (port) {
          return function (fileName) {
              return function (text) {
                  return function (moduleName) {
                      return function (qualifier) {
                          var isThisModule = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(new Data_Maybe.Just(moduleName))(state.main);
                          var addImport = function (tmpFile) {
                              return PscIde.qualifiedImport(port)(tmpFile)(new Data_Maybe.Just(tmpFile))(moduleName)(qualifier);
                          };
                          var $90 = !isThisModule;
                          if ($90) {
                              return Data_Functor.map(Control_Monad_Aff.functorAff)(function (v) {
                                  return {
                                      state: state, 
                                      result: v
                                  };
                              })(withTempFile(fileName)(text)(addImport));
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                              state: state, 
                              result: FailedImport.value
                          });
                      };
                  };
              };
          };
      };
  };
  var addModuleImport = function (state) {
      return function (port) {
          return function (fileName) {
              return function (text) {
                  return function (moduleName) {
                      var shouldAdd = Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(state.main)(new Data_Maybe.Just(moduleName)) && Data_Foldable.notElem(Data_Foldable.foldableArray)(moduleEq)(mkImplicit(moduleName))(state.modules);
                      var addImport = function (tmpFile) {
                          return PscIde.implicitImport(port)(tmpFile)(new Data_Maybe.Just(tmpFile))([  ])(moduleName);
                      };
                      if (!shouldAdd) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                      };
                      if (shouldAdd) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(withTempFile(fileName)(text)(addImport))(function (v) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
                                  if (v instanceof UpdatedImports) {
                                      return new Data_Maybe.Just({
                                          state: state, 
                                          result: v.value0
                                      });
                                  };
                                  return Data_Maybe.Nothing.value;
                              })());
                          });
                      };
                      throw new Error("Failed pattern match at IdePurescript.Modules line 160, column 3 - line 166, column 21: " + [ shouldAdd.constructor.name ]);
                  };
              };
          };
      };
  };
  var addExplicitImport = function (state) {
      return function (port) {
          return function (fileName) {
              return function (text) {
                  return function (moduleName) {
                      return function (qualifier) {
                          return function (identifier) {
                              var shouldAddMatch = function (v) {
                                  return function (v1) {
                                      if (v1.qualifier instanceof Data_Maybe.Nothing && (v1.importType instanceof PscIde_Command.Implicit && v1.moduleName === v)) {
                                          return false;
                                      };
                                      if (v1.qualifier instanceof Data_Maybe.Nothing && (v1.importType instanceof PscIde_Command.Hiding && v1.moduleName === v)) {
                                          return Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(identifier)(v1.importType.value0);
                                      };
                                      return true;
                                  };
                              };
                              var isThisModule = (function () {
                                  if (moduleName instanceof Data_Maybe.Just) {
                                      return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(moduleName)(state.main);
                                  };
                                  return false;
                              })();
                              var shouldAdd = !isThisModule && (!Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(identifier)(state.identifiers) && Data_Maybe.maybe(true)(function (mn) {
                                  return Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(shouldAddMatch(mn))(state.modules);
                              })(moduleName));
                              var filters = (function () {
                                  if (moduleName instanceof Data_Maybe.Nothing) {
                                      return [  ];
                                  };
                                  if (moduleName instanceof Data_Maybe.Just) {
                                      return [ new PscIde_Command.ModuleFilter([ moduleName.value0 ]) ];
                                  };
                                  throw new Error("Failed pattern match at IdePurescript.Modules line 185, column 15 - line 187, column 49: " + [ moduleName.constructor.name ]);
                              })();
                              var addImport = function (tmpFile) {
                                  return PscIde.explicitImport(port)(tmpFile)(new Data_Maybe.Just(tmpFile))(filters)(identifier)(qualifier);
                              };
                              if (!shouldAdd) {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                                      state: state, 
                                      result: FailedImport.value
                                  });
                              };
                              if (shouldAdd) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(withTempFile(fileName)(text)(addImport))(function (v) {
                                      var state$prime = (function () {
                                          if (v instanceof UpdatedImports) {
                                              var $111 = {};
                                              for (var $112 in state) {
                                                  if ({}.hasOwnProperty.call(state, $112)) {
                                                      $111[$112] = state[$112];
                                                  };
                                              };
                                              $111.identifiers = Data_Array.cons(identifier)(state.identifiers);
                                              return $111;
                                          };
                                          return state;
                                      })();
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)({
                                          result: v, 
                                          state: state$prime
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at IdePurescript.Modules line 175, column 3 - line 182, column 37: " + [ shouldAdd.constructor.name ]);
                          };
                      };
                  };
              };
          };
      };
  };
  exports["UpdatedImports"] = UpdatedImports;
  exports["AmbiguousImport"] = AmbiguousImport;
  exports["FailedImport"] = FailedImport;
  exports["addExplicitImport"] = addExplicitImport;
  exports["addModuleImport"] = addModuleImport;
  exports["addQualifiedImport"] = addQualifiedImport;
  exports["getAllActiveModules"] = getAllActiveModules;
  exports["getMainModule"] = getMainModule;
  exports["getModulesForFile"] = getModulesForFile;
  exports["getModulesForFileTemp"] = getModulesForFileTemp;
  exports["getQualModule"] = getQualModule;
  exports["getUnqualActiveModules"] = getUnqualActiveModules;
  exports["initialModulesState"] = initialModulesState;
  exports["moduleNewtype"] = moduleNewtype;
  exports["moduleEq"] = moduleEq;
})(PS["IdePurescript.Modules"] = PS["IdePurescript.Modules"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var IdePurescript_Regex = PS["IdePurescript.Regex"];
  var Prelude = PS["Prelude"];        
  var isUnknownToken = function (code) {
      if (code === "UnknownValue") {
          return true;
      };
      if (code === "UnknownType") {
          return true;
      };
      if (code === "UnknownDataConstructor") {
          return true;
      };
      if (code === "UnknownTypeConstructor") {
          return true;
      };
      if (code === "UnknownName") {
          return true;
      };
      return false;
  };
  var getTitle = function (code) {
      if (code === "UnusedImport") {
          return "Remove import";
      };
      if (code === "RedundantEmptyHidingImport") {
          return "Remove import";
      };
      if (code === "DuplicateImport") {
          return "Remove import";
      };
      if (code === "RedundantUnqualifiedImport") {
          return "Remove import";
      };
      if (code === "DeprecatedQualifiedSyntax") {
          return "Remove qualified keyword";
      };
      if (code === "ImplicitImport") {
          return "Make import explicit";
      };
      if (code === "UnusedExplicitImport") {
          return "Remove unused references";
      };
      return "Apply Suggestion";
  };
  var getReplacement = function (replacement) {
      return function (extraText) {
          var trailingNewline = IdePurescript_Regex["test'"](Data_String_Regex.regex("\x0a\\s+$")(Data_String_Regex_Flags.noFlags))(replacement);
          var addNewline = trailingNewline && !Data_String["null"](extraText);
          return IdePurescript_Regex["replace'"](Data_String_Regex.regex("\\s+\x0a")(Data_String_Regex_Flags.global))("\x0a")(replacement);
      };
  };
  exports["getReplacement"] = getReplacement;
  exports["getTitle"] = getTitle;
  exports["isUnknownToken"] = isUnknownToken;
})(PS["IdePurescript.QuickFix"] = PS["IdePurescript.QuickFix"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.log = function (conn) { return function (s) { return function () { return conn.console.log(s); }; }; };
  exports.info = function (conn) { return function (s) { return function () { return conn.console.info(s); }; }; };
  exports.warn = function (conn) { return function (s) { return function () { return conn.console.warn(s); }; }; };
  exports.error = function (conn) { return function (s) { return function () { return conn.console.error(s); }; }; };
})(PS["LanguageServer.Console"] = PS["LanguageServer.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var FileSymbolKind = (function () {
      function FileSymbolKind() {

      };
      FileSymbolKind.value = new FileSymbolKind();
      return FileSymbolKind;
  })();
  var ModuleSymbolKind = (function () {
      function ModuleSymbolKind() {

      };
      ModuleSymbolKind.value = new ModuleSymbolKind();
      return ModuleSymbolKind;
  })();
  var NamespaceSymbolKind = (function () {
      function NamespaceSymbolKind() {

      };
      NamespaceSymbolKind.value = new NamespaceSymbolKind();
      return NamespaceSymbolKind;
  })();
  var PackageSymbolKind = (function () {
      function PackageSymbolKind() {

      };
      PackageSymbolKind.value = new PackageSymbolKind();
      return PackageSymbolKind;
  })();
  var ClassSymbolKind = (function () {
      function ClassSymbolKind() {

      };
      ClassSymbolKind.value = new ClassSymbolKind();
      return ClassSymbolKind;
  })();
  var MethodSymbolKind = (function () {
      function MethodSymbolKind() {

      };
      MethodSymbolKind.value = new MethodSymbolKind();
      return MethodSymbolKind;
  })();
  var PropertySymbolKind = (function () {
      function PropertySymbolKind() {

      };
      PropertySymbolKind.value = new PropertySymbolKind();
      return PropertySymbolKind;
  })();
  var FieldSymbolKind = (function () {
      function FieldSymbolKind() {

      };
      FieldSymbolKind.value = new FieldSymbolKind();
      return FieldSymbolKind;
  })();
  var ConstructorSymbolKind = (function () {
      function ConstructorSymbolKind() {

      };
      ConstructorSymbolKind.value = new ConstructorSymbolKind();
      return ConstructorSymbolKind;
  })();
  var EnumSymbolKind = (function () {
      function EnumSymbolKind() {

      };
      EnumSymbolKind.value = new EnumSymbolKind();
      return EnumSymbolKind;
  })();
  var InterfaceSymbolKind = (function () {
      function InterfaceSymbolKind() {

      };
      InterfaceSymbolKind.value = new InterfaceSymbolKind();
      return InterfaceSymbolKind;
  })();
  var FunctionSymbolKind = (function () {
      function FunctionSymbolKind() {

      };
      FunctionSymbolKind.value = new FunctionSymbolKind();
      return FunctionSymbolKind;
  })();
  var VariableSymbolKind = (function () {
      function VariableSymbolKind() {

      };
      VariableSymbolKind.value = new VariableSymbolKind();
      return VariableSymbolKind;
  })();
  var ConstantSymbolKind = (function () {
      function ConstantSymbolKind() {

      };
      ConstantSymbolKind.value = new ConstantSymbolKind();
      return ConstantSymbolKind;
  })();
  var StringSymbolKind = (function () {
      function StringSymbolKind() {

      };
      StringSymbolKind.value = new StringSymbolKind();
      return StringSymbolKind;
  })();
  var NumberSymbolKind = (function () {
      function NumberSymbolKind() {

      };
      NumberSymbolKind.value = new NumberSymbolKind();
      return NumberSymbolKind;
  })();
  var BooleanSymbolKind = (function () {
      function BooleanSymbolKind() {

      };
      BooleanSymbolKind.value = new BooleanSymbolKind();
      return BooleanSymbolKind;
  })();
  var ArraySymbolKind = (function () {
      function ArraySymbolKind() {

      };
      ArraySymbolKind.value = new ArraySymbolKind();
      return ArraySymbolKind;
  })();
  var Position = function (x) {
      return x;
  };
  var CreatedChangeType = (function () {
      function CreatedChangeType() {

      };
      CreatedChangeType.value = new CreatedChangeType();
      return CreatedChangeType;
  })();
  var ChangedChangeType = (function () {
      function ChangedChangeType() {

      };
      ChangedChangeType.value = new ChangedChangeType();
      return ChangedChangeType;
  })();
  var DeletedChangeType = (function () {
      function DeletedChangeType() {

      };
      DeletedChangeType.value = new DeletedChangeType();
      return DeletedChangeType;
  })();
  var DocumentUri = function (x) {
      return x;
  };
  var TextDocumentIdentifier = function (x) {
      return x;
  };
  var Text = (function () {
      function Text() {

      };
      Text.value = new Text();
      return Text;
  })();
  var Method = (function () {
      function Method() {

      };
      Method.value = new Method();
      return Method;
  })();
  var $$Function = (function () {
      function $$Function() {

      };
      $$Function.value = new $$Function();
      return $$Function;
  })();
  var Constructor = (function () {
      function Constructor() {

      };
      Constructor.value = new Constructor();
      return Constructor;
  })();
  var Field = (function () {
      function Field() {

      };
      Field.value = new Field();
      return Field;
  })();
  var Variable = (function () {
      function Variable() {

      };
      Variable.value = new Variable();
      return Variable;
  })();
  var Class = (function () {
      function Class() {

      };
      Class.value = new Class();
      return Class;
  })();
  var Interface = (function () {
      function Interface() {

      };
      Interface.value = new Interface();
      return Interface;
  })();
  var Module = (function () {
      function Module() {

      };
      Module.value = new Module();
      return Module;
  })();
  var Property = (function () {
      function Property() {

      };
      Property.value = new Property();
      return Property;
  })();
  var Unit = (function () {
      function Unit() {

      };
      Unit.value = new Unit();
      return Unit;
  })();
  var Value = (function () {
      function Value() {

      };
      Value.value = new Value();
      return Value;
  })();
  var Enum = (function () {
      function Enum() {

      };
      Enum.value = new Enum();
      return Enum;
  })();
  var Keyword = (function () {
      function Keyword() {

      };
      Keyword.value = new Keyword();
      return Keyword;
  })();
  var Snippet = (function () {
      function Snippet() {

      };
      Snippet.value = new Snippet();
      return Snippet;
  })();
  var Color = (function () {
      function Color() {

      };
      Color.value = new Color();
      return Color;
  })();
  var File = (function () {
      function File() {

      };
      File.value = new File();
      return File;
  })();
  var Reference = (function () {
      function Reference() {

      };
      Reference.value = new Reference();
      return Reference;
  })();
  var CompletionItem = function (x) {
      return x;
  };
  var workspaceEdit = function (edits) {
      var uri = function (v) {
          return v.textDocument.uri;
      };
      var edit = function (v) {
          return v.edits;
      };
      return {
          documentChanges: Data_Nullable.toNullable(new Data_Maybe.Just(edits)), 
          changes: Data_Nullable.toNullable(Data_Maybe.Just.create(Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (v) {
              return new Data_Tuple.Tuple(uri(v.value0), Data_Array.concat(Data_Array.cons(edit(v.value0))(Data_Functor.map(Data_Functor.functorArray)(edit)(v.value1))));
          })(Data_Array.groupBy(function (a) {
              return function (b) {
                  return uri(a) === uri(b);
              };
          })(Data_Array.sortWith(Data_Ord.ordString)(uri)(edits))))))
      };
  };
  var symbolKindToInt = function (v) {
      if (v instanceof FileSymbolKind) {
          return 1;
      };
      if (v instanceof ModuleSymbolKind) {
          return 2;
      };
      if (v instanceof NamespaceSymbolKind) {
          return 3;
      };
      if (v instanceof PackageSymbolKind) {
          return 4;
      };
      if (v instanceof ClassSymbolKind) {
          return 5;
      };
      if (v instanceof MethodSymbolKind) {
          return 6;
      };
      if (v instanceof PropertySymbolKind) {
          return 7;
      };
      if (v instanceof FieldSymbolKind) {
          return 8;
      };
      if (v instanceof ConstructorSymbolKind) {
          return 9;
      };
      if (v instanceof EnumSymbolKind) {
          return 10;
      };
      if (v instanceof InterfaceSymbolKind) {
          return 11;
      };
      if (v instanceof FunctionSymbolKind) {
          return 12;
      };
      if (v instanceof VariableSymbolKind) {
          return 13;
      };
      if (v instanceof ConstantSymbolKind) {
          return 14;
      };
      if (v instanceof StringSymbolKind) {
          return 15;
      };
      if (v instanceof NumberSymbolKind) {
          return 16;
      };
      if (v instanceof BooleanSymbolKind) {
          return 17;
      };
      if (v instanceof ArraySymbolKind) {
          return 18;
      };
      throw new Error("Failed pattern match at LanguageServer.Types line 176, column 19 - line 196, column 1: " + [ v.constructor.name ]);
  }; 
  var newtypeTextDocumentIdentifier = new Data_Newtype.Newtype(function (n) {
      return n;
  }, TextDocumentIdentifier);
  var newtypePosition = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Position);
  var newtypeDocumentUri = new Data_Newtype.Newtype(function (n) {
      return n;
  }, DocumentUri);       
  var newtypeCompletionItem = new Data_Newtype.Newtype(function (n) {
      return n;
  }, CompletionItem);
  var markedString = function (s) {
      return {
          language: "purescript", 
          value: s
      };
  };
  var intToFileChangeType = function (v) {
      if (v === 1) {
          return new Data_Maybe.Just(CreatedChangeType.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(ChangedChangeType.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(DeletedChangeType.value);
      };
      return Data_Maybe.Nothing.value;
  };
  var eqPosition = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.line === v1.line && v.character === v1.character;
      };
  });
  var positionOrd = new Data_Ord.Ord(function () {
      return eqPosition;
  }, function (v) {
      return function (v1) {
          if (v.line < v1.line) {
              return Data_Ordering.LT.value;
          };
          if (v.line === v1.line && v.character < v1.character) {
              return Data_Ordering.LT.value;
          };
          if (v.line === v1.line && v.character === v1.character) {
              return Data_Ordering.EQ.value;
          };
          if (Data_Boolean.otherwise) {
              return Data_Ordering.GT.value;
          };
          throw new Error("Failed pattern match at LanguageServer.Types line 36, column 1 - line 36, column 37: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var eqDocumentUri = Data_Eq.eqString;
  var defaultCompletionItem = function (label) {
      return {
          label: label, 
          kind: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          detail: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          documentation: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          sortText: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          filterText: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          insertText: Data_Nullable.toNullable(new Data_Maybe.Just(label)), 
          textEdit: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          additionalTextEdits: Data_Nullable.toNullable(Data_Maybe.Nothing.value), 
          command: Data_Nullable.toNullable(Data_Maybe.Nothing.value)
      };
  };
  var completionItemKindToInt = function (v) {
      if (v instanceof Text) {
          return 1;
      };
      if (v instanceof Method) {
          return 2;
      };
      if (v instanceof $$Function) {
          return 3;
      };
      if (v instanceof Constructor) {
          return 4;
      };
      if (v instanceof Field) {
          return 5;
      };
      if (v instanceof Variable) {
          return 6;
      };
      if (v instanceof Class) {
          return 7;
      };
      if (v instanceof Interface) {
          return 8;
      };
      if (v instanceof Module) {
          return 9;
      };
      if (v instanceof Property) {
          return 10;
      };
      if (v instanceof Unit) {
          return 11;
      };
      if (v instanceof Value) {
          return 12;
      };
      if (v instanceof Enum) {
          return 13;
      };
      if (v instanceof Keyword) {
          return 14;
      };
      if (v instanceof Snippet) {
          return 15;
      };
      if (v instanceof Color) {
          return 16;
      };
      if (v instanceof File) {
          return 17;
      };
      if (v instanceof Reference) {
          return 18;
      };
      throw new Error("Failed pattern match at LanguageServer.Types line 122, column 27 - line 142, column 1: " + [ v.constructor.name ]);
  };
  var completionItem = function (label) {
      return function (k) {
          return Data_Newtype.over(newtypeCompletionItem)(newtypeCompletionItem)(CompletionItem)(function (v) {
              var $71 = {};
              for (var $72 in v) {
                  if ({}.hasOwnProperty.call(v, $72)) {
                      $71[$72] = v[$72];
                  };
              };
              $71.kind = Data_Nullable.toNullable(Data_Maybe.Just.create(completionItemKindToInt(k)));
              return $71;
          })(defaultCompletionItem(label));
      };
  };
  exports["CompletionItem"] = CompletionItem;
  exports["Text"] = Text;
  exports["Method"] = Method;
  exports["Function"] = $$Function;
  exports["Constructor"] = Constructor;
  exports["Field"] = Field;
  exports["Variable"] = Variable;
  exports["Class"] = Class;
  exports["Interface"] = Interface;
  exports["Module"] = Module;
  exports["Property"] = Property;
  exports["Unit"] = Unit;
  exports["Value"] = Value;
  exports["Enum"] = Enum;
  exports["Keyword"] = Keyword;
  exports["Snippet"] = Snippet;
  exports["Color"] = Color;
  exports["File"] = File;
  exports["Reference"] = Reference;
  exports["DocumentUri"] = DocumentUri;
  exports["CreatedChangeType"] = CreatedChangeType;
  exports["ChangedChangeType"] = ChangedChangeType;
  exports["DeletedChangeType"] = DeletedChangeType;
  exports["Position"] = Position;
  exports["FileSymbolKind"] = FileSymbolKind;
  exports["ModuleSymbolKind"] = ModuleSymbolKind;
  exports["NamespaceSymbolKind"] = NamespaceSymbolKind;
  exports["PackageSymbolKind"] = PackageSymbolKind;
  exports["ClassSymbolKind"] = ClassSymbolKind;
  exports["MethodSymbolKind"] = MethodSymbolKind;
  exports["PropertySymbolKind"] = PropertySymbolKind;
  exports["FieldSymbolKind"] = FieldSymbolKind;
  exports["ConstructorSymbolKind"] = ConstructorSymbolKind;
  exports["EnumSymbolKind"] = EnumSymbolKind;
  exports["InterfaceSymbolKind"] = InterfaceSymbolKind;
  exports["FunctionSymbolKind"] = FunctionSymbolKind;
  exports["VariableSymbolKind"] = VariableSymbolKind;
  exports["ConstantSymbolKind"] = ConstantSymbolKind;
  exports["StringSymbolKind"] = StringSymbolKind;
  exports["NumberSymbolKind"] = NumberSymbolKind;
  exports["BooleanSymbolKind"] = BooleanSymbolKind;
  exports["ArraySymbolKind"] = ArraySymbolKind;
  exports["TextDocumentIdentifier"] = TextDocumentIdentifier;
  exports["completionItem"] = completionItem;
  exports["completionItemKindToInt"] = completionItemKindToInt;
  exports["defaultCompletionItem"] = defaultCompletionItem;
  exports["intToFileChangeType"] = intToFileChangeType;
  exports["markedString"] = markedString;
  exports["symbolKindToInt"] = symbolKindToInt;
  exports["workspaceEdit"] = workspaceEdit;
  exports["newtypeDocumentUri"] = newtypeDocumentUri;
  exports["eqDocumentUri"] = eqDocumentUri;
  exports["eqPosition"] = eqPosition;
  exports["positionOrd"] = positionOrd;
  exports["newtypePosition"] = newtypePosition;
  exports["newtypeCompletionItem"] = newtypeCompletionItem;
  exports["newtypeTextDocumentIdentifier"] = newtypeTextDocumentIdentifier;
})(PS["LanguageServer.Types"] = PS["LanguageServer.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  exports["error"] = $foreign.error;
  exports["info"] = $foreign.info;
  exports["log"] = $foreign.log;
  exports["warn"] = $foreign.warn;
})(PS["LanguageServer.Console"] = PS["LanguageServer.Console"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });                                  
  exports.getDocument = function (documents) { return function (uri) { return function () { return documents.get(uri); }; }; };
  exports.onDidSaveDocument = function (documents) { return function (f) { return function () { return documents.onDidSave(function (p) { return f(p)(); }); }; }; };  
  exports.onDidChangeContent = function (documents) { return function (f) { return function () { return documents.onDidChangeContent(function (p) { return f(p)(); }); }; }; };
})(PS["LanguageServer.DocumentStore"] = PS["LanguageServer.DocumentStore"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.getText = function (document) { return function () { return document.getText(); }; };
  exports.getUri = function (document) { return document.uri; };              
  exports.getVersion = function (document) { return function () { return document.version; }; };    
  exports.offsetAtPosition = function (document) { return function (pos) { return function () { return document.offsetAt(pos); }; }; };
})(PS["LanguageServer.TextDocument"] = PS["LanguageServer.TextDocument"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.TextDocument"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Data_String = PS["Data.String"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  var getTextAtRange = function (doc) {
      return function (v) {
          return function __do() {
              var v1 = $foreign.offsetAtPosition(doc)(v.start)();
              var v2 = $foreign.offsetAtPosition(doc)(v.end)();
              var v3 = $foreign.getText(doc)();
              return Data_String.take(v2 - v1 | 0)(Data_String.drop(v1)(v3));
          };
      };
  };
  exports["getTextAtRange"] = getTextAtRange;
  exports["getText"] = $foreign.getText;
  exports["getUri"] = $foreign.getUri;
  exports["getVersion"] = $foreign.getVersion;
})(PS["LanguageServer.TextDocument"] = PS["LanguageServer.TextDocument"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.DocumentStore"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  exports["getDocument"] = $foreign.getDocument;
  exports["onDidChangeContent"] = $foreign.onDidChangeContent;
  exports["onDidSaveDocument"] = $foreign.onDidSaveDocument;
})(PS["LanguageServer.DocumentStore"] = PS["LanguageServer.DocumentStore"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  var vscode_jsonrpc_1 =require("vscode-jsonrpc"); 
  var registerHandler = function (registerF) {
      return function (f) { return function () { return registerF(function (x) { return f(x)(); }); }; };
  };
  var registerHandler0 = function (registerF) {
      return function (f) { return function () { return registerF(f); }; };
  };
  var registerNotificationHandler = function (registerF) {
      return function (f) { return function () { return registerF(function (x) { return f(x)(); }); }; };
  };
  exports.onDefinition = function (conn) { return registerHandler(conn.onDefinition); };
  exports.onCompletion = function (conn) { return registerHandler(conn.onCompletion); };
  exports.onHover = function (conn) { return registerHandler(conn.onHover); };
  exports.onDocumentSymbol = function (conn) { return registerHandler(conn.onDocumentSymbol); };
  exports.onWorkspaceSymbol = function (conn) { return registerHandler(conn.onWorkspaceSymbol); };
  exports.onCodeAction = function (conn) { return registerHandler(conn.onCodeAction); };
  exports.onDidChangeConfiguration = function (conn) { return registerNotificationHandler(conn.onDidChangeConfiguration); };
  exports.publishDiagnostics = function (conn) { return function (params) { return function () { return conn.sendDiagnostics(params); }; }; };
  exports.applyEdit = function (conn) { return function (edit) { return function () { return conn.workspace.applyEdit(edit); }; }; };
  exports.sendDiagnosticsBegin = function (conn) { return function () { return conn.sendNotification(new vscode_jsonrpc_1.NotificationType0('textDocument/diagnosticsBegin')); }; };
  exports.sendDiagnosticsEnd = function (conn) { return function () { return conn.sendNotification(new vscode_jsonrpc_1.NotificationType0('textDocument/diagnosticsEnd')); }; };
  exports.onExecuteCommand = function (conn) { return registerHandler(conn.onExecuteCommand); };
  exports.onDidChangeWatchedFiles = function (conn) { return registerNotificationHandler(conn.onDidChangeWatchedFiles); };
  exports.onShutdown = function (conn) { return registerHandler0(conn.onShutdown); };
})(PS["LanguageServer.Handlers"] = PS["LanguageServer.Handlers"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.Handlers"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Promise = PS["Control.Promise"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Nullable = PS["Data.Nullable"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  exports["applyEdit"] = $foreign.applyEdit;
  exports["onCodeAction"] = $foreign.onCodeAction;
  exports["onCompletion"] = $foreign.onCompletion;
  exports["onDefinition"] = $foreign.onDefinition;
  exports["onDidChangeConfiguration"] = $foreign.onDidChangeConfiguration;
  exports["onDidChangeWatchedFiles"] = $foreign.onDidChangeWatchedFiles;
  exports["onDocumentSymbol"] = $foreign.onDocumentSymbol;
  exports["onExecuteCommand"] = $foreign.onExecuteCommand;
  exports["onHover"] = $foreign.onHover;
  exports["onShutdown"] = $foreign.onShutdown;
  exports["onWorkspaceSymbol"] = $foreign.onWorkspaceSymbol;
  exports["publishDiagnostics"] = $foreign.publishDiagnostics;
  exports["sendDiagnosticsBegin"] = $foreign.sendDiagnosticsBegin;
  exports["sendDiagnosticsEnd"] = $foreign.sendDiagnosticsEnd;
})(PS["LanguageServer.Handlers"] = PS["LanguageServer.Handlers"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var PscIde_Server = PS["PscIde.Server"];        
  var getConfigMaybe = function (readValue) {
      return function (key) {
          return function (settings) {
              var val = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(settings)("purescript"))(function (v) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(v)(key))(function (v1) {
                      return readValue(v1);
                  });
              });
              return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(val));
          };
      };
  };
  var getConfig = function (readValue) {
      return function (key) {
          return function ($$default) {
              return function (settings) {
                  return Data_Maybe.fromMaybe($$default)(getConfigMaybe(readValue)(key)(settings));
              };
          };
      };
  };                                          
  var getString = getConfig(Data_Foreign.readString);
  var logLevel = function ($6) {
      return (function (v) {
          if (v === "all") {
              return new Data_Maybe.Just(PscIde_Server.All.value);
          };
          if (v === "none") {
              return new Data_Maybe.Just(PscIde_Server.None.value);
          };
          if (v === "debug") {
              return new Data_Maybe.Just(PscIde_Server.Debug.value);
          };
          if (v === "perf") {
              return new Data_Maybe.Just(PscIde_Server.Perf.value);
          };
          return Data_Maybe.Nothing.value;
      })(getString("pscIdelogLevel")("")($6));
  };
  var packagePath = getString("packagePath")("bower_components");
  var pursExe = getString("pursExe")("purs");
  var serverExe = getString("pscIdeServerExe")("psc-ide-server");
  var srcPath = getString("sourcePath")("src");
  var importsPreferredModules = getConfig(Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.readString)))("importsPreferredModules")([  ]);
  var getBoolean = getConfig(Data_Foreign.readBoolean);
  var polling = getBoolean("polling")(false);
  var usePurs = getBoolean("useCombinedExe")(true);
  var fastRebuild = getBoolean("fastRebuild")(true);
  var editorMode = getBoolean("editorMode")(false);
  var censorCodes = getConfig(Control_Bind.composeKleisli(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign.readArray)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.readString)))("censorWarnings")([  ]);
  var buildCommand = getString("buildCommand")("pulp build -- --json-errors");
  var autocompleteLimit = getConfigMaybe(Data_Foreign.readInt)("autocompleteLimit");
  var autocompleteGrouped = getBoolean("autocompleteGrouped")(false);
  var autocompleteAddImport = getBoolean("autocompleteAddImport")(true);
  var autoCompleteAllModules = getBoolean("autocompleteAllModules")(true);
  var addPscPackageSources = getBoolean("addPscPackageSources")(false);
  var addNpmPath = getBoolean("addNpmPath")(false);
  exports["addNpmPath"] = addNpmPath;
  exports["addPscPackageSources"] = addPscPackageSources;
  exports["autoCompleteAllModules"] = autoCompleteAllModules;
  exports["autocompleteAddImport"] = autocompleteAddImport;
  exports["autocompleteGrouped"] = autocompleteGrouped;
  exports["autocompleteLimit"] = autocompleteLimit;
  exports["buildCommand"] = buildCommand;
  exports["censorCodes"] = censorCodes;
  exports["editorMode"] = editorMode;
  exports["fastRebuild"] = fastRebuild;
  exports["getBoolean"] = getBoolean;
  exports["getConfig"] = getConfig;
  exports["getConfigMaybe"] = getConfigMaybe;
  exports["getString"] = getString;
  exports["importsPreferredModules"] = importsPreferredModules;
  exports["logLevel"] = logLevel;
  exports["packagePath"] = packagePath;
  exports["polling"] = polling;
  exports["pursExe"] = pursExe;
  exports["serverExe"] = serverExe;
  exports["srcPath"] = srcPath;
  exports["usePurs"] = usePurs;
})(PS["LanguageServer.IdePurescript.Config"] = PS["LanguageServer.IdePurescript.Config"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_StrMap = PS["Data.StrMap"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_FS = PS["Node.FS"];
  var Node_Process = PS["Node.Process"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];        
  var ServerState = function (x) {
      return x;
  };
  var newtypeServerState = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ServerState);
  exports["ServerState"] = ServerState;
  exports["newtypeServerState"] = newtypeServerState;
})(PS["LanguageServer.IdePurescript.Types"] = PS["LanguageServer.IdePurescript.Types"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];        
  var makeWorkspaceEdit = function (uri) {
      return function (version) {
          return function (range) {
              return function (newText) {
                  var textEdit = {
                      range: range, 
                      newText: newText
                  };
                  var docid = {
                      uri: uri, 
                      version: version
                  };
                  var edit = {
                      textDocument: docid, 
                      edits: [ textEdit ]
                  };
                  return LanguageServer_Types.workspaceEdit([ edit ]);
              };
          };
      };
  };
  var makeMinimalWorkspaceEdit = function (uri) {
      return function (version) {
          return function (oldText) {
              return function (newText) {
                  var range = function (text) {
                      return function (l1) {
                          return function (l2) {
                              return {
                                  start: {
                                      line: l1, 
                                      character: 0
                                  }, 
                                  end: {
                                      line: (Data_Array.length(text) - l2 | 0) + 1 | 0, 
                                      character: 0
                                  }
                              };
                          };
                      };
                  };
                  var newLines = Data_String.split("\x0a")(newText);
                  var oldLines = (function () {
                      var v = Data_String.split("\x0a")(oldText);
                      if (Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(Data_Array.last(v))(new Data_Maybe.Just("")) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(Data_Array.last(newLines))(new Data_Maybe.Just(""))) {
                          return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([ "" ]);
                      };
                      return v;
                  })();
                  var oldLen = Data_Array.length(oldLines);
                  var newLen = Data_Array.length(newLines);
                  var lines = function (text) {
                      return function (l1) {
                          return function (l2) {
                              return Data_Array.slice(l1)((Data_Array.length(text) - l2 | 0) + 1 | 0)(text);
                          };
                      };
                  };
                  var lastDiff = Data_Array.findIndex(Data_Tuple.uncurry(Data_Eq.notEq(Data_Eq.eqString)))(Data_Array.zip(Data_Array.reverse(oldLines))(Data_Array.reverse(newLines)));
                  var firstDiff = Data_Array.findIndex(Data_Tuple.uncurry(Data_Eq.notEq(Data_Eq.eqString)))(Data_Array.zip(oldLines)(newLines));
                  var e = function (a) {
                      return function (b) {
                          return Data_Maybe.Just.create(makeWorkspaceEdit(uri)(version)(a)(b));
                      };
                  };
                  if (firstDiff instanceof Data_Maybe.Just && (lastDiff instanceof Data_Maybe.Just && ((oldLen - lastDiff.value0 | 0) >= firstDiff.value0 && (newLen - lastDiff.value0 | 0) >= firstDiff.value0))) {
                      return e(range(oldLines)(firstDiff.value0)(lastDiff.value0))(Data_String.joinWith("\x0a")(lines(newLines)(firstDiff.value0)(lastDiff.value0)) + (function () {
                          var $4 = Data_Array["null"](newLines);
                          if ($4) {
                              return "";
                          };
                          return "\x0a";
                      })());
                  };
                  if (firstDiff instanceof Data_Maybe.Nothing && (lastDiff instanceof Data_Maybe.Nothing && oldLen === newLen)) {
                      return Data_Maybe.Nothing.value;
                  };
                  return e(range(oldLines)(0)(0))(newText);
              };
          };
      };
  };
  exports["makeMinimalWorkspaceEdit"] = makeMinimalWorkspaceEdit;
  exports["makeWorkspaceEdit"] = makeWorkspaceEdit;
})(PS["LanguageServer.Text"] = PS["LanguageServer.Text"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  var vscode_uri_1 =require("vscode-uri"); 
  exports.uriToFilename = function (uri) { return function () { return vscode_uri_1.default.parse(uri).fsPath; }; };
  exports.filenameToUri = function (filename) { return function () { return vscode_uri_1.default.file(filename).toString(); }; };
})(PS["LanguageServer.Uri"] = PS["LanguageServer.Uri"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.Uri"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  exports["filenameToUri"] = $foreign.filenameToUri;
  exports["uriToFilename"] = $foreign.uriToFilename;
})(PS["LanguageServer.Uri"] = PS["LanguageServer.Uri"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Error_Util = PS["Control.Error.Util"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Config = PS["LanguageServer.IdePurescript.Config"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Text = PS["LanguageServer.Text"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var LanguageServer_Uri = PS["LanguageServer.Uri"];
  var Prelude = PS["Prelude"];
  var PscIde_Command = PS["PscIde.Command"];        
  var getAllModules = function (log) {
      return function (docs) {
          return function (config) {
              return function (state) {
                  return function (args) {
                      if (state.port instanceof Data_Maybe.Just) {
                          return Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Foreign.toForeign)(IdePurescript_PscIde.getAvailableModules(state.port.value0));
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(log(IdePurescript_PscIdeServer["Error"].value)("Fail case")))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Foreign.toForeign([  ]));
                      });
                  };
              };
          };
      };
  };
  var addModuleImport$prime = function (log) {
      return function (docs) {
          return function (config) {
              return function (state) {
                  return function (args) {
                      var successResult = Data_Foreign.toForeign(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
                      var v = Data_Functor.map(Data_Functor.functorArray)(function ($84) {
                          return Control_Monad_Except.runExcept(Data_Foreign.readString($84));
                      })(args);
                      if (state.port instanceof Data_Maybe.Just && (v.length === 3 && (v[0] instanceof Data_Either.Right && v[2] instanceof Data_Either.Right))) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)(v[2].value0)))(function (v2) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getVersion(v2)))(function (v3) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getText(v2)))(function (v4) {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Uri.uriToFilename(v[2].value0)))(function (v5) {
                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Modules.addModuleImport(state.modules)(state.port.value0)(v5)(v4)(v[0].value0))(function (v6) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)((function () {
                                                  if (v6 instanceof Data_Maybe.Just) {
                                                      var edit = LanguageServer_Text.makeMinimalWorkspaceEdit(v[2].value0)(v3)(v4)(v6.value0.result);
                                                      if (state.conn instanceof Data_Maybe.Just && edit instanceof Data_Maybe.Just) {
                                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.applyEdit(state.conn.value0)(edit.value0));
                                                      };
                                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                                  };
                                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                              })())(function () {
                                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(successResult);
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(log(IdePurescript_PscIdeServer.Info.value)(Data_Show.show(Data_Show.showArray(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showString)))(v))))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(successResult);
                      });
                  };
              };
          };
      };
  };
  var addCompletionImport = function (log) {
      return function (docs) {
          return function (config) {
              return function (state) {
                  return function (args) {
                      var successResult = Data_Foreign.toForeign(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
                      var isSameQualified = function (mod) {
                          return function (qual) {
                              return function (v) {
                                  if (v.qualifier instanceof Data_Maybe.Just) {
                                      return mod === v.moduleName && qual === v.qualifier.value0;
                                  };
                                  return false;
                              };
                          };
                      };
                      var shouldAddImport = LanguageServer_IdePurescript_Config.autocompleteAddImport(config);
                      var v1 = Data_Functor.map(Data_Functor.functorArray)(function ($85) {
                          return Control_Monad_Except.runExcept(Data_Foreign.readString($85));
                      })(args);
                      if (state.port instanceof Data_Maybe.Just && (v1.length === 4 && (v1[0] instanceof Data_Either.Right && (v1[3] instanceof Data_Either.Right && shouldAddImport)))) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)(v1[3].value0)))(function (v3) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getVersion(v3)))(function (v4) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getText(v3)))(function (v5) {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)((function () {
                                          var v6 = Control_Error_Util.hush(v1[2]);
                                          var v7 = Control_Error_Util.hush(v1[1]);
                                          if (v7 instanceof Data_Maybe.Just && (v6 instanceof Data_Maybe.Just && Data_Foldable.all(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function ($86) {
                                              return Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(isSameQualified(v7.value0)(v6.value0))(Data_Newtype.unwrap(IdePurescript_Modules.moduleNewtype)($86));
                                          })(state.modules.modules))) {
                                              return IdePurescript_Modules.addQualifiedImport(state.modules)(state.port.value0)(v1[3].value0)(v5)(v7.value0)(v6.value0);
                                          };
                                          return IdePurescript_Modules.addExplicitImport(state.modules)(state.port.value0)(v1[3].value0)(v5)(v7)(v6)(v1[0].value0);
                                      })())(function (v6) {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                                              if (v6.result instanceof IdePurescript_Modules.UpdatedImports) {
                                                  var edit = LanguageServer_Text.makeMinimalWorkspaceEdit(v1[3].value0)(v4)(v5)(v6.result.value0);
                                                  return function __do() {
                                                      (function () {
                                                          if (state.conn instanceof Data_Maybe.Just && edit instanceof Data_Maybe.Just) {
                                                              return LanguageServer_Handlers.applyEdit(state.conn.value0)(edit.value0);
                                                          };
                                                          return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
                                                      })()();
                                                      return successResult;
                                                  };
                                              };
                                              if (v6.result instanceof IdePurescript_Modules.AmbiguousImport) {
                                                  return function __do() {
                                                      log(IdePurescript_PscIdeServer.Warning.value)("Found ambiguous imports")();
                                                      return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(function (v7) {
                                                          return v7["module'"];
                                                      })(v6.result.value0));
                                                  };
                                              };
                                              if (v6.result instanceof IdePurescript_Modules.FailedImport) {
                                                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(successResult);
                                              };
                                              throw new Error("Failed pattern match at LanguageServer.IdePurescript.Imports line 43, column 17 - line 54, column 43: " + [ v6.result.constructor.name ]);
                                          })());
                                      });
                                  });
                              });
                          });
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Applicative.when(Control_Monad_Aff.applicativeAff)(shouldAddImport)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(log(IdePurescript_PscIdeServer.Info.value)(Data_Show.show(Data_Show.showArray(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showString)))(v1)))))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(successResult);
                      });
                  };
              };
          };
      };
  };
  exports["addCompletionImport"] = addCompletionImport;
  exports["addModuleImport'"] = addModuleImport$prime;
  exports["getAllModules"] = getAllModules;
})(PS["LanguageServer.IdePurescript.Imports"] = PS["LanguageServer.IdePurescript.Imports"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_Unit = PS["Data.Unit"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var IdePurescript_Tokens = PS["IdePurescript.Tokens"];
  var LanguageServer_Console = PS["LanguageServer.Console"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Imports = PS["LanguageServer.IdePurescript.Imports"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Text = PS["LanguageServer.Text"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var lineRange = function (v) {
      return {
          start: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (v1) {
              var $35 = {};
              for (var $36 in v1) {
                  if ({}.hasOwnProperty.call(v1, $36)) {
                      $35[$36] = v1[$36];
                  };
              };
              $35.character = 0;
              return $35;
          })(v), 
          end: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (v1) {
              var $38 = {};
              for (var $39 in v1) {
                  if ({}.hasOwnProperty.call(v1, $39)) {
                      $38[$39] = v1[$39];
                  };
              };
              $38.character = Data_Bounded.top(Data_Bounded.boundedInt);
              return $38;
          })(v)
      };
  };
  var lineRange$prime = function (line) {
      return function (character) {
          return lineRange({
              line: line, 
              character: character
          });
      };
  };
  var encodeTypoResult = Data_Foreign.toForeign;
  var decodeTypoResult = function (obj) {
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(obj)("identifier"))(Data_Foreign.readString))(function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(obj)("mod"))(Data_Foreign.readString))(function (v1) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                  identifier: v, 
                  mod: v1
              });
          });
      });
  };
  var fixTypo = function (log) {
      return function (docs) {
          return function (settings) {
              return function (state) {
                  return function (args) {
                      var replace = function (conn) {
                          return function (uri) {
                              return function (version) {
                                  return function (line) {
                                      return function (v) {
                                          return function (word) {
                                              return function (mod) {
                                                  var range = {
                                                      start: {
                                                          line: line, 
                                                          character: v.right
                                                      }, 
                                                      end: {
                                                          line: line, 
                                                          character: v.left
                                                      }
                                                  };
                                                  var edit = LanguageServer_Text.makeWorkspaceEdit(uri)(version)(range)(word);
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.applyEdit(conn)(edit)))(function () {
                                                      return LanguageServer_IdePurescript_Imports.addCompletionImport(log)(docs)(settings)(state)([ Data_Foreign.toForeign(word), Data_Foreign.toForeign(mod), Data_Foreign.toForeign(Data_Maybe.Nothing.value), Data_Foreign.toForeign(uri) ]);
                                                  });
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                      var emptyRes = Data_Foreign.toForeign([  ]);
                      var convertRes = function (v) {
                          return {
                              identifier: v.identifier, 
                              mod: v["module'"]
                          };
                      };
                      return Data_Functor.map(Control_Monad_Aff.functorAff)(function ($160) {
                          return Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(encodeTypoResult)($160));
                      })((function () {
                          var v = Data_Array.index(args)(2);
                          var v1 = Data_Array.index(args)(1);
                          var v2 = Data_Array.index(args)(0);
                          var v5 = function (v6) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
                          };
                          if (state.port instanceof Data_Maybe.Just && (state.conn instanceof Data_Maybe.Just && (v2 instanceof Data_Maybe.Just && (v1 instanceof Data_Maybe.Just && v instanceof Data_Maybe.Just)))) {
                              var $63 = Control_Monad_Except.runExcept(Data_Foreign.readString(v2.value0));
                              if ($63 instanceof Data_Either.Right) {
                                  var $64 = Control_Monad_Except.runExcept(Data_Foreign.readInt(v1.value0));
                                  if ($64 instanceof Data_Either.Right) {
                                      var $65 = Control_Monad_Except.runExcept(Data_Foreign.readInt(v.value0));
                                      if ($65 instanceof Data_Either.Right) {
                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)($63.value0)))(function (v6) {
                                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v6)(lineRange$prime($64.value0)($65.value0))))(function (v7) {
                                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getVersion(v6)))(function (v8) {
                                                      var v9 = Data_Functor.map(Data_Maybe.functorMaybe)(function ($161) {
                                                          return Control_Monad_Except.runExcept(decodeTypoResult($161));
                                                      })(Data_Array.index(args)(3));
                                                      var v10 = IdePurescript_Tokens.identifierAtPoint(v7)($65.value0);
                                                      if (v10 instanceof Data_Maybe.Just && (v9 instanceof Data_Maybe.Just && v9.value0 instanceof Data_Either.Right)) {
                                                          return Data_Functor.voidRight(Control_Monad_Aff.functorAff)([  ])(replace(state.conn.value0)($63.value0)(v8)($64.value0)(v10.value0.range)(v9.value0.value0.identifier)(v9.value0.value0.mod));
                                                      };
                                                      if (v10 instanceof Data_Maybe.Just) {
                                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(PscIde.suggestTypos(state.port.value0)(v10.value0.word)(2)(state.modules.main)(PscIde.defaultCompletionOptions))(function (v11) {
                                                              if (v11 instanceof Data_Either.Right && v11.value0.length === 1) {
                                                                  return Data_Functor.voidRight(Control_Monad_Aff.functorAff)([  ])(replace(state.conn.value0)($63.value0)(v8)($64.value0)(v10.value0.range)(v11["value0"][0].identifier)(v11["value0"][0]["module'"]));
                                                              };
                                                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Functor.map(Data_Functor.functorArray)(convertRes)(Data_Either.either(Control_Applicative.pure(Control_Applicative.applicativeFn)([  ]))(Control_Category.id(Control_Category.categoryFn))(v11)));
                                                          });
                                                      };
                                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
                                                  });
                                              });
                                          });
                                      };
                                      return v5(true);
                                  };
                                  return v5(true);
                              };
                              return v5(true);
                          };
                          return v5(true);
                      })());
                  };
              };
          };
      };
  };
  var caseSplit = function (docs) {
      return function (settings) {
          return function (state) {
              return function (args) {
                  var v = function (v1) {
                      if (state.conn instanceof Data_Maybe.Just && args.length === 4) {
                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Console.log(state.conn.value0)(Data_Show.show(Data_Show.showArray(Data_Show.showString))([ Data_Show.show(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showString))(Control_Monad_Except.runExcept(Data_Foreign.readString(args[0]))), Data_Show.show(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showInt))(Control_Monad_Except.runExcept(Data_Foreign.readInt(args[1]))), Data_Show.show(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showInt))(Control_Monad_Except.runExcept(Data_Foreign.readInt(args[2]))), Data_Show.show(Data_Either.showEither(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(Data_Show.showString))(Control_Monad_Except.runExcept(Data_Foreign.readString(args[3]))) ])));
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))(Data_Function.flip(LanguageServer_Console.log)("fial match"))(state.conn)))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                      });
                  };
                  if (state.port instanceof Data_Maybe.Just && (state.conn instanceof Data_Maybe.Just && args.length === 4)) {
                      var $109 = Control_Monad_Except.runExcept(Data_Foreign.readString(args[0]));
                      if ($109 instanceof Data_Either.Right) {
                          var $110 = Control_Monad_Except.runExcept(Data_Foreign.readInt(args[1]));
                          if ($110 instanceof Data_Either.Right) {
                              var $111 = Control_Monad_Except.runExcept(Data_Foreign.readInt(args[2]));
                              if ($111 instanceof Data_Either.Right) {
                                  var $112 = Control_Monad_Except.runExcept(Data_Foreign.readString(args[3]));
                                  if ($112 instanceof Data_Either.Right) {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)($109.value0)))(function (v1) {
                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v1)(lineRange$prime($110.value0)($111.value0))))(function (v2) {
                                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getVersion(v1)))(function (v3) {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)((function () {
                                                      var v4 = IdePurescript_Tokens.identifierAtPoint(v2)($111.value0);
                                                      if (v4 instanceof Data_Maybe.Just) {
                                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.eitherToErr(PscIde.caseSplit(state.port.value0)(v2)(v4.value0.range.left)(v4.value0.range.right)(false)($112.value0)))(function (v5) {
                                                              var edit = LanguageServer_Text.makeWorkspaceEdit($109.value0)(v3)(lineRange$prime($110.value0)($111.value0))(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")(Data_Functor.map(Data_Functor.functorArray)(Data_String.trim)(v5)));
                                                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.applyEdit(state.conn.value0)(edit));
                                                          });
                                                      };
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Console.log(state.conn.value0)("fail identifier")))(function () {
                                                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                                      });
                                                  })())(function () {
                                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                                  });
                                              });
                                          });
                                      });
                                  };
                                  return v(true);
                              };
                              return v(true);
                          };
                          return v(true);
                      };
                      return v(true);
                  };
                  return v(true);
              };
          };
      };
  };
  var addClause = function (docs) {
      return function (settings) {
          return function (state) {
              return function (args) {
                  var v = function (v1) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                  };
                  if (state.port instanceof Data_Maybe.Just && (state.conn instanceof Data_Maybe.Just && args.length === 3)) {
                      var $138 = Control_Monad_Except.runExcept(Data_Foreign.readString(args[0]));
                      if ($138 instanceof Data_Either.Right) {
                          var $139 = Control_Monad_Except.runExcept(Data_Foreign.readInt(args[1]));
                          if ($139 instanceof Data_Either.Right) {
                              var $140 = Control_Monad_Except.runExcept(Data_Foreign.readInt(args[2]));
                              if ($140 instanceof Data_Either.Right) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)($138.value0)))(function (v1) {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v1)(lineRange$prime($139.value0)($140.value0))))(function (v2) {
                                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getVersion(v1)))(function (v3) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)((function () {
                                                  var v4 = IdePurescript_Tokens.identifierAtPoint(v2)($140.value0);
                                                  if (v4 instanceof Data_Maybe.Just) {
                                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.eitherToErr(PscIde.addClause(state.port.value0)(v2)(false)))(function (v5) {
                                                          var edit = LanguageServer_Text.makeWorkspaceEdit($138.value0)(v3)(lineRange$prime($139.value0)($140.value0))(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")(Data_Functor.map(Data_Functor.functorArray)(Data_String.trim)(v5)));
                                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.applyEdit(state.conn.value0)(edit));
                                                      });
                                                  };
                                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                              })())(function () {
                                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                                              });
                                          });
                                      });
                                  });
                              };
                              return v(true);
                          };
                          return v(true);
                      };
                      return v(true);
                  };
                  return v(true);
              };
          };
      };
  };
  exports["addClause"] = addClause;
  exports["caseSplit"] = caseSplit;
  exports["decodeTypoResult"] = decodeTypoResult;
  exports["encodeTypoResult"] = encodeTypoResult;
  exports["fixTypo"] = fixTypo;
  exports["lineRange"] = lineRange;
})(PS["LanguageServer.IdePurescript.Assist"] = PS["LanguageServer.IdePurescript.Assist"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_Tuple = PS["Data.Tuple"];
  var IdePurescript_Build = PS["IdePurescript.Build"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var LanguageServer_IdePurescript_Config = PS["LanguageServer.IdePurescript.Config"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var LanguageServer_Uri = PS["LanguageServer.Uri"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];        
  var positionToRange = function (v) {
      return {
          start: {
              line: v.startLine - 1 | 0, 
              character: v.startColumn - 1 | 0
          }, 
          end: {
              line: v.endLine - 1 | 0, 
              character: v.endColumn - 1 | 0
          }
      };
  };
  var emptyDiagnostics = {
      pscErrors: [  ], 
      diagnostics: Data_StrMap.empty
  };
  var collectByFirst = function (x) {
      var f = function (v) {
          if (v.value0 instanceof Data_Maybe.Just) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, [ v.value1 ]));
          };
          return Data_Maybe.Nothing.value;
      };
      return Data_StrMap.fromFoldableWith(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupArray))(Data_Array.mapMaybe(f)(x));
  };
  var censorWarnings = function (settings) {
      var getCode = function (v) {
          return v.errorCode;
      };
      var codes = LanguageServer_IdePurescript_Config.censorCodes(settings);
      return Data_Array.filter(function ($62) {
          return Data_Function.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Data_Eq.eqString))(codes)(getCode($62));
      });
  };
  var convertDiagnostics = function (projectRoot) {
      return function (settings) {
          return function (v) {
              var warnings$prime = censorWarnings(settings)(v.warnings);
              var dummyRange = {
                  start: {
                      line: 1, 
                      character: 1
                  }, 
                  end: {
                      line: 1, 
                      character: 1
                  }
              };
              var convertDiagnostic = function (isError) {
                  return function (v1) {
                      return new Data_Tuple.Tuple(Data_Functor.map(Data_Maybe.functorMaybe)(Node_Path.resolve([ projectRoot ]))(v1.filename), {
                          range: Data_Maybe.maybe(dummyRange)(positionToRange)(v1.position), 
                          severity: Data_Nullable.toNullable(Data_Maybe.Just.create((function () {
                              if (isError) {
                                  return 1;
                              };
                              return 2;
                          })())), 
                          code: Data_Nullable.toNullable(Data_Maybe.Just.create(v1.errorCode)), 
                          source: Data_Nullable.toNullable(new Data_Maybe.Just("PureScript")), 
                          message: v1.message
                      });
                  };
              };
              var allDiagnostics = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(convertDiagnostic(true))(v.errors))(Data_Functor.map(Data_Functor.functorArray)(convertDiagnostic(false))(warnings$prime));
              var diagnostics = collectByFirst(allDiagnostics);
              return {
                  diagnostics: diagnostics, 
                  pscErrors: Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.errors)(warnings$prime)
              };
          };
      };
  };
  var fullBuild = function (logCb) {
      return function (v) {
          return function (settings) {
              return function (v1) {
                  return function (v2) {
                      var command = LanguageServer_IdePurescript_Config.buildCommand(settings);
                      var buildCommand = Data_Either.either(Data_Function["const"]([  ]))(function (reg) {
                          return Data_String_Regex.split(reg)(Data_String.trim(command));
                      })(Data_String_Regex.regex("\\s+")(Data_String_Regex_Flags.noFlags));
                      var v3 = Data_Array.uncons(buildCommand);
                      if (v1.conn instanceof Data_Maybe.Just && (v1.root instanceof Data_Maybe.Just && v3 instanceof Data_Maybe.Just)) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Build.build(logCb)({
                              command: new IdePurescript_Build.Command(v3.value0.head, v3.value0.tail), 
                              directory: v1.root.value0, 
                              useNpmDir: LanguageServer_IdePurescript_Config.addNpmPath(settings)
                          }))(function (v6) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logCb(IdePurescript_PscIdeServer.Info.value)("Build complete")))(function () {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(convertDiagnostics(v1.root.value0)(settings)(v6.errors));
                              });
                          });
                      };
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logCb(IdePurescript_PscIdeServer["Error"].value)("Error parsing build command")))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(emptyDiagnostics);
                      });
                  };
              };
          };
      };
  };
  var getDiagnostics = function (uri) {
      return function (settings) {
          return function (state) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Uri.uriToFilename(uri)))(function (v) {
                  if (state.port instanceof Data_Maybe.Just && state.root instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Build.rebuild(state.port.value0)(v))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(convertDiagnostics(state.root.value0)(settings)(v1.errors));
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(emptyDiagnostics);
              });
          };
      };
  };
  exports["censorWarnings"] = censorWarnings;
  exports["collectByFirst"] = collectByFirst;
  exports["convertDiagnostics"] = convertDiagnostics;
  exports["emptyDiagnostics"] = emptyDiagnostics;
  exports["fullBuild"] = fullBuild;
  exports["getDiagnostics"] = getDiagnostics;
  exports["positionToRange"] = positionToRange;
})(PS["LanguageServer.IdePurescript.Build"] = PS["LanguageServer.IdePurescript.Build"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];        
  var CommandInfo = (function () {
      function CommandInfo(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CommandInfo.create = function (value0) {
          return function (value1) {
              return new CommandInfo(value0, value1);
          };
      };
      return CommandInfo;
  })();
  var stopPscIdeCmd = new CommandInfo("Stop Psc-Ide-Server", "stopPscIde");
  var startPscIdeCmd = new CommandInfo("Start Psc-Ide-Server", "startPscIde");
  var searchCmd = new CommandInfo("Search identifiers", "search");
  var restartPscIdeCmd = new CommandInfo("Restart Psc-Ide-Server", "restartPscIde");
  var replaceSuggestionCmd = new CommandInfo("Apply Suggestion", "replaceSuggestion");
  var getAvailableModulesCmd = new CommandInfo("Get available modules", "getAvailableModules");
  var fixTypoCmd = new CommandInfo("Fix typo/add import", "fixTypo");
  var cmdName = function (v) {
      return "purescript." + v.value1;
  };
  var caseSplitCmd = new CommandInfo("Case split (explicit position)", "caseSplit-explicit");
  var c = function (v) {
      return function (args) {
          return {
              title: v.value0, 
              command: cmdName(v), 
              "arguments": Data_Nullable.toNullable(args)
          };
      };
  };
  var fixTypo = function (uri) {
      return function (row) {
          return function ($$char) {
              return c(fixTypoCmd)(new Data_Maybe.Just([ Data_Foreign.toForeign(uri), Data_Foreign.toForeign(row), Data_Foreign.toForeign($$char) ]));
          };
      };
  };
  var replaceSuggestion = function (title) {
      return function (uri) {
          return function (replacement) {
              return function (fixRange) {
                  return c(new CommandInfo(title, "replaceSuggestion"))(new Data_Maybe.Just([ Data_Foreign.toForeign(uri), Data_Foreign.toForeign(replacement), Data_Foreign.toForeign(fixRange) ]));
              };
          };
      };
  };
  var buildCmd = new CommandInfo("Build", "build");
  var build = c(buildCmd)(Data_Maybe.Nothing.value);
  var addModuleImportCmd = new CommandInfo("Add module import", "addModuleImport");
  var addCompletionImportCmd = new CommandInfo("Add completion import", "addCompletionImport");
  var addCompletionImport = function (ident) {
      return function (mod) {
          return function (qual) {
              return function (uri) {
                  return c(addCompletionImportCmd)(new Data_Maybe.Just([ Data_Foreign.toForeign(ident), Data_Foreign.toForeign(Data_Nullable.toNullable(mod)), Data_Foreign.toForeign(Data_Nullable.toNullable(qual)), Data_Foreign.toForeign(uri) ]));
              };
          };
      };
  };
  var addClauseCmd = new CommandInfo("Add clause (explicit position/cmd)", "addClause-explicit");
  var commands = Data_Functor.map(Data_Functor.functorArray)(cmdName)([ addCompletionImportCmd, caseSplitCmd, addClauseCmd, replaceSuggestionCmd, buildCmd, startPscIdeCmd, stopPscIdeCmd, restartPscIdeCmd ]);
  exports["CommandInfo"] = CommandInfo;
  exports["addClauseCmd"] = addClauseCmd;
  exports["addCompletionImport"] = addCompletionImport;
  exports["addCompletionImportCmd"] = addCompletionImportCmd;
  exports["addModuleImportCmd"] = addModuleImportCmd;
  exports["build"] = build;
  exports["buildCmd"] = buildCmd;
  exports["c"] = c;
  exports["caseSplitCmd"] = caseSplitCmd;
  exports["cmdName"] = cmdName;
  exports["commands"] = commands;
  exports["fixTypo"] = fixTypo;
  exports["fixTypoCmd"] = fixTypoCmd;
  exports["getAvailableModulesCmd"] = getAvailableModulesCmd;
  exports["replaceSuggestion"] = replaceSuggestion;
  exports["replaceSuggestionCmd"] = replaceSuggestionCmd;
  exports["restartPscIdeCmd"] = restartPscIdeCmd;
  exports["searchCmd"] = searchCmd;
  exports["startPscIdeCmd"] = startPscIdeCmd;
  exports["stopPscIdeCmd"] = stopPscIdeCmd;
})(PS["LanguageServer.IdePurescript.Commands"] = PS["LanguageServer.IdePurescript.Commands"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var IdePurescript_QuickFix = PS["IdePurescript.QuickFix"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Build = PS["LanguageServer.IdePurescript.Build"];
  var LanguageServer_IdePurescript_Commands = PS["LanguageServer.IdePurescript.Commands"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Text = PS["LanguageServer.Text"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];        
  var readRange = function (r) {
      var readPosition = function (p) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(p)("line"))(Data_Foreign.readInt))(function (v) {
              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(p)("character"))(Data_Foreign.readInt))(function (v1) {
                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                      line: v, 
                      character: v1
                  });
              });
          });
      };
      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(r)("start"))(readPosition))(function (v) {
          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(Data_Foreign_Index.indexableForeign)(Data_Foreign_Index.indexString)(r)("end"))(readPosition))(function (v1) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))({
                  start: v, 
                  end: v1
              });
          });
      });
  };
  var getActions = function (documents) {
      return function (settings) {
          return function (v) {
              return function (v1) {
                  var docUri = (function (v2) {
                      return v2.uri;
                  })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)(v1.textDocument));
                  var contains = function (v2) {
                      return function (v3) {
                          return Data_Ord.lessThanOrEq(LanguageServer_Types.positionOrd)(v2.start)(v3.start) && Data_Ord.greaterThanOrEq(LanguageServer_Types.positionOrd)(v2.end)(v3.end);
                      };
                  };
                  var commandForCode = function (v2) {
                      if (v2.position instanceof Data_Maybe.Just && contains(v1.range)(LanguageServer_IdePurescript_Build.positionToRange(v2.position.value0))) {
                          if (v2.errorCode === "ModuleNotFound") {
                              return new Data_Maybe.Just(LanguageServer_IdePurescript_Commands.build);
                          };
                          var v3 = function (v4) {
                              return Data_Maybe.Nothing.value;
                          };
                          var $41 = IdePurescript_QuickFix.isUnknownToken(v2.errorCode);
                          if ($41) {
                              return Data_Maybe.Just.create(LanguageServer_IdePurescript_Commands.fixTypo(docUri)(v2.position.value0.startLine)(v2.position.value0.startColumn));
                          };
                          return v3(true);
                      };
                      return Data_Maybe.Nothing.value;
                  };
                  var asCommand = function (v2) {
                      if (v2.position instanceof Data_Maybe.Just && (v2.suggestion instanceof Data_Maybe.Just && contains(v1.range)(LanguageServer_IdePurescript_Build.positionToRange(v2.position.value0)))) {
                          var range$prime = LanguageServer_IdePurescript_Build.positionToRange(Data_Maybe.fromMaybe(v2.position.value0)(v2.suggestion.value0.replaceRange));
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Just.create(LanguageServer_IdePurescript_Commands.replaceSuggestion(IdePurescript_QuickFix.getTitle(v2.errorCode))((function (v3) {
                              return v3.uri;
                          })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)(v1.textDocument)))(v2.suggestion.value0.replacement)(range$prime)));
                      };
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                  };
                  var v2 = Data_StrMap.lookup(Data_Newtype.un(LanguageServer_Types.newtypeDocumentUri)(LanguageServer_Types.DocumentUri)(docUri))(v.diagnostics);
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Array.catMaybes)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Aff.applicativeAff)(asCommand)(v2.value0)))(function (v3) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v3)(Data_Array.mapMaybe(commandForCode)(v2.value0)));
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
              };
          };
      };
  };
  var afterEnd = function (v) {
      return {
          start: v.end, 
          end: {
              line: v.end.line, 
              character: v.end.character + 10 | 0
          }
      };
  };
  var onReplaceSuggestion = function (docs) {
      return function (config) {
          return function (v) {
              return function (args) {
                  var v1 = function (v2) {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                  };
                  if (v.conn instanceof Data_Maybe.Just && args.length === 3) {
                      var $73 = Control_Monad_Except.runExcept(Data_Foreign.readString(args[0]));
                      if ($73 instanceof Data_Either.Right) {
                          var $74 = Control_Monad_Except.runExcept(Data_Foreign.readString(args[1]));
                          if ($74 instanceof Data_Either.Right) {
                              var $75 = Control_Monad_Except.runExcept(readRange(args[2]));
                              if ($75 instanceof Data_Either.Right) {
                                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                      var v2 = LanguageServer_DocumentStore.getDocument(docs)($73.value0)();
                                      var v3 = LanguageServer_TextDocument.getVersion(v2)();
                                      var v4 = LanguageServer_TextDocument.getTextAtRange(v2)($75.value0)();
                                      var v5 = LanguageServer_TextDocument.getTextAtRange(v2)(afterEnd($75.value0))();
                                      var edit = LanguageServer_Text.makeWorkspaceEdit($73.value0)(v3)($75.value0)(IdePurescript_QuickFix.getReplacement($74.value0)(v5));
                                      return LanguageServer_Handlers.applyEdit(v.conn.value0)(edit)();
                                  });
                              };
                              return v1(true);
                          };
                          return v1(true);
                      };
                      return v1(true);
                  };
                  return v1(true);
              };
          };
      };
  };
  exports["afterEnd"] = afterEnd;
  exports["getActions"] = getActions;
  exports["onReplaceSuggestion"] = onReplaceSuggestion;
  exports["readRange"] = readRange;
})(PS["LanguageServer.IdePurescript.CodeActions"] = PS["LanguageServer.IdePurescript.CodeActions"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_String = PS["Data.String"];
  var IdePurescript_Completion = PS["IdePurescript.Completion"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Commands = PS["LanguageServer.IdePurescript.Commands"];
  var LanguageServer_IdePurescript_Config = PS["LanguageServer.IdePurescript.Config"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];        
  var getCompletions = function (docs) {
      return function (settings) {
          return function (state) {
              return function (v) {
                  var result = function (arr) {
                      return {
                          items: arr, 
                          isIncomplete: Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(LanguageServer_IdePurescript_Config.autocompleteLimit(settings))(new Data_Maybe.Just(Data_Array.length(arr)))
                      };
                  };
                  var mkRange = function (v1) {
                      return {
                          start: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (v2) {
                              var $20 = {};
                              for (var $21 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $21)) {
                                      $20[$21] = v2[$21];
                                  };
                              };
                              $20.character = 0;
                              return $20;
                          })(v1), 
                          end: v1
                      };
                  };
                  var edit = function (newText) {
                      return function (prefix) {
                          return {
                              range: {
                                  start: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (pos) {
                                      var $25 = {};
                                      for (var $26 in pos) {
                                          if ({}.hasOwnProperty.call(pos, $26)) {
                                              $25[$26] = pos[$26];
                                          };
                                      };
                                      $25.character = pos.character - Data_String.length(prefix) | 0;
                                      return $25;
                                  })(v.position), 
                                  end: v.position
                              }, 
                              newText: newText
                          };
                      };
                  };
                  var convertSuggest = function (v1) {
                      if (v1 instanceof IdePurescript_Completion.Module) {
                          return LanguageServer_Types.Module.value;
                      };
                      if (v1 instanceof IdePurescript_Completion.Value) {
                          return LanguageServer_Types.Value.value;
                      };
                      if (v1 instanceof IdePurescript_Completion["Function"]) {
                          return LanguageServer_Types["Function"].value;
                      };
                      if (v1 instanceof IdePurescript_Completion.Type) {
                          return LanguageServer_Types.Class.value;
                      };
                      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Completion line 58, column 22 - line 62, column 23: " + [ v1.constructor.name ]);
                  };
                  var convert = function (v1) {
                      return function (v2) {
                          if (v2 instanceof IdePurescript_Completion.ModuleSuggestion) {
                              return Data_Newtype.over(LanguageServer_Types.newtypeCompletionItem)(LanguageServer_Types.newtypeCompletionItem)(LanguageServer_Types.CompletionItem)(function (v3) {
                                  var $31 = {};
                                  for (var $32 in v3) {
                                      if ({}.hasOwnProperty.call(v3, $32)) {
                                          $31[$32] = v3[$32];
                                      };
                                  };
                                  $31.textEdit = Data_Nullable.toNullable(Data_Maybe.Just.create(edit(v2.value0.text)(v2.value0.prefix)));
                                  return $31;
                              })(LanguageServer_Types.completionItem(v2.value0.text)(convertSuggest(v2.value0.suggestType)));
                          };
                          if (v2 instanceof IdePurescript_Completion.IdentSuggestion) {
                              var exportText = (function () {
                                  var $38 = v2.value0.exportMod === v2.value0.origMod;
                                  if ($38) {
                                      return v2.value0.origMod;
                                  };
                                  return v2.value0.exportMod + (" (re-exported from " + (v2.value0.origMod + ")"));
                              })() + "\x0a";
                              return Data_Newtype.over(LanguageServer_Types.newtypeCompletionItem)(LanguageServer_Types.newtypeCompletionItem)(LanguageServer_Types.CompletionItem)(function (v3) {
                                  var $39 = {};
                                  for (var $40 in v3) {
                                      if ({}.hasOwnProperty.call(v3, $40)) {
                                          $39[$40] = v3[$40];
                                      };
                                  };
                                  $39.detail = Data_Nullable.toNullable(new Data_Maybe.Just(v2.value0.valueType));
                                  $39.documentation = Data_Nullable.toNullable(Data_Maybe.Just.create(exportText + Data_Maybe.fromMaybe("")(v2.value0.documentation)));
                                  $39.command = Data_Nullable.toNullable(Data_Maybe.Just.create(LanguageServer_IdePurescript_Commands.addCompletionImport(v2.value0.identifier)(new Data_Maybe.Just(v2.value0.exportMod))(v2.value0.qualifier)(v1)));
                                  $39.textEdit = Data_Nullable.toNullable(Data_Maybe.Just.create(edit(v2.value0.identifier)(v2.value0.prefix)));
                                  return $39;
                              })(LanguageServer_Types.completionItem(v2.value0.identifier)(convertSuggest(v2.value0.suggestType)));
                          };
                          throw new Error("Failed pattern match at LanguageServer.IdePurescript.Completion line 72, column 5 - line 76, column 13: " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                  };
                  var uri = (function (v1) {
                      return v1.uri;
                  })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)(v.textDocument));
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)(uri)))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v1)(mkRange(v.position))))(function (v2) {
                          var autoCompleteAllModules = LanguageServer_IdePurescript_Config.autoCompleteAllModules(settings);
                          var v3 = Data_Newtype.unwrap(LanguageServer_IdePurescript_Types.newtypeServerState)(state);
                          var getQualifiedModule = Data_Function.flip(IdePurescript_Modules.getQualModule)(v3.modules);
                          if (v3.port instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)((function () {
                                  if (autoCompleteAllModules) {
                                      return IdePurescript_PscIde.getLoadedModules(v3.port.value0);
                                  };
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(IdePurescript_Modules.getUnqualActiveModules(v3.modules)(Data_Maybe.Nothing.value));
                              })())(function (v4) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Completion.getSuggestions(v3.port.value0)({
                                      line: v2, 
                                      moduleInfo: {
                                          modules: v4, 
                                          getQualifiedModule: getQualifiedModule, 
                                          mainModule: v3.modules.main, 
                                          importedModules: IdePurescript_Modules.getAllActiveModules(v3.modules)
                                      }, 
                                      maxResults: LanguageServer_IdePurescript_Config.autocompleteLimit(settings), 
                                      groupCompletions: LanguageServer_IdePurescript_Config.autocompleteGrouped(settings), 
                                      preferredModules: LanguageServer_IdePurescript_Config.importsPreferredModules(settings)
                                  }))(function (v5) {
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(result(Data_Functor.map(Data_Functor.functorArray)(convert(uri))(v5)));
                                  });
                              });
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(result([  ]));
                      });
                  });
              };
          };
      };
  };
  exports["getCompletions"] = getCompletions;
})(PS["LanguageServer.IdePurescript.Completion"] = PS["LanguageServer.IdePurescript.Completion"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var encodeSearchResult = Data_Foreign.toForeign;
  var search = function (docs) {
      return function (config) {
          return function (state) {
              return function (args) {
                  var toResult = function (v) {
                      return encodeSearchResult({
                          typ: v["type'"], 
                          identifier: v.identifier, 
                          mod: v["module'"]
                      });
                  };
                  var v = Control_Monad_Except.runExcept(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.readString)(args));
                  if (state.port instanceof Data_Maybe.Just && (v instanceof Data_Either.Right && v.value0.length === 1)) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getLoadedModules(state.port.value0))(function (v2) {
                          var getQualifiedModule = Data_Function.flip(IdePurescript_Modules.getQualModule)(state.modules);
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde["getCompletion'"](Data_Maybe.Just.create(new PscIde_Command.Flex(v["value0"][0])))([  ])(state.port.value0)(state.modules.main)(Data_Maybe.Nothing.value)(v2)(getQualifiedModule)(PscIde.defaultCompletionOptions))(function (v3) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Foreign.toForeign(Data_Functor.map(Data_Functor.functorArray)(toResult)(v3)));
                          });
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Foreign.toForeign([  ]));
              };
          };
      };
  };
  exports["encodeSearchResult"] = encodeSearchResult;
  exports["search"] = search;
})(PS["LanguageServer.IdePurescript.Search"] = PS["LanguageServer.IdePurescript.Search"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Utils = PS["Data.String.Utils"];
  var Data_Time_Duration = PS["Data.Time.Duration"];
  var IdePurescript_Exec = PS["IdePurescript.Exec"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var LanguageServer_IdePurescript_Config = PS["LanguageServer.IdePurescript.Config"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];
  var PscIde_Server = PS["PscIde.Server"];        
  var retry = function (v) {
      return function (v1) {
          return function (a) {
              if (v1 > 0) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(a))(function (v2) {
                      if (v2 instanceof Data_Either.Right) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2.value0);
                      };
                      if (v2 instanceof Data_Either.Left) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(v(IdePurescript_PscIdeServer.Info.value)("Retrying starting server after 500ms: " + Data_Show.show(Control_Monad_Eff_Exception.showError)(v2.value0))))(function () {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(500.0))(function () {
                                  return retry(v)(v1 - 1 | 0)(a);
                              });
                          });
                      };
                      throw new Error("Failed pattern match at LanguageServer.IdePurescript.Server line 27, column 5 - line 32, column 37: " + [ v2.constructor.name ]);
                  });
              };
              return a;
          };
      };
  };
  var getPscPackagePaths = function (settings) {
      return function (root) {
          var $17 = !LanguageServer_IdePurescript_Config.addPscPackageSources(settings);
          if ($17) {
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
          };
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(IdePurescript_Exec.getPathVar(LanguageServer_IdePurescript_Config.addNpmPath(settings))(Data_Maybe.fromMaybe("")(root))))(function (v) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Exec.findBins(v)("psc-package"))(function (v1) {
                  var v2 = Data_Array.head(v1);
                  if (v2 instanceof Data_Maybe.Just) {
                      return Control_Monad_Aff.makeAff(function (err) {
                          return function (succ) {
                              return Node_ChildProcess.execFile(v2.value0.value0)([ "sources" ])(Node_ChildProcess.defaultExecOptions)(function (v3) {
                                  return function __do() {
                                      var v4 = Node_Buffer.toString(Node_Encoding.UTF8.value)(v3.stdout)();
                                      return succ(Data_String_Utils.lines(v4))();
                                  };
                              });
                          };
                      });
                  };
                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
              });
          });
      };
  };
  var startServer$prime = function (settings) {
      return function (root) {
          return function (cb) {
              return function (logCb) {
                  var getGlob = function (fn) {
                      return (function (v) {
                          if (!Data_String["null"](v)) {
                              return [ v + "/**/*.purs" ];
                          };
                          return [  ];
                      })(fn(settings));
                  };
                  var globs = Data_Semigroup.append(Data_Semigroup.semigroupArray)(getGlob(LanguageServer_IdePurescript_Config.srcPath))(getGlob(LanguageServer_IdePurescript_Config.packagePath));
                  var exe = (function () {
                      var $28 = LanguageServer_IdePurescript_Config.usePurs(settings);
                      if ($28) {
                          return LanguageServer_IdePurescript_Config.pursExe(settings);
                      };
                      return LanguageServer_IdePurescript_Config.serverExe(settings);
                  })();
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(getPscPackagePaths(settings)(root))(function (v) {
                      return IdePurescript_PscIdeServer["startServer'"]({
                          exe: exe, 
                          combinedExe: LanguageServer_IdePurescript_Config.usePurs(settings), 
                          glob: Data_Array.filter(function ($30) {
                              return !Data_String["null"]($30);
                          })(Data_Semigroup.append(Data_Semigroup.semigroupArray)(globs)(v)), 
                          logLevel: LanguageServer_IdePurescript_Config.logLevel(settings), 
                          editorMode: LanguageServer_IdePurescript_Config.editorMode(settings), 
                          polling: LanguageServer_IdePurescript_Config.polling(settings), 
                          outputDirectory: Data_Maybe.Nothing.value
                      })(Data_Maybe.fromMaybe("")(root))(LanguageServer_IdePurescript_Config.addNpmPath(settings))(cb)(logCb);
                  });
              };
          };
      };
  };
  exports["getPscPackagePaths"] = getPscPackagePaths;
  exports["retry"] = retry;
  exports["startServer'"] = startServer$prime;
})(PS["LanguageServer.IdePurescript.Server"] = PS["LanguageServer.IdePurescript.Server"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var IdePurescript_Tokens = PS["IdePurescript.Tokens"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var LanguageServer_Uri = PS["LanguageServer.Uri"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];        
  var convPosition = function (v) {
      return {
          line: v.line - 1 | 0, 
          character: v.column - 1 | 0
      };
  };
  var convTypePosition = function (v) {
      return {
          start: convPosition(v.start), 
          end: convPosition(v.end)
      };
  };
  var getSymbols = function (root) {
      return function (port) {
          return function (prefix) {
              return function (modules) {
                  var getName = function (v) {
                      return Node_Path.resolve([ root ])(v.name);
                  };
                  var getInfo = function (v) {
                      if (v.definedAt instanceof Data_Maybe.Just) {
                          var kind = (function () {
                              var $37 = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqChar))(Data_String.charAt(0)(v.identifier))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Char.toUpper)(Data_String.charAt(0)(v.identifier)));
                              if ($37) {
                                  return LanguageServer_Types.ClassSymbolKind.value;
                              };
                              var $38 = Data_String.contains("->")(v.identifier);
                              if ($38) {
                                  return LanguageServer_Types.FunctionSymbolKind.value;
                              };
                              return LanguageServer_Types.PropertySymbolKind.value;
                          })();
                          var fileName = getName(v.definedAt.value0);
                          return function __do() {
                              var v1 = LanguageServer_Uri.filenameToUri(fileName)();
                              return Data_Maybe.Just.create({
                                  name: v.identifier, 
                                  kind: LanguageServer_Types.symbolKindToInt(kind), 
                                  location: {
                                      uri: v1, 
                                      range: convTypePosition(v.definedAt.value0)
                                  }, 
                                  containerName: Data_Nullable.toNullable(Data_Maybe.Just.create(v["module'"]))
                              });
                          };
                      };
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
                  };
                  var opts = {
                      maxResults: Data_Maybe.Nothing.value, 
                      groupReexports: true
                  };
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getCompletion(port)(prefix)(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(modules)(Data_Function["const"]([  ]))(opts))(function (v) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Either.either(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)))(Control_Monad_Aff["liftEff'"](Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(getInfo)(v))))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Array.catMaybes(v1));
                      });
                  });
              };
          };
      };
  };
  var getDocumentSymbols = function (v) {
      return function (state) {
          return function (v1) {
              var v2 = Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(state);
              if (v2.port instanceof Data_Maybe.Just && v2.root instanceof Data_Maybe.Just) {
                  return getSymbols(v2.root.value0)(v2.port.value0)("")(Data_Maybe.maybe([  ])(Data_Array.singleton)(v2.modules.main));
              };
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
          };
      };
  };
  var getWorkspaceSymbols = function (v) {
      return function (state) {
          return function (v1) {
              var v2 = Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(state);
              if (v2.port instanceof Data_Maybe.Just && v2.root instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getLoadedModules(v2.port.value0))(function (v3) {
                      return getSymbols(v2.root.value0)(v2.port.value0)(v1.query)(v3);
                  });
              };
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)([  ]);
          };
      };
  };
  var getDefinition = function (docs) {
      return function (settings) {
          return function (state) {
              return function (v) {
                  var mkRange = function (v1) {
                      return {
                          start: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (v2) {
                              var $72 = {};
                              for (var $73 in v2) {
                                  if ({}.hasOwnProperty.call(v2, $73)) {
                                      $72[$73] = v2[$73];
                                  };
                              };
                              $72.character = 0;
                              return $72;
                          })(v1), 
                          end: Data_Newtype.over(LanguageServer_Types.newtypePosition)(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(function (c) {
                              var $75 = {};
                              for (var $76 in c) {
                                  if ({}.hasOwnProperty.call(c, $76)) {
                                      $75[$76] = c[$76];
                                  };
                              };
                              $75.character = c.character + 100 | 0;
                              return $75;
                          })(v1)
                      };
                  };
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)((function (v1) {
                      return v1.uri;
                  })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)(v.textDocument)))))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v1)(mkRange(v.position))))(function (v2) {
                          var v3 = Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(state);
                          var v4 = IdePurescript_Tokens.identifierAtPoint(v2)((function (v5) {
                              return v5.character;
                          })(Data_Newtype.un(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(v.position)));
                          if (v3.port instanceof Data_Maybe.Just && (v3.root instanceof Data_Maybe.Just && v4 instanceof Data_Maybe.Just)) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getTypeInfo(v3.port.value0)(v4.value0.word)(v3.modules.main)(v4.value0.qualifier)(IdePurescript_Modules.getUnqualActiveModules(v3.modules)(new Data_Maybe.Just(v4.value0.word)))(Data_Function.flip(IdePurescript_Modules.getQualModule)(v3.modules)))(function (v7) {
                                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toNullable)((function () {
                                      if (v7 instanceof Data_Maybe.Just && v7.value0.definedAt instanceof Data_Maybe.Just) {
                                          return function __do() {
                                              var v8 = LanguageServer_Uri.filenameToUri(Node_Path.resolve([ v3.root.value0 ])(v7.value0.definedAt.value0.name))();
                                              var range = {
                                                  start: convPosition(v7.value0.definedAt.value0.start), 
                                                  end: convPosition(v7.value0.definedAt.value0.start)
                                              };
                                              return Data_Maybe.Just.create({
                                                  uri: v8, 
                                                  range: range
                                              });
                                          };
                                      };
                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
                                  })()));
                              });
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
                      });
                  });
              };
          };
      };
  };
  exports["convPosition"] = convPosition;
  exports["convTypePosition"] = convTypePosition;
  exports["getDefinition"] = getDefinition;
  exports["getDocumentSymbols"] = getDocumentSymbols;
  exports["getSymbols"] = getSymbols;
  exports["getWorkspaceSymbols"] = getWorkspaceSymbols;
})(PS["LanguageServer.IdePurescript.Symbols"] = PS["LanguageServer.IdePurescript.Symbols"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var IdePurescript_Tokens = PS["IdePurescript.Tokens"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  var PscIde_Command = PS["PscIde.Command"];        
  var moduleBeforePart = "(?:^|[^A-Za-z_.])((?:[A-Z][A-Za-z0-9]*(?:\\.(?:[A-Z][A-Za-z0-9]*)?)*)?)";
  var moduleAfterPart = "([A-Za-z0-9]*(?:\\.[A-Za-z0-9]*)*)\\.";
  var afterPart = moduleAfterPart + (IdePurescript_Tokens.identPart + "(?:[^A-Za-z_'.]|$)");
  var moduleAtPoint = function (line) {
      return function (column) {
          var wordRange = function (left) {
              return function (right) {
                  return {
                      left: column - left | 0, 
                      right: column + right | 0
                  };
              };
          };
          var wr = wordRange(0)(0);
          var textBefore = Data_String.take(column)(line);
          var textAfter = Data_String.drop(column)(line);
          var match$prime = function (r) {
              return function (t) {
                  return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function (r$prime) {
                      return Data_String_Regex.match(r$prime)(t);
                  })(r);
              };
          };
          var beforeRegex = Data_String_Regex.regex(moduleBeforePart + "$")(Data_String_Regex_Flags.noFlags);
          var afterRegex = Data_String_Regex.regex("^" + afterPart)(Data_String_Regex_Flags.noFlags);
          var v = match$prime(afterRegex)(textAfter);
          var v1 = match$prime(beforeRegex)(textBefore);
          if (v1 instanceof Data_Maybe.Just && (v1.value0.length === 2 && (v1["value0"][1] instanceof Data_Maybe.Just && (v instanceof Data_Maybe.Just && (v.value0.length === 3 && v["value0"][1] instanceof Data_Maybe.Just))))) {
              return new Data_Maybe.Just({
                  word: v1["value0"][1].value0 + v["value0"][1].value0, 
                  range: wordRange(Data_String.length(v1["value0"][1].value0))(Data_String.length(v["value0"][1].value0))
              });
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var getTooltips = function (docs) {
      return function (settings) {
          return function (state) {
              return function (v) {
                  var wordRange = function (v1) {
                      return function (v2) {
                          return {
                              start: {
                                  line: v1.line, 
                                  character: v2.left
                              }, 
                              end: {
                                  line: v1.line, 
                                  character: v2.right
                              }
                          };
                      };
                  };
                  var lineRange = function (v1) {
                      return {
                          start: {
                              line: v1.line, 
                              character: 0
                          }, 
                          end: {
                              line: v1.line, 
                              character: v1.character + 100 | 0
                          }
                      };
                  };
                  var convertInfo = function (word) {
                      return function (v1) {
                          var showExpanded = Data_Maybe.isJust(v1.expandedType) && Data_Eq.notEq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v1.expandedType)(new Data_Maybe.Just(v1["type'"]));
                          var expandedTypeStr = word + (" :: " + Data_Maybe.fromMaybe("")(v1.expandedType));
                          var compactTypeStr = word + (" :: " + v1["type'"]);
                          return {
                              contents: LanguageServer_Types.markedString(compactTypeStr + (function () {
                                  if (showExpanded) {
                                      return "\x0a" + expandedTypeStr;
                                  };
                                  return "";
                              })()), 
                              range: Data_Nullable.toNullable(Data_Maybe.Nothing.value)
                          };
                      };
                  };
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_DocumentStore.getDocument(docs)((function (v1) {
                      return v1.uri;
                  })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)(v.textDocument)))))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_TextDocument.getTextAtRange(v1)(lineRange(v.position))))(function (v2) {
                          var v3 = Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(state);
                          var $$char = (function (v4) {
                              return v4.character;
                          })(Data_Newtype.un(LanguageServer_Types.newtypePosition)(LanguageServer_Types.Position)(v.position));
                          var v4 = moduleAtPoint(v2)($$char);
                          var v5 = IdePurescript_Tokens.identifierAtPoint(v2)($$char);
                          if (v3.port instanceof Data_Maybe.Just && v4 instanceof Data_Maybe.Just) {
                              var mod = IdePurescript_Modules.getQualModule(v4.value0.word)((Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(state)).modules);
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Nullable.toNullable((function () {
                                  var v7 = Data_Array.uncons(mod);
                                  if (v7 instanceof Data_Maybe.Just) {
                                      return Data_Maybe.Just.create({
                                          contents: {
                                              language: "text", 
                                              value: v7.value0.head
                                          }, 
                                          range: Data_Nullable.toNullable(Data_Maybe.Just.create(wordRange(v.position)(v4.value0.range)))
                                      });
                                  };
                                  return Data_Maybe.Nothing.value;
                              })()));
                          };
                          if (v3.port instanceof Data_Maybe.Just && v5 instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getTypeInfo(v3.port.value0)(v5.value0.word)(v3.modules.main)(v5.value0.qualifier)(IdePurescript_Modules.getUnqualActiveModules(v3.modules)(new Data_Maybe.Just(v5.value0.word)))(Data_Function.flip(IdePurescript_Modules.getQualModule)(v3.modules)))(function (v7) {
                                  return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Nullable.toNullable(Data_Functor.map(Data_Maybe.functorMaybe)(convertInfo(v5.value0.word))(v7)));
                              });
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
                      });
                  });
              };
          };
      };
  };
  exports["afterPart"] = afterPart;
  exports["getTooltips"] = getTooltips;
  exports["moduleAfterPart"] = moduleAfterPart;
  exports["moduleAtPoint"] = moduleAtPoint;
  exports["moduleBeforePart"] = moduleBeforePart;
})(PS["LanguageServer.IdePurescript.Tooltips"] = PS["LanguageServer.IdePurescript.Tooltips"] || {});
(function(exports) {
    "use strict";
  Object.defineProperty(exports, "__esModule", { value: true });
  var vscode_languageserver_1 =require("vscode-languageserver"); 
  exports.initConnection = function (commands) { return function (cb) { return function () {
      var conn = vscode_languageserver_1.createConnection();
      conn.listen();
      conn.onInitialize(function (params) {
          conn.console.info(JSON.stringify(params));
          cb({
              params: params,
              conn: conn
          })();
          return {
              capabilities: {
                  // Tell the client that the server works in FULL text document sync mode
                  textDocumentSync: vscode_languageserver_1.TextDocumentSyncKind.Full,
                  // Tell the client that the server support code complete
                  completionProvider: {
                      resolveProvider: false,
                      triggerCharacters: []
                  },
                  hoverProvider: true,
                  definitionProvider: true,
                  workspaceSymbolProvider: true,
                  documentSymbolProvider: true,
                  codeActionProvider: true,
                  executeCommandProvider: {
                      commands: commands
                  }
              }
          };
      });
      return conn;
  }; }; };
  exports.initDocumentStore = function (conn) { return function () {
      var documents = new vscode_languageserver_1.TextDocuments();
      documents.listen(conn);
      return documents;
  }; };
})(PS["LanguageServer.Setup"] = PS["LanguageServer.Setup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["LanguageServer.Setup"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var Prelude = PS["Prelude"];
  exports["initConnection"] = $foreign.initConnection;
  exports["initDocumentStore"] = $foreign.initDocumentStore;
})(PS["LanguageServer.Setup"] = PS["LanguageServer.Setup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Promise = PS["Control.Promise"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_JSON = PS["Data.Foreign.JSON"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var LanguageServer_Console = PS["LanguageServer.Console"];
  var LanguageServer_DocumentStore = PS["LanguageServer.DocumentStore"];
  var LanguageServer_Handlers = PS["LanguageServer.Handlers"];
  var LanguageServer_IdePurescript_Assist = PS["LanguageServer.IdePurescript.Assist"];
  var LanguageServer_IdePurescript_Build = PS["LanguageServer.IdePurescript.Build"];
  var LanguageServer_IdePurescript_CodeActions = PS["LanguageServer.IdePurescript.CodeActions"];
  var LanguageServer_IdePurescript_Commands = PS["LanguageServer.IdePurescript.Commands"];
  var LanguageServer_IdePurescript_Completion = PS["LanguageServer.IdePurescript.Completion"];
  var LanguageServer_IdePurescript_Config = PS["LanguageServer.IdePurescript.Config"];
  var LanguageServer_IdePurescript_Imports = PS["LanguageServer.IdePurescript.Imports"];
  var LanguageServer_IdePurescript_Search = PS["LanguageServer.IdePurescript.Search"];
  var LanguageServer_IdePurescript_Server = PS["LanguageServer.IdePurescript.Server"];
  var LanguageServer_IdePurescript_Symbols = PS["LanguageServer.IdePurescript.Symbols"];
  var LanguageServer_IdePurescript_Tooltips = PS["LanguageServer.IdePurescript.Tooltips"];
  var LanguageServer_IdePurescript_Types = PS["LanguageServer.IdePurescript.Types"];
  var LanguageServer_Setup = PS["LanguageServer.Setup"];
  var LanguageServer_TextDocument = PS["LanguageServer.TextDocument"];
  var LanguageServer_Types = PS["LanguageServer.Types"];
  var LanguageServer_Uri = PS["LanguageServer.Uri"];
  var Node_Process = PS["Node.Process"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];        
  var defaultServerState = {
      port: Data_Maybe.Nothing.value, 
      deactivate: Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit), 
      root: Data_Maybe.Nothing.value, 
      conn: Data_Maybe.Nothing.value, 
      modules: IdePurescript_Modules.initialModulesState, 
      modulesFile: Data_Maybe.Nothing.value, 
      diagnostics: Data_StrMap.empty
  };
  var main = function __do() {
      var v = Control_Monad_Eff_Ref.newRef(defaultServerState)();
      var v1 = Control_Monad_Eff_Ref.newRef(Data_Foreign.toForeign({}))();
      var v2 = Control_Monad_Eff_Ref.newRef(false)();
      (function __do() {
          var v3 = Node_Process.argv();
          if (v3.length === 5 && (v3[2] === "--stdio" && v3[3] === "--config")) {
              return Data_Either.either(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))(function (cc) {
                  return function __do() {
                      Control_Monad_Eff_Ref.writeRef(v1)(cc)();
                      return Control_Monad_Eff_Ref.writeRef(v2)(true)();
                  };
              })(Control_Monad_Except.runExcept(Data_Foreign_JSON.parseJSON(v3[4])))();
          };
          return Data_Unit.unit;
      })();
      var logError = function (l) {
          return function (s) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Functor.map(Data_Functor.functorFn)(function (v3) {
                  return v3.conn;
              })(Data_Newtype.unwrap(LanguageServer_IdePurescript_Types.newtypeServerState)))(Control_Monad_Eff_Ref.readRef(v)))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))(function (conn) {
                  if (l instanceof IdePurescript_PscIdeServer.Success) {
                      return LanguageServer_Console.log(conn)(s);
                  };
                  if (l instanceof IdePurescript_PscIdeServer.Info) {
                      return LanguageServer_Console.info(conn)(s);
                  };
                  if (l instanceof IdePurescript_PscIdeServer.Warning) {
                      return LanguageServer_Console.warn(conn)(s);
                  };
                  if (l instanceof IdePurescript_PscIdeServer["Error"]) {
                      return LanguageServer_Console.error(conn)(s);
                  };
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main line 75, column 39 - line 79, column 34: " + [ l.constructor.name ]);
              }));
          };
      };
      var launchAffLog = function ($155) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(function ($156) {
              return logError(IdePurescript_PscIdeServer["Error"].value)(Data_Show.show(Control_Monad_Eff_Exception.showError)($156));
          })(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($155));
      };
      var stopPscIdeServer = Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Functor.map(Data_Functor.functorFn)(function (v3) {
          return v3.deactivate;
      })(Data_Newtype.unwrap(LanguageServer_IdePurescript_Types.newtypeServerState)))(Control_Monad_Eff_Ref.readRef(v))))(function (v3) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(v3)(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v4) {
                  var $68 = {};
                  for (var $69 in v4) {
                      if ({}.hasOwnProperty.call(v4, $69)) {
                          $68[$69] = v4[$69];
                      };
                  };
                  $68.port = Data_Maybe.Nothing.value;
                  $68.deactivate = Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                  return $68;
              }))))(function () {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logError(IdePurescript_PscIdeServer.Success.value)("Stopped IDE server"));
              });
          });
      });
      var startPscIdeServer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logError(IdePurescript_PscIdeServer.Info.value)("Starting IDE server")))(function () {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(function ($157) {
              return (function (v3) {
                  return v3.root;
              })(Data_Newtype.unwrap(LanguageServer_IdePurescript_Types.newtypeServerState)($157));
          })(Control_Monad_Eff_Ref.readRef(v))))(function (v3) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v4) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(LanguageServer_IdePurescript_Server["startServer'"](v4)(v3)(logError)(logError))(function (v5) {
                      return LanguageServer_IdePurescript_Server.retry(logError)(6)((function () {
                          if (v5.port instanceof Data_Maybe.Just) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(PscIde.load(v5.port.value0)([  ])([  ]))(function (v6) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v7) {
                                      var $75 = {};
                                      for (var $76 in v7) {
                                          if ({}.hasOwnProperty.call(v7, $76)) {
                                              $75[$76] = v7[$76];
                                          };
                                      };
                                      $75.port = new Data_Maybe.Just(v5.port.value0);
                                      $75.deactivate = v5.quit;
                                      return $75;
                                  }))))(function () {
                                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(logError(IdePurescript_PscIdeServer.Success.value)("Started IDE server"));
                                  });
                              });
                          };
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                      })());
                  });
              });
          });
      });
      var restartPscIdeServer = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(stopPscIdeServer)(function () {
          return startPscIdeServer;
      });
      var v3 = LanguageServer_Setup.initConnection(LanguageServer_IdePurescript_Commands.commands)(function (v3) {
          return function __do() {
              (function __do() {
                  var dir = Node_Process.cwd();
                  return LanguageServer_Console.log(v3.conn)("Starting with cwd: " + dir)();
              })();
              (function __do() {
                  var args = Node_Process.argv();
                  return LanguageServer_Console.log(v3.conn)("Starting with args: " + Data_Show.show(Data_Show.showArray(Data_Show.showString))(args))();
              })();
              return Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v4) {
                  var $82 = {};
                  for (var $83 in v4) {
                      if ({}.hasOwnProperty.call(v4, $83)) {
                          $82[$83] = v4[$83];
                      };
                  };
                  $82.root = Data_Nullable.toMaybe(v3.params.rootPath);
                  return $82;
              }))();
          };
      })();
      Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v4) {
          var $89 = {};
          for (var $90 in v4) {
              if ({}.hasOwnProperty.call(v4, $90)) {
                  $89[$90] = v4[$90];
              };
          };
          $89.conn = new Data_Maybe.Just(v3);
          return $89;
      }))();
      var onConfig = function __do() {
          Control_Monad_Eff_Ref.writeRef(v2)(true)();
          return launchAffLog(startPscIdeServer)();
      };
      (function __do() {
          var v4 = Control_Monad_Eff_Ref.readRef(v2)();
          return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v4)(onConfig)();
      })();
      LanguageServer_Handlers.onDidChangeConfiguration(v3)(function (v4) {
          return function __do() {
              LanguageServer_Console.log(v3)("Got updated settings")();
              Control_Monad_Eff_Ref.writeRef(v1)(v4.settings)();
              var c = Control_Monad_Eff_Ref.readRef(v2)();
              return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(!c)(onConfig)();
          };
      })();
      LanguageServer_Console.log(v3)("PureScript Language Server started")();
      var v4 = LanguageServer_Setup.initDocumentStore(v3)();
      var showModule = function ($158) {
          return (function (v5) {
              return v5.moduleName + Data_Maybe.maybe("")(function (v6) {
                  return " as " + v6;
              })(v5.qualifier);
          })(Data_Newtype.unwrap(IdePurescript_Modules.moduleNewtype)($158));
      };
      var updateModules = function (uri) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v5) {
              if (v5.port instanceof Data_Maybe.Just && Data_Eq.notEq(Data_Maybe.eqMaybe(LanguageServer_Types.eqDocumentUri))(v5.modulesFile)(new Data_Maybe.Just(uri))) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(LanguageServer_DocumentStore.getDocument(v4)(uri))(LanguageServer_TextDocument.getText)))(function (v6) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Uri.uriToFilename(uri)))(function (v7) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(IdePurescript_Modules.getModulesForFileTemp(v5.port.value0)(v7)(v6))(function (v8) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v9) {
                                  var $103 = {};
                                  for (var $104 in v9) {
                                      if ({}.hasOwnProperty.call(v9, $104)) {
                                          $103[$104] = v9[$104];
                                      };
                                  };
                                  $103.modules = v8;
                                  $103.modulesFile = new Data_Maybe.Just(uri);
                                  return $103;
                              })));
                          });
                      });
                  });
              };
              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
          });
      };
      var runHandler = function (handlerName) {
          return function (docUri) {
              return function (f) {
                  return function (b) {
                      return Control_Promise.fromAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v5) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v6) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))(function (con) {
                                  return LanguageServer_Console.log(con)("handler " + handlerName);
                              })((function (v7) {
                                  return v7.conn;
                              })(Data_Newtype.unwrap(LanguageServer_IdePurescript_Types.newtypeServerState)(v6)))))(function () {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(updateModules)(docUri(b)))(function () {
                                      return f(v5)(v6)(b);
                                  });
                              });
                          });
                      }));
                  };
              };
          };
      };
      var getTextDocUri = function ($159) {
          return Data_Maybe.Just.create((function (v5) {
              return v5.uri;
          })(Data_Newtype.un(LanguageServer_Types.newtypeTextDocumentIdentifier)(LanguageServer_Types.TextDocumentIdentifier)((function (v5) {
              return v5.textDocument;
          })($159))));
      };
      LanguageServer_Handlers.onCompletion(v3)(runHandler("onCompletion")(getTextDocUri)(LanguageServer_IdePurescript_Completion.getCompletions(v4)))();
      LanguageServer_Handlers.onDefinition(v3)(runHandler("onDefinition")(getTextDocUri)(LanguageServer_IdePurescript_Symbols.getDefinition(v4)))();
      LanguageServer_Handlers.onDocumentSymbol(v3)(runHandler("onDocumentSymbol")(getTextDocUri)(LanguageServer_IdePurescript_Symbols.getDocumentSymbols))();
      LanguageServer_Handlers.onWorkspaceSymbol(v3)(runHandler("onWorkspaceSymbol")(Data_Function["const"](Data_Maybe.Nothing.value))(LanguageServer_IdePurescript_Symbols.getWorkspaceSymbols))();
      LanguageServer_Handlers.onHover(v3)(runHandler("onHover")(getTextDocUri)(LanguageServer_IdePurescript_Tooltips.getTooltips(v4)))();
      LanguageServer_Handlers.onCodeAction(v3)(runHandler("onCodeAction")(getTextDocUri)(LanguageServer_IdePurescript_CodeActions.getActions(v4)))();
      LanguageServer_Handlers.onShutdown(v3)(Control_Promise.fromAff(stopPscIdeServer))();
      LanguageServer_Handlers.onDidChangeWatchedFiles(v3)(function (v5) {
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(v5.changes)(function (v6) {
              var v7 = LanguageServer_Types.intToFileChangeType(v6.type);
              if (v7 instanceof Data_Maybe.Just && v7.value0 instanceof LanguageServer_Types.CreatedChangeType) {
                  return LanguageServer_Console.log(v3)("Created " + (Data_Newtype.un(LanguageServer_Types.newtypeDocumentUri)(LanguageServer_Types.DocumentUri)(v6.uri) + " - full build may be required"));
              };
              if (v7 instanceof Data_Maybe.Just && v7.value0 instanceof LanguageServer_Types.DeletedChangeType) {
                  return LanguageServer_Console.log(v3)("Deleted " + (Data_Newtype.un(LanguageServer_Types.newtypeDocumentUri)(LanguageServer_Types.DocumentUri)(v6.uri) + " - full build may be required"));
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          });
      })();
      LanguageServer_DocumentStore.onDidChangeContent(v4)(function (v5) {
          return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Eff_Ref.modifyRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v6) {
              var $119 = {};
              for (var $120 in v6) {
                  if ({}.hasOwnProperty.call(v6, $120)) {
                      $119[$120] = v6[$120];
                  };
              };
              $119.modulesFile = Data_Maybe.Nothing.value;
              return $119;
          })));
      })();
      LanguageServer_DocumentStore.onDidSaveDocument(v4)(function (v5) {
          return launchAffLog((function () {
              var uri = LanguageServer_TextDocument.getUri(v5.document);
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v6) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v7) {
                      return Control_Applicative.when(Control_Monad_Aff.applicativeAff)(LanguageServer_IdePurescript_Config.fastRebuild(v6))(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.sendDiagnosticsBegin(v3)))(function () {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(LanguageServer_IdePurescript_Build.getDiagnostics(uri)(v6)(v7))(function (v8) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Uri.uriToFilename(uri)))(function (v9) {
                                  var fileDiagnostics = Data_Maybe.fromMaybe([  ])(Data_StrMap.lookup(v9)(v8.diagnostics));
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Console.log(v3)("Built with " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v8.pscErrors)) + (" issues for file: " + (Data_Show.show(Data_Show.showString)(v9) + (", all diagnostic files: " + Data_Show.show(Data_Show.showArray(Data_Show.showString))(Data_StrMap.keys(v8.diagnostics)))))))))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (s1) {
                                          var $127 = {};
                                          for (var $128 in s1) {
                                              if ({}.hasOwnProperty.call(s1, $128)) {
                                                  $127[$128] = s1[$128];
                                              };
                                          };
                                          $127.diagnostics = Data_StrMap.insert(Data_Newtype.un(LanguageServer_Types.newtypeDocumentUri)(LanguageServer_Types.DocumentUri)(uri))(v8.pscErrors)(s1.diagnostics);
                                          $127.modulesFile = Data_Maybe.Nothing.value;
                                          return $127;
                                      })(v7))))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.publishDiagnostics(v3)({
                                              uri: uri, 
                                              diagnostics: fileDiagnostics
                                          })))(function () {
                                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.sendDiagnosticsEnd(v3));
                                          });
                                      });
                                  });
                              });
                          });
                      }));
                  });
              });
          })());
      })();
      var onBuild = function (docs) {
          return function (c) {
              return function (s) {
                  return function ($$arguments) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Handlers.sendDiagnosticsBegin(v3)))(function () {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(LanguageServer_IdePurescript_Build.fullBuild(logError)(docs)(c)(s)($$arguments))(function (v5) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                  LanguageServer_Console.log(v3)("Built with " + (Data_Show.show(Data_Show.showInt)(Data_Array.length(v5.pscErrors)) + " issues"))();
                                  var v6 = Data_Functor.map(Control_Monad_Eff.functorEff)(LanguageServer_IdePurescript_Build.collectByFirst)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(function (v6) {
                                      return function __do() {
                                          var v7 = Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value))(function (f) {
                                              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Functor.map(Data_Functor.functorFn)(Data_Maybe.Just.create)(Data_Newtype.un(LanguageServer_Types.newtypeDocumentUri)(LanguageServer_Types.DocumentUri)))(LanguageServer_Uri.filenameToUri(f));
                                          })(v6.filename)();
                                          return new Data_Tuple.Tuple(v7, v6);
                                      };
                                  })(v5.pscErrors))();
                                  var v7 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Functor.map(Data_Functor.functorFn)(function (v7) {
                                      return v7.diagnostics;
                                  })(Data_Newtype.un(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)))(Control_Monad_Eff_Ref.readRef(v))();
                                  var nonErrorFiles = Data_Array.difference(Data_Eq.eqString)(Data_StrMap.keys(v7))(Data_StrMap.keys(v6));
                                  Control_Monad_Eff_Ref.writeRef(v)(Data_Newtype.over(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.newtypeServerState)(LanguageServer_IdePurescript_Types.ServerState)(function (v8) {
                                      var $139 = {};
                                      for (var $140 in v8) {
                                          if ({}.hasOwnProperty.call(v8, $140)) {
                                              $139[$140] = v8[$140];
                                          };
                                      };
                                      $139.diagnostics = v6;
                                      return $139;
                                  })(s))();
                                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_StrMap.toUnfoldable(Data_Unfoldable.unfoldableArray)(v5.diagnostics))(function (v8) {
                                      return function __do() {
                                          var v9 = LanguageServer_Uri.filenameToUri(v8.value0)();
                                          return LanguageServer_Handlers.publishDiagnostics(v3)({
                                              uri: v9, 
                                              diagnostics: v8.value1
                                          })();
                                      };
                                  })();
                                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(LanguageServer_Types.DocumentUri)(nonErrorFiles))(function (uri) {
                                      return LanguageServer_Handlers.publishDiagnostics(v3)({
                                          uri: uri, 
                                          diagnostics: [  ]
                                      });
                                  })();
                                  return LanguageServer_Handlers.sendDiagnosticsEnd(v3)();
                              });
                          });
                      });
                  };
              };
          };
      };
      var noResult = Data_Foreign.toForeign(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
      var voidHandler = function (h) {
          return function (d) {
              return function (c) {
                  return function (s) {
                      return function (a) {
                          return Data_Functor.voidLeft(Control_Monad_Aff.functorAff)(h(d)(c)(s)(a))(noResult);
                      };
                  };
              };
          };
      };
      var simpleHandler = function (h) {
          return function (d) {
              return function (c) {
                  return function (s) {
                      return function (a) {
                          return Data_Functor.voidLeft(Control_Monad_Aff.functorAff)(h)(noResult);
                      };
                  };
              };
          };
      };
      var handlers = Data_StrMap.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.first(Data_Profunctor_Strong.strongFn)(LanguageServer_IdePurescript_Commands.cmdName))([ Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.caseSplitCmd)(voidHandler(LanguageServer_IdePurescript_Assist.caseSplit)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.addClauseCmd)(voidHandler(LanguageServer_IdePurescript_Assist.addClause)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.replaceSuggestionCmd)(voidHandler(LanguageServer_IdePurescript_CodeActions.onReplaceSuggestion)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.buildCmd)(voidHandler(onBuild)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.addCompletionImportCmd)(LanguageServer_IdePurescript_Imports.addCompletionImport(logError)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.addModuleImportCmd)(voidHandler(LanguageServer_IdePurescript_Imports["addModuleImport'"](logError))), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.startPscIdeCmd)(simpleHandler(startPscIdeServer)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.stopPscIdeCmd)(simpleHandler(stopPscIdeServer)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.restartPscIdeCmd)(simpleHandler(restartPscIdeServer)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.getAvailableModulesCmd)(LanguageServer_IdePurescript_Imports.getAllModules(logError)), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.searchCmd)(LanguageServer_IdePurescript_Search.search), Data_Tuple.Tuple.create(LanguageServer_IdePurescript_Commands.fixTypoCmd)(LanguageServer_IdePurescript_Assist.fixTypo(logError)) ]));
      return LanguageServer_Handlers.onExecuteCommand(v3)(function (v5) {
          return Control_Promise.fromAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v6) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v7) {
                  var v8 = Data_StrMap.lookup(v5.command)(handlers);
                  if (v8 instanceof Data_Maybe.Just) {
                      return v8.value0(v4)(v6)(v7)(v5["arguments"]);
                  };
                  if (v8 instanceof Data_Maybe.Nothing) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(LanguageServer_Console.error(v3)("Unknown command: " + v5.command)))(function () {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(noResult);
                      });
                  };
                  throw new Error("Failed pattern match at LanguageServer.IdePurescript.Main line 232, column 5 - line 236, column 14: " + [ v8.constructor.name ]);
              });
          }));
      })();
  };
  exports["defaultServerState"] = defaultServerState;
  exports["main"] = main;
})(PS["LanguageServer.IdePurescript.Main"] = PS["LanguageServer.IdePurescript.Main"] || {});
PS["LanguageServer.IdePurescript.Main"].main();
